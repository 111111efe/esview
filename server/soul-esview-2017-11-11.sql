/*
Navicat MySQL Data Transfer

Source Server         : aliyun
Source Server Version : 50719
Source Host           : 47.94.2.0:33639
Source Database       : soul-esview

Target Server Type    : MYSQL
Target Server Version : 50719
File Encoding         : 65001

Date: 2017-11-11 09:30:59
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for clazz
-- ----------------------------
DROP TABLE IF EXISTS `clazz`;
CREATE TABLE `clazz` (
  `id` bigint(20) NOT NULL,
  `name` varchar(255) DEFAULT NULL,
  `type` tinyint(2) DEFAULT NULL COMMENT '1：组件。',
  `sort` int(5) DEFAULT NULL,
  `rowStatus` tinyint(2) DEFAULT '1' COMMENT '0:无效，1有效',
  `createBy` varchar(255) DEFAULT NULL,
  `createDt` datetime DEFAULT NULL,
  `updateBy` varchar(255) DEFAULT NULL,
  `updateDt` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of clazz
-- ----------------------------
INSERT INTO `clazz` VALUES ('2', 'Layout', '1', '2', '1', 'admin', '2017-10-19 22:15:43', 'admin', '2017-10-19 22:15:46');
INSERT INTO `clazz` VALUES ('3', 'Form', '1', '3', '1', 'admin', '2017-10-19 22:15:43', 'admin', '2017-10-19 22:15:46');
INSERT INTO `clazz` VALUES ('4', 'View', '1', '5', '1', 'admin', '2017-10-19 22:15:43', 'admin', '2017-10-19 22:15:46');
INSERT INTO `clazz` VALUES ('6', 'Unclassified ', '1', '6', '1', 'admin', '2017-10-19 22:15:43', 'admin', '2017-10-19 22:15:46');

-- ----------------------------
-- Table structure for control
-- ----------------------------
DROP TABLE IF EXISTS `control`;
CREATE TABLE `control` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `nickname` varchar(255) DEFAULT NULL,
  `code` text,
  `clazzId` bigint(20) DEFAULT NULL,
  `sort` int(5) DEFAULT NULL,
  `rowStatus` tinyint(2) DEFAULT '1' COMMENT '0:无效，1有效',
  `createBy` varchar(255) DEFAULT NULL,
  `createDt` datetime DEFAULT NULL,
  `updateBy` varchar(255) DEFAULT NULL,
  `updateDt` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=213 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of control
-- ----------------------------
INSERT INTO `control` VALUES ('21', 'Col', 'Col', 'exports.cid = \'2\'\r\nexports.name = \'Col\';\r\nexports.nickname = \'Col\';\r\nexports.type = \'Col\';\r\nexports.template = `<Col{model}>{slot}</Col>`\r\nexports.desc = \'栅栏Col\';\r\nexports.allow = [];\r\nexports.model = {\r\n    span: {\r\n        type: \'text\',\r\n        value: \'12\',\r\n        desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\r\n    },\r\n    style: {\r\n        type: \'text\',\r\n        value: \'\',\r\n        desc: \'value\'\r\n    }\r\n};\r\n\r\n\r\nexports.script = function(eventCenter, appStore) {\r\n    const context = this\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    console.log(this.children)\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        style: context.model.style.value,\r\n        props: {\r\n            \'span\': context.model.span.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        directives: [{\r\n                name: \'droppable\'\r\n            },\r\n            {\r\n                name: \'editable\',\r\n                value: \'Col\'\r\n            }\r\n        ],\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n    }, context.children.map(function(child) {\r\n        return child.render(createElement)\r\n    }))\r\n}', '2', '3', '1', '1', null, '1', '2017-11-10 09:43:55');
INSERT INTO `control` VALUES ('22', 'Form', 'Form', 'exports.cid = \'3\'\r\nexports.name = \'Form\';\r\nexports.nickname = \'Form\';\r\nexports.type = \'Form\';\r\nexports.template = `<Form{model}>{slot}</Form>`;\r\nexports.desc = \'表单\';\r\nexports.allow = [1, 4];\r\nexports.model = {\r\n    url: {\r\n        type: \'text\',\r\n        value: \'./test/refreshTable\',\r\n        desc: \'请求地址\'\r\n    },\r\n    labelWidth: {\r\n        type: \'text\',\r\n        value: 100,\r\n        desc: \'表单label宽度\'\r\n    },\r\n    inline: {\r\n        type: \'boolean\',\r\n        value: false,\r\n        desc: \'行内\'\r\n    },\r\n    style: {\r\n        type: \'json\',\r\n        value: {},\r\n        desc: \'value\'\r\n    },\r\n\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n    eventCenter.bind(\'submit-form\', (param) => {\r\n\r\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\r\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\r\n        let vm = eventCenter.createElement.vm\r\n        console.log(params)\r\n        let pass = true\r\n\r\n        refs.forEach(ref => {\r\n            ref.$children[0].validate(function(valid) {\r\n                if (!valid) pass = false\r\n            })\r\n        })\r\n\r\n        if (!pass) {\r\n            return void vm.$Message.warning(\'please pass validation\')\r\n        }\r\n\r\n        params.pageSize = param.pageSize\r\n        params.pageNum = param.pageNum\r\n        params.url = this.model.url.value\r\n        eventCenter.trigger(\'refresh-table\', {\r\n            data: params\r\n        })\r\n    })\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        style: context.model.style.value,\r\n        props: {\r\n            inline: context.model.inline.value,\r\n            \'label-width\': context.model.labelWidth.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        directives: [{\r\n                name: \'droppable\'\r\n            },\r\n            {\r\n                name: \'editable\',\r\n                value: \'Form\'\r\n            }\r\n        ],\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        }\r\n    }, context.children.map(function(child) {\r\n        return child.render(createElement)\r\n    }))\r\n}', '3', '5', '1', '1', null, '1', '2017-11-09 17:42:48');
INSERT INTO `control` VALUES ('23', 'FormItem', 'FormItem', 'exports.cid = \'4\'\r\nexports.name = \'FormItem\';\r\nexports.nickname = \'FormItem\';\r\nexports.type = \'FormItem\';\r\nexports.template=`<FormItem{model}>{slot}</FormItem>`;\r\nexports.desc = \'表单Item\';\r\nexports.allow = [5,6,8,10,15,20,21,22,42,211,212];\r\nexports.model = {\r\n  label: {\r\n    type: \'text\',\r\n    value: \'test\',\r\n    desc: \'标签\'\r\n  },\r\n  style: {\r\n    type: \'json\',\r\n    value: {},\r\n    desc: \'value\'\r\n  }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n  \r\n};\r\n\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n\r\n  if(!context.initScript){\r\n    context.initScript=true\r\n  }\r\n\r\n\r\n  return createElement(context.type, {\r\n    style:context.model.style.value,\r\n    props: {\r\n      \'label\': context.model.label.value\r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    directives: [\r\n      {\r\n        name: \'droppable\'\r\n      },\r\n      {\r\n        name: \'editable\',\r\n        value: \'FormItem\'\r\n      }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n  }, context.children.map(function (child) {\r\n\r\n    return child.render(createElement)\r\n  }))\r\n};', '3', '4', '0', '1', null, '1', '2017-11-02 17:34:28');
INSERT INTO `control` VALUES ('24', 'Input', 'Input', 'exports.cid = \'5\'\r\nexports.name = \'Input\';\r\nexports.nickname = \'Input\';\r\nexports.type = \'Input\';\r\nexports.template=\r\n`\r\n    <Input{model}>\r\n    </Input>\r\n`\r\nexports.desc = \'输入框\';\r\nexports.allow = null;\r\nexports.model = {\r\n  disabled:{\r\n    type: \'boolean\',\r\n    value: false,\r\n    desc: \'value\'\r\n  },\r\n  style: {\r\n    type: \'json\',\r\n    value: {\r\n      width: \'200px\'\r\n    },\r\n    desc: \'value\'\r\n  }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n  const eventCenter = createElement.eventCenter\r\n    \r\n  if (!context.initScript) {\r\n    context.initScript = true\r\n    context.script(eventCenter)\r\n  }\r\n\r\n  return createElement(context.type, {\r\n    style: context.model.style.value,\r\n    props:{\r\n      disabled:context.model.disabled.value  \r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n    directives: [\r\n      {\r\n        name: \'droppable\'\r\n      },\r\n      {\r\n        name: \'editable\',\r\n        value: \'Input\'\r\n      }\r\n    ]\r\n  })\r\n}', '3', '6', '0', '1', null, null, null);
INSERT INTO `control` VALUES ('25', 'Button', 'Button', 'exports.cid = \'6\'\r\nexports.name = \'Button\';\r\nexports.nickname = \'Button\';\r\nexports.type = \'Button\';\r\nexports.template=`\r\n<Button{model}>{innerHTML}</Button>\r\n`\r\nexports.desc = \'按钮\';\r\nexports.allow = null;\r\nexports.model = {\r\n  name:{\r\n       type: \'text\',\r\n       compileType:\'innerHTML\',\r\n       value: \'提交\',\r\n       desc: \'\'\r\n  },\r\n  style: {\r\n    type: \'text\',\r\n    value: \'\',\r\n    desc: \'value\'\r\n  },\r\n  type: {\r\n    type: \'text\',\r\n    value: \'primary\',\r\n    desc: \'type of button\'\r\n  }\r\n};\r\n\r\nexports.script = function () {\r\n   \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n \r\n  \r\n  if(!context.initScript){\r\n      context.initScript=true  \r\n  }\r\n  \r\n  return createElement(context.type, {\r\n    style:context.model.style.value,\r\n    props:{\r\n      type:context.model.type.value  \r\n    },\r\n    domProps: {\r\n      controlConfig: this,\r\n      innerHTML: context.model.name.value\r\n    },\r\n    directives:[\r\n        {\r\n            name:\'editable\',\r\n            value:\'Button\'\r\n        }\r\n    ],\r\n    on:{\r\n      click(e){\r\n          \r\n        createElement.eventCenter.trigger(\'submit-form\',{\r\n            from:context.uid,\r\n            data:\'\'\r\n        })\r\n      }  \r\n    },\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n  })\r\n}', '3', '16', '1', '1', null, '1', '2017-11-02 19:50:21');
INSERT INTO `control` VALUES ('26', 'DropPanel', 'DropPanel', 'exports.cid = \'100\'\r\nexports.name = \'DropPanel\';\r\nexports.nickname = \'DropPanel\';\r\nexports.type = \'Div\';\r\nexports.template=`\r\n<div{model}>{slot}</div>\r\n`\r\nexports.desc = \'拖拽安置面板\';\r\nexports.allow = [];\r\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\r\nexports.model = {\r\n    style: {\r\n        type: \'json\',\r\n        value:{},\r\n        desc: \'value\'\r\n    }\r\n};\r\n\r\nexports.script = function () {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n\r\n  \r\n   if(!context.initScript){\r\n      context.initScript=true\r\n   \r\n  }\r\n  \r\n  \r\n  return createElement(\'Div\', {\r\n    style:context.model.style.value,\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    directives: [ \r\n        {\r\n           name: \'droppable\'\r\n        }\r\n    ],\r\n    \'class\': {\r\n      \'soul-drop-panel\': true\r\n    },\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/clear\', e)\r\n      }\r\n    }\r\n  }, context.children.map(function (child) {\r\n      \r\n    return child.render(createElement)\r\n  }))\r\n}\r\n', '6', '15', '1', '1', null, '1', '2017-11-01 21:41:20');
INSERT INTO `control` VALUES ('29', 'Checkbox', 'Checkbox', 'exports.cid = \'9\'\r\nexports.name = \'Checkbox\';\r\nexports.nickname = \'Checkbox\';\r\nexports.type = \'Checkbox\';\r\nexports.template=`\r\n    <Checkbox{model}>\r\n    </Checkbox>\r\n`\r\nexports.desc = \'多选\';\r\nexports.allow = null;\r\nexports.model = {\r\n  label:{\r\n        type:\'text\',\r\n        value: \'\',\r\n        desc: \'Checkbox的值\'\r\n  },\r\n  style: {\r\n    type: \'text\',\r\n    value: \'\',\r\n    desc: \'value\'\r\n  }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n    this.model.label.value=\'facebook\'\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n    const eventCenter = createElement.eventCenter\r\n   if(!context.initScript){\r\n      context.initScript=true\r\n      context.script(eventCenter)\r\n  }\r\n  \r\n  \r\n  return createElement(context.type, {\r\n    style:context.model.style.value,\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    props: {\r\n      label: context.model.label.value\r\n    },\r\n   \r\n    directives:[\r\n        {\r\n            name:\'editable\',\r\n            value:\'CheckBox\'\r\n        }\r\n    ]\r\n  })\r\n}\r\n', '3', '8', '0', '1', null, null, null);
INSERT INTO `control` VALUES ('30', 'RadioGroup', 'RadioGroup', 'exports.cid = \'8\'\r\nexports.name = \'RadioGroup\';\r\nexports.nickname = \'RadioGroup\';\r\nexports.type = \'RadioGroup\';\r\nexports.template=`\r\n    <RadioGroup{model}>\r\n        {slot}\r\n    </RadioGroup>\r\n`\r\nexports.desc = \'单选组\';\r\nexports.allow = [7];\r\nexports.model = {\r\n  key:{\r\n    type:\'text\',\r\n    value: \'\',\r\n    desc: \'\'     \r\n  }, \r\n    value:{\r\n        type:\'text\',\r\n        value: -1,\r\n        desc: \'选中的radio的值\'\r\n    },\r\n  style: {\r\n    type: \'json\',\r\n    value: {},\r\n    desc: \'value\'\r\n  }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n  \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n    const eventCenter = createElement.eventCenter\r\n  \r\n   if(!context.initScript){\r\n      context.initScript=true\r\n      context.script(eventCenter)\r\n   }\r\n  \r\n  \r\n  return createElement(context.type, {\r\n    style:context.model.style.value,\r\n    props: {\r\n      value: context.model.value.value\r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    directives: [\r\n        {\r\n            name:\'droppable\'\r\n        },\r\n        {\r\n            name:\'editable\',\r\n            value:\'RadioGroup\'\r\n        }\r\n    ]\r\n  }, context.children.map(function (child) {\r\n      \r\n    return child.render(createElement)\r\n    \r\n  }))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n', '3', '11', '0', '1', null, null, null);
INSERT INTO `control` VALUES ('32', 'CheckboxGroup', 'CheckboxGroup', 'exports.cid = \'10\'\r\nexports.name = \'CheckboxGroup\';\r\nexports.nickname = \'CheckboxGroup\';\r\nexports.type = \'CheckboxGroup\';\r\nexports.template=`\r\n    <CheckboxGroup{model}>\r\n        {slot}\r\n    </CheckboxGroup>\r\n`\r\nexports.desc = \'多选Group\';\r\nexports.allow = [9];\r\nexports.model = {\r\n  value:{\r\n    type:\'text\',\r\n    value: [],\r\n    desc: \'选中的Checkbox的值\'     \r\n  },   \r\n  style: {\r\n    type: \'json\',\r\n    value: {},\r\n    desc: \'value\'\r\n  }\r\n};\r\n\r\nexports.script = function () {\r\n \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n  \r\n  if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n  \r\n  \r\n  return createElement(context.type, {\r\n    style:context.model.style.value,\r\n    props :{\r\n       value:context.model.value.value  \r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    directives: [\r\n        {\r\n            name:\'droppable\'\r\n        },\r\n        {\r\n            name:\'editable\',\r\n            value:\'CheckboxGroup\'\r\n        }\r\n    ]\r\n  }, context.children.map(function (child) {\r\n    return child.render(createElement) \r\n  }))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n', '3', '9', '0', '1', null, null, null);
INSERT INTO `control` VALUES ('34', 'Table', 'Table', 'exports.cid = \'11\'\r\nexports.name = \'Table\';\r\nexports.nickname = \'Table\';\r\nexports.type = \'Table\';\r\nexports.template = `\r\n<Table{model}></Table>\r\n`\r\nexports.desc = \'表格\';\r\nexports.allow = null;\r\nexports.model = {\r\n  data: {\r\n    type: \'json\',\r\n    value: [{\r\n        name:\'xm\',\r\n        age:20,\r\n        address:\'sh\'\r\n    }],\r\n    save: false,\r\n    desc: \'\'\r\n  },\r\n  columns: {\r\n    type: \'json\',\r\n    value: [\r\n      {\r\n        title: \'name\',\r\n        key: \'name\'\r\n      },\r\n      {\r\n        title: \'age\',\r\n        key: \'age\'\r\n      },\r\n      {\r\n        title: \'address\',\r\n        key: \'address\'\r\n      }\r\n    ]\r\n  },\r\n  style: {\r\n    type: \'json\',\r\n    value: {},\r\n    desc: \'\'\r\n  }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n\r\n  if (!context.initScript) {\r\n    context.initScript = true\r\n  }\r\n\r\n\r\n  return createElement(context.type, {\r\n    style: context.model.style.value,\r\n    props: {\r\n      columns: context.model.columns.value,\r\n      data: context.model.data.value\r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    directives: [\r\n      {\r\n        name: \'editable\',\r\n        value: \'Table\'\r\n      }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n', '4', '5', '0', '1', null, null, null);
INSERT INTO `control` VALUES ('38', 'Frame', 'Frame', 'exports.cid = \'105\'\r\nexports.name = \'Frame\';\r\nexports.nickname = \'Frame\';\r\nexports.type = \'AppFrame\';\r\nexports.desc = \'项目骨架\';\r\nexports.allow = \'null\';\r\nexports.model = {\r\n  userInfo:{\r\n      type:\'json\',\r\n      value:{\r\n        \"username\": \"furioussoul\"\r\n      },\r\n      desc:\'loginUser\'\r\n  },\r\n  totalMenu:{\r\n      type:\'json\',\r\n      desc:\'menus\',\r\n      value:  []\r\n  }\r\n};\r\n\r\nexports.script = function(eventCenter){\r\n    this.model.showDropPanel = true\r\n    this.model.totalMenu.value = [\r\n          {\r\n            \"id\": 74784,\r\n            \"name\": \"esview\",\r\n            \"title\": \"esview\",\r\n            \"url\": \"/esview\",\r\n            \"orderNo\": 1,\r\n            \"mtype\": 0,\r\n            \"hasPermisson\": 1,\r\n            \"subMenuList\": [\r\n              {\r\n                \"id\": 74785,\r\n                \"name\": \"test\",\r\n                \"title\": \"test\",\r\n                \"url\": \"/esview/test\",\r\n                \"orderNo\": 1,\r\n                \"mtype\": 0,\r\n                \"hasPermisson\": 1,\r\n                \"subMenuList\": [\r\n                  {\r\n                    \"id\": 74796,\r\n                    \"name\": \"child1\",\r\n                    \"title\": \"child1\",\r\n                    \"url\": \"/esview/test/child1\",\r\n                    \"orderNo\": 1,\r\n                    \"mtype\": 1,\r\n                    \"hasPermisson\": 1,\r\n                    \"subMenuList\": null\r\n                  },\r\n                  {\r\n                    \"id\": 74797,\r\n                    \"name\": \"child2\",\r\n                    \"title\": \"child2\",\r\n                    \"url\": \"/esview/test/child2\",\r\n                    \"orderNo\": 1,\r\n                    \"mtype\": 1,\r\n                    \"hasPermisson\": 1,\r\n                    \"subMenuList\": null\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"id\": 74786,\r\n                \"name\": \"testRouter\",\r\n                \"title\": \"testRouter\",\r\n                \"url\": \"/test2/testRouter\",\r\n                \"orderNo\": 1,\r\n                \"mtype\": 0,\r\n                \"hasPermisson\": 1,\r\n                \"subMenuList\": [\r\n                  {\r\n                    \"id\": 74797,\r\n                    \"name\": \"test_router1\",\r\n                    \"title\": \"test_router1\",\r\n                    \"url\": \"/test2/testRouter/test_router1\",\r\n                    \"orderNo\": 1,\r\n                    \"mtype\": 1,\r\n                    \"hasPermisson\": 1,\r\n                    \"subMenuList\": null\r\n                  },\r\n                  {\r\n                    \"id\": 74798,\r\n                    \"name\": \"test_router2\",\r\n                    \"title\": \"test_router2\",\r\n                    \"url\": \"/test2/testRouter/test_router2\",\r\n                    \"orderNo\": 1,\r\n                    \"mtype\": 1,\r\n                    \"hasPermisson\": 1,\r\n                    \"subMenuList\": null\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n}\r\n\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n  const util = createElement.util\r\n  const dropPanel = context.children[0]\r\n  const eventCenter = createElement.eventCenter\r\n  \r\n  if(!context.initScript){\r\n      context.initScript=true\r\n      context.script(eventCenter)\r\n  }\r\n\r\n  return createElement(context.type, {\r\n    props:{\r\n      userInfo:context.model.userInfo.value,\r\n      totalMenu:context.model.totalMenu.value\r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    directives:[\r\n        {\r\n            name:\'editable\',\r\n            value:\'Frame\'\r\n        }\r\n    ],\r\n    scopedSlots: {\r\n      \'drop-panel\': ()=> context.model.showDropPanel && dropPanel.render(createElement)\r\n    }\r\n  })\r\n};\r\n', '2', '1', '0', '1', null, null, null);
INSERT INTO `control` VALUES ('41', 'Row', 'Row', 'exports.cid = \'1\'\r\nexports.name = \'Row\';\r\nexports.nickname = \'Row\';\r\nexports.type = \'Row\';\r\nexports.template= `<Row{model}>{slot}</Row>`\r\nexports.desc = \'栅栏Row\';\r\nexports.allow = [2];\r\nexports.model = {\r\n   type:{\r\n        type:\'text\',\r\n        value:\'flex\',\r\n        desc:\'\'\r\n   },\r\n  style: {\r\n    type: \'text\',\r\n    value: \'\',\r\n    desc: \'value\'\r\n  }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n    const eventCenter = createElement.eventCenter\r\n  \r\n   if(!context.initScript){\r\n      context.initScript=true\r\n      context.script(eventCenter)\r\n  }\r\n  \r\n  \r\n  return createElement(context.type, {\r\n    style:context.model.style.value,\r\n    props:{\r\n      type:context.model.type.value  \r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n   \r\n    directives: [ \r\n        {\r\n           name: \'droppable\'\r\n        },\r\n        {\r\n           name: \'editable\',\r\n           value:\'Row\'\r\n        }\r\n    ],\r\n    \r\n    nativeOn: {\r\n      click: function (e) {\r\n         \r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n  }, context.children.map(function (child) {\r\n    return child.render(createElement)\r\n  }))\r\n};\r\n', '2', '2', '1', '1', null, '1', '2017-11-02 17:22:26');
INSERT INTO `control` VALUES ('42', 'Tabs', 'Tabs', 'exports.cid = \'12\'\r\nexports.name = \'Tabs\';\r\nexports.nickname = \'Tabs\';\r\nexports.type = \'Tabs\';\r\nexports.template=\r\n`<Tabs{model}>{slot}</Tabs>`\r\nexports.desc = \'Tabs\';\r\nexports.allow = [13];\r\nexports.model = {\r\n  style: {\r\n    type: \'json\',\r\n    value: \'\',\r\n    desc: \'value\'\r\n  }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n  \r\n  if(!context.initScript){\r\n      context.initScript=true\r\n   \r\n  }\r\n  \r\n  return createElement(context.type, {\r\n    style:context.model.style.value,\r\n    props: {\r\n      \r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    directives: [\r\n        {\r\n          name:\'droppable\'  \r\n        },\r\n        {\r\n            name:\'editable\',\r\n            value:\'Tabs\'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n  }, context.children.map(function (child) {\r\n    return child.render(createElement)\r\n  }))\r\n};\r\n\r\n', '2', '11', '1', '1', null, null, null);
INSERT INTO `control` VALUES ('43', 'TabPane', 'TabPane', 'exports.cid = \'13\'\r\nexports.name = \'TabPane\';\r\nexports.nickname = \'TabPane\';\r\nexports.type = \'TabPane\';\r\nexports.template=\r\n`<TabPane{model}>{slot}</TabPane>`\r\nexports.desc = \'TabPane\';\r\nexports.allow = [];\r\nexports.model = {\r\n  label: {\r\n    type: \'text\',\r\n    value: \'tab\',\r\n    desc: \'label\'\r\n  },\r\n  name: {\r\n    type: \'text\',\r\n    value: \'\',\r\n    desc: \'name\'\r\n  },\r\n  style: {\r\n    type: \'json\',\r\n    value: \'\',\r\n    desc: \'value\'\r\n  }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n  \r\n  if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n \r\n  return createElement(context.type, {\r\n    style: context.model.style.value,\r\n    props: {\r\n      \'name\': context.model.name.value,\r\n      \'label\': context.model.label.value\r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    directives: [\r\n        {\r\n            name:\'droppable\'\r\n        },\r\n        {\r\n            name:\'editable\',\r\n            value:\'TabPane\'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n  }, context.children.map(function (child) {\r\n    return child.render(createElement)\r\n  }))\r\n};\r\n', '2', '12', '1', '1', null, null, null);
INSERT INTO `control` VALUES ('44', 'Card', 'Card', 'exports.cid = \'15\'\r\nexports.name = \'Card\';\r\nexports.nickname = \'Card\';\r\nexports.type = \'WrapCard\';\r\nexports.template = `<Card{model}>{slot}</Card>`\r\nexports.desc = \'Card\';\r\nexports.allow = [];\r\nexports.model = {\r\n    showHead: {\r\n        type: \'boolean\',\r\n\r\n        value: false,\r\n        desc: \'\'\r\n    },\r\n    showExtra: {\r\n        type: \'boolean\',\r\n\r\n        value: false,\r\n        desc: \'\'\r\n    },\r\n    showBody: {\r\n        type: \'boolean\',\r\n        exclude: true,\r\n        showConfig: false,\r\n        value: false,\r\n        desc: \'\'\r\n    },\r\n    style: {\r\n        type: \'json\',\r\n        value: \'\',\r\n        desc: \'value\'\r\n    },\r\n    disHover: {\r\n        type: \'boolean\',\r\n        value: false,\r\n        desc: \'禁用鼠标悬停显示阴影\'\r\n    }\r\n};\r\n\r\nexports.script = function() {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n    const dropTitle = context.children[0]\r\n    const dropExtra = context.children[1]\r\n    const dropBody = context.children[2]\r\n    dropTitle.showSlot = context.model.showHead.value\r\n    dropExtra.showSlot = context.model.showExtra.value\r\n    dropBody.showSlot = context.model.showBody.value\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n    }\r\n\r\n\r\n    return createElement(context.type, {\r\n        style: context.model.style.value,\r\n        props: {\r\n            showHead: context.model.showHead.value,\r\n            showExtra: context.model.showExtra.value,\r\n            disHover: context.model.disHover.value\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        directives: [{\r\n            name: \'editable\',\r\n            value: \'Card\'\r\n        }],\r\n        scopedSlots: {\r\n            \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\r\n            \'extra\': () => context.model.showExtra.value && dropExtra.render(createElement),\r\n            \'body\': () => dropBody.render(createElement)\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n    }, context.children.map(function(child) {\r\n        return child.render(createElement)\r\n    }))\r\n};', '2', '3', '1', '1', null, '1', '2017-11-09 17:48:23');
INSERT INTO `control` VALUES ('68', 'Radio', 'Radio', 'exports.cid = \'7\'\r\nexports.name = \'Radio\';\r\nexports.nickname = \'Radio\';\r\nexports.type = \'Radio\';\r\nexports.template=`\r\n    <Radio{model}>\r\n    </Radio>\r\n`\r\nexports.desc = \'单选\';\r\nexports.allow = null;\r\nexports.model = {\r\n    label:{\r\n        type:\'text\',\r\n        value: \'\',\r\n        desc: \'radio的值\'\r\n    },\r\n    style:{\r\n        type:\'text\',\r\n        value:\'\',\r\n        desc:\'\'\r\n    }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n    this.model.label.value=\'apple\'\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n    const eventCenter = createElement.eventCenter\r\n   if(!context.initScript){\r\n      context.initScript=true\r\n      context.script(eventCenter)\r\n  }\r\n  \r\n  \r\n  return createElement(context.type, {\r\n    props: {\r\n      label: context.model.label.value\r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n   \r\n   \r\n    directives:[\r\n        {\r\n            name:\'editable\',\r\n            value:\'Radio\'\r\n        }\r\n    ]\r\n  })\r\n}\r\n', '3', '10', '0', '1', null, null, null);
INSERT INTO `control` VALUES ('72', 'DatePicker', 'DatePicker', 'exports.cid = \'20\'\r\nexports.name = \'DatePicker\';\r\nexports.nickname = \'DatePicker\';\r\nexports.type = \'DatePicker\';\r\nexports.template=\r\n`\r\n    <DatePicker{model}>\r\n    </DatePicker>\r\n`\r\nexports.desc = \'日期选择\';\r\nexports.allow = null;\r\nexports.model = {\r\n    value:{\r\n        type:\'text\',\r\n        value:\'\',\r\n        desc:\'\'\r\n    },\r\n    format:{\r\n        type:\'text\',\r\n        value:\'yyyy-MM-dd\',\r\n        desc:\'\'\r\n    },\r\n    type:{\r\n        type:\'text\',\r\n        value:\'date\',\r\n        desc:\'\'\r\n    }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n  \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n   \r\n  if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n  \r\n  return createElement(context.type, {\r\n    props: {\r\n      format:\'yyyy-MM-dd\',\r\n      type:\"date\"\r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    directives:[\r\n        {\r\n            name:\'editable\',\r\n            value:\'DatePicker\'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n  })\r\n}\r\n\r\n', '3', '13', '0', '1', null, null, null);
INSERT INTO `control` VALUES ('73', 'TimePicker', 'TimePicker', 'exports.cid = \'21\'\r\nexports.name = \'TimePicker\';\r\nexports.nickname = \'TimePicker\';\r\nexports.type = \'TimePicker\';\r\nexports.template=`\r\n    <TimePicker{model}>\r\n    </TimePicker>\r\n`\r\nexports.desc = \'时间选择\';\r\nexports.allow = null;\r\nexports.model = {\r\n  \r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n  \r\n  if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n  \r\n  return createElement(context.type, {\r\n    props: {\r\n      format:\'HH:mm:ss\',\r\n      type:\"time\"\r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    directives:[\r\n        {\r\n            name:\'editable\',\r\n            value:\'TimePicker\'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n  })\r\n}\r\n', '3', '12', '0', '1', null, null, null);
INSERT INTO `control` VALUES ('75', 'Modal', 'Modal', 'exports.cid = \'30\'\r\nexports.name = \'Modal\';\r\nexports.nickname = \'Modal\';\r\nexports.type = \'Modal\';\r\nexports.desc = \'弹窗\';\r\nexports.allow = [];\r\nexports.model = {\r\n    \r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n  \r\n  if(!context.initScript){\r\n      context.initScript=true\r\n      context.script(eventCenter)\r\n  }\r\n  \r\n  \r\n  return createElement(context.type, {\r\n \r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    }\r\n  }, context.children.map(function (child) {\r\n    return child.render(createElement)\r\n  }))\r\n}', '6', '-100', '0', '1', null, null, null);
INSERT INTO `control` VALUES ('76', 'p', 'p', 'exports.cid = \'40\'\r\nexports.name = \'p\';\r\nexports.nickname = \'p\';\r\nexports.type = \'p\';\r\nexports.template=`\r\n<p{model}>{slot}{innerHTML}</p>\r\n`\r\nexports.desc = \'p\';\r\nexports.allow = [];\r\nexports.model = {\r\n    text:{\r\n        type:\'text\',\r\n        compileType:\'innerHTML\',\r\n        value:\'\',\r\n        desc:\'文本\'\r\n    },\r\n     style: {\r\n        type: \'json\',\r\n\r\n        value: {\r\n            padding:\'10px\'\r\n        },\r\n        desc: \'value\'\r\n    }\r\n};\r\n\r\nexports.script = function () {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n\r\n  \r\n  if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n\r\n  return createElement(context.type, {\r\n    style:context.model.style.value,\r\n    domProps: {\r\n      controlConfig: context,\r\n      innerHTML:context.model.text.value\r\n    },\r\n   \r\n    directives:[\r\n        {\r\n           name: \'droppable\'\r\n        },\r\n        {\r\n            name:\'editable\',\r\n            value:\'P\'\r\n        }\r\n    ],\r\n    on: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n  })\r\n}\r\n\r\n', '4', '-100', '0', '1', null, null, null);
INSERT INTO `control` VALUES ('78', 'Upload', 'Upload', 'exports.cid = \'42\'\nexports.name = \'Upload\';\nexports.nickname = \'Upload\';\nexports.type = \'WrapUpload\';\nexports.template=`<Upload{model}></Upload>`\nexports.desc = \'Upload\';\nexports.allow = [];\nexports.model = {\n  style: {\n    type: \'json\',\n    value: {\n      width: \'200px\'\n    },\n    desc: \'value\'\n  }\n};\n\nexports.script = function (eventCenter) {\n\n};\n\nexports.render = function (createElement) {\n  const context = this\n  const eventCenter = createElement.eventCenter\n  const store = createElement.store\n  \n  if(!context.initScript){\n      context.initScript=true\n      context.script(eventCenter)\n  }\n  \n\n  return createElement(context.type, {\n    style: context.model.style.value,\n    props:{\n      \n    },\n    domProps: {\n      controlConfig: this\n    },\n    directives: [\n        {\n            name:\'editable\',\n            value:\'Upload\'\n        }\n    ],\n    nativeOn: {\n      click: function (e) {\n        store.commit(\'dragModule/showEditorPanel\', e)\n      }\n    },\n  })\n};\n', '3', '15', '0', '1', null, '1', '2017-11-01 22:19:22');
INSERT INTO `control` VALUES ('80', 'Select', 'Select', 'exports.cid = \'15\'\r\nexports.name = \'Select\';\r\nexports.nickname = \'Select\';\r\nexports.type = \'WrapSelect\';\r\nexports.template =\r\n  `<Select{model}>\r\n        <Option value=\"beijing\" label=\"北京市\">\r\n            <span>北京</span>\r\n            <span style=\"float:right;color:#ccc\">Beiing</span>\r\n        </Option>\r\n        <Option value=\"shanghai\" label=\"上海市\">\r\n            <span>上海</span>\r\n            <span style=\"float:right;color:#ccc\">ShangHai</span>\r\n        </Option>\r\n        <Option value=\"shenzhen\" label=\"深圳市\">\r\n            <span>深圳</span>\r\n            <span style=\"float:right;color:#ccc\">ShenZhen</span>\r\n        </Option>\r\n</Select>`\r\nexports.desc = \'下拉框\';\r\nexports.allow = null;\r\nexports.model = {\r\n  items: {\r\n    exclude:true,\r\n    type: \'json\',\r\n    value: [{\r\n      label: \'北京市\',\r\n      value: 1\r\n    }, {\r\n      label: \'上海市\',\r\n      value: 2\r\n    }, {\r\n      label: \'深圳市\',\r\n      value: 3\r\n    }],\r\n    desc: \'\'\r\n  },\r\n  style: {\r\n    type: \'json\',\r\n    value: {\r\n      width: \'200px\'\r\n    },\r\n    desc: \'value\'\r\n  },\r\n  filterable: {\r\n    type: \'boolean\',\r\n    value: false,\r\n    desc: \'支持搜索\'\r\n  },\r\n  disabled: {\r\n    type: \'boolean\',\r\n    value: false,\r\n    desc: \'支持搜索\'\r\n  },\r\n  clearable: {\r\n    type: \'boolean\',\r\n    value: false,\r\n    desc: \'支持搜索\'\r\n  }\r\n};\r\n\r\nexports.script = function () {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n\r\n  if (!context.initScript) {\r\n    context.initScript = true\r\n  }\r\n\r\n\r\n  return createElement(context.type, {\r\n    style: context.model.style.value,\r\n    props: {\r\n      items:context.model.items.value,\r\n      filterable: context.model.filterable.value,\r\n      disabled: context.model.disabled.value,\r\n      clearable: context.model.clearable.value\r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    directives: [\r\n      {\r\n        name: \'editable\',\r\n        value: \'Select\'\r\n      }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    }\r\n  })\r\n}\r\n', '3', '7', '0', '1', null, '1', '2017-11-02 11:16:59');
INSERT INTO `control` VALUES ('105', 'Div', 'Div', 'exports.cid = \'44\'\r\nexports.name = \'Div\';\r\nexports.nickname = \'Div\';\r\nexports.type = \'Div\';\r\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\r\nexports.desc = \'Div\';\r\nexports.allow = [];\r\nexports.model = {\r\n    style:{\r\n      type:\'json\',\r\n      value:{\r\n        padding:\'10px\'\r\n      },\r\n      desc:\'\'\r\n    },\r\n    innerHTML:{\r\n      type:\'text\',\r\n      compileType:\'innerHTML\',\r\n      value:\'\',\r\n      desc:\'\'\r\n    }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n  \r\n   if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n  \r\n  return createElement(\'Div\', {\r\n    style:context.model.style.value,\r\n    domProps: {\r\n      innerHTML:context.model.innerHTML.value,\r\n      controlConfig: this\r\n    },\r\n    directives: [ \r\n        {\r\n           name: \'droppable\'\r\n        },\r\n        {\r\n            name:\'editable\',\r\n            value:\'Div\'\r\n        }\r\n    ],\r\n    on: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n  }, context.children.map(function (child) {\r\n      \r\n    return child.render(createElement)\r\n  }))\r\n}', '2', '100', '1', '1', '2017-10-29 00:45:34', '1', '2017-11-09 16:12:43');
INSERT INTO `control` VALUES ('110', 'Icon', 'Icon', 'exports.cid = \'46\'\r\nexports.name = \'Icon\';\r\nexports.nickname = \'Icon\';\r\nexports.type = \'Icon\';\r\nexports.template= `<Icon{model}></Icon>`\r\nexports.desc = \'Icon\';\r\nexports.allow = [];\r\nexports.model = {\r\n    type:{\r\n      type:\'select\',\r\n      value:\'refresh\',\r\n      desc:\'\'\r\n    }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n  \r\n   if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n  \r\n  return createElement(context.type, {\r\n    props:{\r\n      type:context.model.type.value  \r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    directives: [ \r\n        {\r\n            name:\'editable\',\r\n            value:\'Icon\'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n  })\r\n}', '4', '-100', '1', '1', '2017-10-31 21:05:01', '1', '2017-11-05 11:15:24');
INSERT INTO `control` VALUES ('122', 'Switch', 'Switch', 'exports.cid = \'201\'\r\nexports.name = \'Switch\';\r\nexports.nickname = \'Switch\';\r\nexports.type = \'i-switch\';\r\nexports.template=`\r\n    <Switch{model}>\r\n    </Switch>\r\n`\r\nexports.desc = \'开关\';\r\nexports.allow = null;\r\nexports.model = {\r\n    size:{\r\n        type:\'text\',\r\n        value: \'\',\r\n        desc: \'size\'\r\n    },\r\n    style:{\r\n        type:\'text\',\r\n        value:\'\',\r\n        desc:\'\'\r\n    }\r\n};\r\n\r\nexports.script = function () {\r\n   \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n   if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n  \r\n  \r\n  return createElement(context.type, {\r\n    props: {\r\n      size: context.model.size.value\r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    directives:[\r\n        {\r\n            name:\'editable\',\r\n            value:\'Switch\'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    }\r\n  })\r\n}', '3', '-100', '0', '1', '2017-11-02 12:35:16', '1', '2017-11-02 12:55:52');
INSERT INTO `control` VALUES ('123', 'AutoComplete', 'AutoComplete', 'exports.cid = \'202\'\r\nexports.name = \'AutoComplete\';\r\nexports.nickname = \'AutoComplete\';\r\nexports.type = \'AutoComplete\';\r\nexports.template =\r\n  `<AutoComplete{model}>\r\n        <Option value=\"beijing\" label=\"北京市\">\r\n            <span>北京</span>\r\n            <span style=\"float:right;color:#ccc\">Beiing</span>\r\n        </Option>\r\n        <Option value=\"shanghai\" label=\"上海市\">\r\n            <span>上海</span>\r\n            <span style=\"float:right;color:#ccc\">ShangHai</span>\r\n        </Option>\r\n        <Option value=\"shenzhen\" label=\"深圳市\">\r\n            <span>深圳</span>\r\n            <span style=\"float:right;color:#ccc\">ShenZhen</span>\r\n        </Option>\r\n</AutoComplete>`\r\nexports.desc = \'自动补全\';\r\nexports.allow = null;\r\nexports.model = {\r\n  \r\n  style: {\r\n    type: \'json\',\r\n    value: {\r\n      width: \'200px\'\r\n    },\r\n    desc: \'value\'\r\n  }\r\n};\r\n\r\nexports.script = function () {\r\n\r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n\r\n  if (!context.initScript) {\r\n    context.initScript = true\r\n  }\r\n\r\n\r\n  return createElement(context.type, {\r\n    style: context.model.style.value,\r\n    props: {\r\n     \r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    directives: [\r\n      {\r\n        name: \'editable\',\r\n        value: \'AutoComplete\'\r\n      }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    }\r\n  })\r\n}\r\n', '3', '-100', '0', '1', '2017-11-02 12:39:42', '1', '2017-11-02 12:55:46');
INSERT INTO `control` VALUES ('124', 'Slide', 'Slide', 'exports.cid = \'203\'\r\nexports.name = \'Slider\';\r\nexports.nickname = \'Slider\';\r\nexports.type = \'Slider\';\r\nexports.template=`\r\n    <Slider{model}>\r\n    </Slider>\r\n`\r\nexports.desc = \'Slider\';\r\nexports.allow = null;\r\nexports.model = {\r\n\r\n    style:{\r\n        type:\'text\',\r\n        value:\'\',\r\n        desc:\'\'\r\n    }\r\n};\r\n\r\nexports.script = function () {\r\n   \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n   if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n  \r\n  \r\n  return createElement(context.type, {\r\n    props: {\r\n     \r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    directives:[\r\n        {\r\n            name:\'editable\',\r\n            value:\'Slider\'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    }\r\n  })\r\n}', '3', '-100', '0', '1', '2017-11-02 12:42:26', '1', '2017-11-02 12:55:43');
INSERT INTO `control` VALUES ('125', 'Cascader', 'Cascader', 'exports.cid = \'204\'\r\nexports.name = \'Cascader\';\r\nexports.nickname = \'Cascader\';\r\nexports.type = \'Cascader\';\r\nexports.template=`\r\n    <Cascader{model}>\r\n    </Cascader>\r\n`\r\nexports.desc = \'Cascader\';\r\nexports.allow = null;\r\nexports.model = {\r\n    data:{\r\n        type:\'array\',\r\n        value: [{\r\n                    value: \'beijing\',\r\n                    label: \'北京\',\r\n                    children: [\r\n                        {\r\n                            value: \'gugong\',\r\n                            label: \'故宫\'\r\n                        },\r\n                        {\r\n                            value: \'tiantan\',\r\n                            label: \'天坛\'\r\n                        },\r\n                        {\r\n                            value: \'wangfujing\',\r\n                            label: \'王府井\'\r\n                        }\r\n                    ]\r\n                }, {\r\n                    value: \'jiangsu\',\r\n                    label: \'江苏\',\r\n                    children: [\r\n                        {\r\n                            value: \'nanjing\',\r\n                            label: \'南京\',\r\n                            children: [\r\n                                {\r\n                                    value: \'fuzimiao\',\r\n                                    label: \'夫子庙\',\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            value: \'suzhou\',\r\n                            label: \'苏州\',\r\n                            children: [\r\n                                {\r\n                                    value: \'zhuozhengyuan\',\r\n                                    label: \'拙政园\',\r\n                                },\r\n                                {\r\n                                    value: \'shizilin\',\r\n                                    label: \'狮子林\',\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n          }],\r\n        desc:\'\'\r\n    },\r\n    style:{\r\n        type:\'text\',\r\n        value:\'\',\r\n        desc:\'\'\r\n    }\r\n};\r\n\r\nexports.script = function () {\r\n   \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n   if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n  \r\n  \r\n  return createElement(context.type, {\r\n    props: {\r\n      data:context.model.data.value,\r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    directives:[\r\n        {\r\n            name:\'editable\',\r\n            value:\'Cascader\'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    }\r\n  })\r\n}', '3', '-100', '0', '1', '2017-11-02 12:46:53', '1', '2017-11-02 12:55:40');
INSERT INTO `control` VALUES ('126', 'Transfer', 'Transfer', 'exports.cid = \'205\'\r\nexports.name = \'Transfer\';\r\nexports.nickname = \'Transfer\';\r\nexports.type = \'Transfer\';\r\nexports.template=`\r\n    <Transfer{model}>\r\n    </Transfer>\r\n`\r\nexports.desc = \'Transfer\';\r\nexports.allow = null;\r\nexports.model = {\r\n    data:{\r\n        type:\'array\',\r\n        value: [\r\n                { \"key\": \"1\", \"label\": \"内容1\", \"disabled\": false },\r\n                { \"key\": \"2\", \"label\": \"内容2\", \"disabled\": true },\r\n                { \"key\": \"3\", \"label\": \"内容3\", \"disabled\": false }\r\n            ],\r\n        desc:\'\'\r\n    },\r\n    targetKeys: {\r\n       type:\'array\',\r\n       value:[\"1\",\"2\"],\r\n       desc:\'\'\r\n    },\r\n    style:{\r\n        type:\'text\',\r\n        value:\'\',\r\n        desc:\'\'\r\n    }\r\n};\r\n\r\nexports.script = function () {\r\n   \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n   if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n  \r\n  \r\n  return createElement(context.type, {\r\n    props: {\r\n      data:context.model.data.value,\r\n      \'target-keys\':context.model.targetKeys.value\r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    directives:[\r\n        {\r\n            name:\'editable\',\r\n            value:\'Transfer\'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    }\r\n  })\r\n}', '3', '-100', '0', '1', '2017-11-02 12:51:12', '1', '2017-11-02 12:55:37');
INSERT INTO `control` VALUES ('127', 'InputNumber', 'InputNumber', 'exports.cid = \'206\'\r\nexports.name = \'InputNumber\';\r\nexports.nickname = \'InputNumber\';\r\nexports.type = \'InputNumber\';\r\nexports.template=`\r\n    <InputNumber{model}>\r\n    </InputNumber>\r\n`\r\nexports.desc = \'InputNumber\';\r\nexports.allow = null;\r\nexports.model = {\r\n   \r\n    style:{\r\n        type:\'text\',\r\n        value:\'\',\r\n        desc:\'\'\r\n    }\r\n};\r\n\r\nexports.script = function () {\r\n   \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n   if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n  \r\n  \r\n  return createElement(context.type, {\r\n    props: {\r\n  \r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    directives:[\r\n        {\r\n            name:\'editable\',\r\n            value:\'InputNumber\'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    }\r\n  })\r\n}', '3', '-100', '0', '1', '2017-11-02 12:52:46', '1', '2017-11-02 12:55:29');
INSERT INTO `control` VALUES ('128', 'Rate', 'Rate', 'exports.cid = \'207\'\r\nexports.name = \'Rate\';\r\nexports.nickname = \'Rate\';\r\nexports.type = \'Rate\';\r\nexports.template=`\r\n    <Rate{model}>\r\n    </Rate>\r\n`\r\nexports.desc = \'Rate\';\r\nexports.allow = null;\r\nexports.model = {\r\n   \r\n    style:{\r\n        type:\'text\',\r\n        value:\'\',\r\n        desc:\'\'\r\n    }\r\n};\r\n\r\nexports.script = function () {\r\n   \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n   if(!context.initScript){\r\n      context.initScript=true\r\n  }\r\n  \r\n  \r\n  return createElement(context.type, {\r\n    props: {\r\n  \r\n    },\r\n    domProps: {\r\n      controlConfig: context\r\n    },\r\n    directives:[\r\n        {\r\n            name:\'editable\',\r\n            value:\'Rate\'\r\n        }\r\n    ],\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    }\r\n  })\r\n}', '3', '-100', '0', '1', '2017-11-02 12:53:30', '1', '2017-11-02 12:55:22');
INSERT INTO `control` VALUES ('129', 'FormInput', 'FormInput', 'exports.cid = \'211\'\r\nexports.name = \'FormInput\';\r\nexports.nickname = \'FormInput\';\r\nexports.type = \'FormInput\';\r\nexports.template =\r\n    `\r\n     <FormItem>\r\n        <Input>\r\n        </Input>\r\n    </FormItem>\r\n`\r\nexports.desc = \'输入框\';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    value: {\r\n        type: \'text\',\r\n        value: \'input\',\r\n        desc: \'\'\r\n    },\r\n    label: {\r\n        type: \'text\',\r\n        value: \'input\',\r\n        desc: \'\'\r\n    },\r\n    prop: {\r\n        type: \'text\',\r\n        showConfig: false,\r\n        value: \'\',\r\n        desc: \'\'\r\n    },\r\n    required: {\r\n        type: \'boolean\',\r\n        value: false,\r\n        desc: \'value\'\r\n    },\r\n    style: {\r\n        type: \'json\',\r\n        value: {\r\n            width: \'300px\'\r\n        },\r\n        desc: \'value\'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n\r\n\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        ref: \'formItem\' + context.uid,\r\n        style: context.model.style.value,\r\n        props: {\r\n            soul: context\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: \'editable\',\r\n            value: \'Input\'\r\n        }]\r\n    })\r\n}', '3', '-100', '1', '1', '2017-11-02 16:00:04', '1', '2017-11-10 09:57:04');
INSERT INTO `control` VALUES ('130', 'FormSelect', 'FormSelect', 'exports.cid = \'212\'\r\nexports.name = \'FormSelect\';\r\nexports.nickname = \'FormSelect\';\r\nexports.type = \'FormSelect\';\r\nexports.template =\r\n    `\r\n     <FormItem>\r\n        <Select>\r\n        </Select>\r\n    </FormItem>\r\n`\r\nexports.desc = \'下拉框\';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    items: {\r\n        exclude: true,\r\n        type: \'json\',\r\n        value: [{\r\n            label: \'北京市\',\r\n            value: \'1\'\r\n        }, {\r\n            label: \'上海市\',\r\n            value: \'2\'\r\n        }, {\r\n            label: \'深圳市\',\r\n            value: \'3\'\r\n        }],\r\n        desc: \'\'\r\n    },\r\n    value: {\r\n        type: \'text\',\r\n        showConfig: false,\r\n        value: \'\',\r\n        desc: \'\'\r\n    },\r\n    label: {\r\n        type: \'text\',\r\n        value: \'input\',\r\n        desc: \'\'\r\n    },\r\n    prop: {\r\n        type: \'text\',\r\n        showConfig: false,\r\n        value: \'\',\r\n        desc: \'\'\r\n    },\r\n    required: {\r\n        type: \'boolean\',\r\n        value: false,\r\n        desc: \'value\'\r\n    },\r\n    style: {\r\n        type: \'json\',\r\n        value: {\r\n            width: \'300px\'\r\n        },\r\n        desc: \'value\'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        ref: \'formItem\' + context.uid,\r\n        style: context.model.style.value,\r\n        props: {\r\n            soul: context\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: \'editable\',\r\n            value: \'Select\'\r\n        }]\r\n    })\r\n}', '3', '-100', '1', '1', '2017-11-02 16:53:40', '1', '2017-11-10 10:01:53');
INSERT INTO `control` VALUES ('131', 'FormNumber', 'FormInput', 'exports.cid = \'213\'\r\nexports.name = \'FormNumber\';\r\nexports.nickname = \'FormNumber\';\r\nexports.type = \'FormNumber\';\r\nexports.template =\r\n    `\r\n     <FormItem>\r\n        <InputNumber>\r\n        </InputNumber>\r\n    </FormItem>\r\n`\r\nexports.desc = \'数字输入框\';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    value: {\r\n        type: \'text\',\r\n        value: 0,\r\n        desc: \'\'\r\n    },\r\n    label: {\r\n        type: \'text\',\r\n        value: \'input\',\r\n        desc: \'\'\r\n    },\r\n    max: {\r\n        type: \'text\',\r\n        value: 10,\r\n        desc: \'\'\r\n    },\r\n    min: {\r\n        type: \'text\',\r\n        value: 0,\r\n        desc: \'\'\r\n    },\r\n    prop: {\r\n        type: \'text\',\r\n        showConfig: false,\r\n        value: \'\',\r\n        desc: \'\'\r\n    },\r\n    required: {\r\n        type: \'boolean\',\r\n        value: false,\r\n        desc: \'value\'\r\n    },\r\n    style: {\r\n        type: \'json\',\r\n        value: {\r\n\r\n        },\r\n        desc: \'value\'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        ref: \'formItem\' + context.uid,\r\n        style: context.model.style.value,\r\n        props: {\r\n            soul: context\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: \'editable\',\r\n            value: \'InputNumber\'\r\n        }]\r\n    })\r\n}', '3', '-100', '1', '1', '2017-11-02 17:44:23', '1', '2017-11-10 10:01:44');
INSERT INTO `control` VALUES ('132', 'FormNumber', 'FormInput', 'exports.cid = \'214\'\r\nexports.name = \'FormDate\';\r\nexports.nickname = \'FormDate\';\r\nexports.type = \'FormDate\';\r\nexports.template=\r\n`\r\n    <FormDate{model}>\r\n    </FormDate>\r\n`\r\nexports.desc = \'date\';\r\nexports.allow = null;\r\nexports.model = {\r\n  value:{\r\n    type: \'text\',\r\n    value: 0,\r\n    desc: \'\'\r\n  },\r\n  label:{\r\n    type: \'text\',\r\n    value: \'input\',\r\n    desc: \'\'\r\n  },\r\n  max:{\r\n    type: \'text\',\r\n    value: 10,\r\n    desc: \'\'\r\n  },\r\n  min:{\r\n    type: \'text\',\r\n    value: 0,\r\n    desc: \'\'\r\n  },\r\n  prop:{\r\n    type: \'text\',\r\n    showConfig:false,\r\n    value: \'value\',\r\n    desc: \'\'\r\n  },\r\n  required:{\r\n    type: \'boolean\',\r\n    value: false,\r\n    desc: \'value\'\r\n  },\r\n  style: {\r\n    type: \'json\',\r\n    value: {\r\n     \r\n    },\r\n    desc: \'value\'\r\n  }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n    \r\n  if (!context.initScript) {\r\n    context.initScript = true\r\n  }\r\n\r\n  return createElement(context.type, {\r\n    style: context.model.style.value,\r\n    props:{\r\n      soul:context \r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n    directives: [\r\n      {\r\n        name: \'editable\',\r\n        value: \'DatePicker\'\r\n      }\r\n    ]\r\n  })\r\n}', '6', '-100', '0', '1', '2017-11-02 18:15:00', '1', '2017-11-02 18:16:51');
INSERT INTO `control` VALUES ('133', 'FormUpload', 'FormUpload', 'exports.cid = \'215\'\r\nexports.name = \'FormUpload\';\r\nexports.nickname = \'FormUpload\';\r\nexports.type = \'FormUpload\';\r\nexports.template=\r\n`\r\n    <FormUpload{model}>\r\n    </FormUpload>\r\n`\r\nexports.desc = \'upload\';\r\nexports.allow = null;\r\nexports.model = {\r\n  value:{\r\n    type: \'text\',\r\n    value: 0,\r\n    desc: \'\'\r\n  },\r\n  label:{\r\n    type: \'text\',\r\n    value: \'input\',\r\n    desc: \'\'\r\n  },\r\n  max:{\r\n    type: \'text\',\r\n    value: 10,\r\n    desc: \'\'\r\n  },\r\n  min:{\r\n    type: \'text\',\r\n    value: 0,\r\n    desc: \'\'\r\n  },\r\n  prop:{\r\n    type: \'text\',\r\n    showConfig:false,\r\n    value: \'value\',\r\n    desc: \'\'\r\n  },\r\n  required:{\r\n    type: \'boolean\',\r\n    value: false,\r\n    desc: \'value\'\r\n  },\r\n  style: {\r\n    type: \'json\',\r\n    value: {\r\n     \r\n    },\r\n    desc: \'value\'\r\n  }\r\n};\r\n\r\nexports.script = function (eventCenter) {\r\n \r\n};\r\n\r\nexports.render = function (createElement) {\r\n  const context = this\r\n  const store = createElement.store\r\n    \r\n  if (!context.initScript) {\r\n    context.initScript = true\r\n  }\r\n\r\n  return createElement(context.type, {\r\n    style: context.model.style.value,\r\n    props:{\r\n      soul:context \r\n    },\r\n    domProps: {\r\n      controlConfig: this\r\n    },\r\n    nativeOn: {\r\n      click: function (e) {\r\n        store.commit(\'dragModule/showEditorPanel\', e)\r\n      }\r\n    },\r\n    directives: [\r\n      {\r\n        name: \'editable\',\r\n        value: \'InputNumber\'\r\n      }\r\n    ]\r\n  })\r\n}', '6', '-100', '0', '1', '2017-11-02 18:15:29', '1', '2017-11-02 18:15:29');
INSERT INTO `control` VALUES ('134', 'FormDate', 'FormDate', 'exports.cid = \'214\'\r\nexports.name = \'FormDate\';\r\nexports.nickname = \'FormDate\';\r\nexports.type = \'FormDate\';\r\nexports.template =\r\n    `\r\n   <FormItem>\r\n        <DatePicker>\r\n        </DatePicker>\r\n    </FormItem>\r\n`\r\nexports.desc = \'date\';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    value: {\r\n        type: \'text\',\r\n        value: 0,\r\n        desc: \'\'\r\n    },\r\n    type: {\r\n        type: \'text\',\r\n        value: \'datetime\',\r\n        desc: \'\'\r\n    },\r\n    format: {\r\n        type: \'text\',\r\n        value: \'yyyy-MM-dd HH:mm:ss\',\r\n        desc: \'\'\r\n    },\r\n    label: {\r\n        type: \'text\',\r\n        value: \'input\',\r\n        desc: \'\'\r\n    },\r\n    prop: {\r\n        type: \'text\',\r\n        showConfig: false,\r\n        value: \'\',\r\n        desc: \'\'\r\n    },\r\n    required: {\r\n        type: \'boolean\',\r\n        value: false,\r\n        desc: \'value\'\r\n    },\r\n    style: {\r\n        type: \'json\',\r\n        value: {\r\n\r\n        },\r\n        desc: \'value\'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        ref: \'formItem\' + context.uid,\r\n        style: context.model.style.value,\r\n        props: {\r\n            soul: context\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: \'editable\',\r\n            value: \'DatePicker\'\r\n        }]\r\n    })\r\n}', '3', '-100', '1', '1', '2017-11-02 18:17:11', '1', '2017-11-10 10:00:56');
INSERT INTO `control` VALUES ('135', 'FormUpload', 'FormUpload', 'exports.cid = \'215\'\r\nexports.name = \'FormUpload\';\r\nexports.nickname = \'FormUpload\';\r\nexports.type = \'FormUpload\';\r\nexports.template =\r\n    `\r\n    <FormItem>\r\n        <Upload>\r\n        </Upload>\r\n    </FormItem>\r\n`\r\nexports.desc = \'upload\';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    uploadUrl: {\r\n        type: \'text\',\r\n        value: \'/esview/file/upload_file\',\r\n        desc: \'\'\r\n    },\r\n    value: {\r\n        type: \'array\',\r\n        value: [],\r\n        desc: \'\'\r\n    },\r\n    label: {\r\n        type: \'text\',\r\n        value: \'input\',\r\n        desc: \'\'\r\n    },\r\n    prop: {\r\n        type: \'text\',\r\n        showConfig: false,\r\n        value: \'\',\r\n        desc: \'\'\r\n    },\r\n    required: {\r\n        type: \'boolean\',\r\n        value: false,\r\n        desc: \'value\'\r\n    },\r\n    style: {\r\n        type: \'json\',\r\n        value: {\r\n\r\n        },\r\n        desc: \'value\'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        ref: \'formItem\' + context.uid,\r\n        style: context.model.style.value,\r\n        props: {\r\n            soul: context\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: \'editable\',\r\n            value: \'Upload\'\r\n        }]\r\n    })\r\n}', '3', '-100', '1', '1', '2017-11-02 18:17:25', '1', '2017-11-10 10:01:37');
INSERT INTO `control` VALUES ('136', 'FormRadio', 'FormRadio', 'exports.cid = \'217\'\r\nexports.name = \'FormRadio\';\r\nexports.nickname = \'FormRadio\';\r\nexports.type = \'FormRadio\';\r\nexports.template =\r\n    `\r\n    <FormItem>\r\n        <Radio>\r\n        </Radio>\r\n    </FormItem>\r\n`\r\nexports.desc = \'radio\';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    items: {\r\n        exclude: true,\r\n        type: \'json\',\r\n        value: [{\r\n            label: \'male\',\r\n            value: \'1\'\r\n        }, {\r\n            label: \'female\',\r\n            value: \'2\'\r\n        }],\r\n        desc: \'\'\r\n    },\r\n    value: {\r\n        type: \'text\',\r\n        showConfig: false,\r\n        value: \'\',\r\n        desc: \'\'\r\n    },\r\n    label: {\r\n        type: \'text\',\r\n        value: \'input\',\r\n        desc: \'\'\r\n    },\r\n    prop: {\r\n        type: \'text\',\r\n        showConfig: false,\r\n        value: \'\',\r\n        desc: \'\'\r\n    },\r\n    required: {\r\n        type: \'boolean\',\r\n        value: false,\r\n        desc: \'value\'\r\n    },\r\n    style: {\r\n        type: \'json\',\r\n        value: {\r\n            width: \'300px\'\r\n        },\r\n        desc: \'value\'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        ref: \'formItem\' + context.uid,\r\n        style: context.model.style.value,\r\n        props: {\r\n            soul: context\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: \'editable\',\r\n            value: \'Radio\'\r\n        }]\r\n    })\r\n}', '3', '-100', '1', '1', '2017-11-03 08:33:06', '1', '2017-11-10 10:01:30');
INSERT INTO `control` VALUES ('137', 'FormCheckbox', 'FormCheckbox', 'exports.cid = \'218\'\r\nexports.name = \'FormCheckbox\';\r\nexports.nickname = \'FormCheckbox\';\r\nexports.type = \'FormCheckbox\';\r\nexports.template =\r\n    `\r\n    <FormItem>\r\n        <Checkbox>\r\n        </Checkbox>\r\n    </FormItem>\r\n\r\n`\r\nexports.desc = \'FormCheckbox\';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    items: {\r\n        exclude: true,\r\n        type: \'json\',\r\n        value: [\r\n            {\r\n                label: \'github\',\r\n                value: \'1\'\r\n            }, {\r\n                label: \'facebook\',\r\n                value: \'2\'\r\n            }, {\r\n                label: \'microsoft\',\r\n                value: \'3\'\r\n            }\r\n        ],\r\n        desc: \'\'\r\n    },\r\n    value: {\r\n        type: \'text\',\r\n        showConfig: false,\r\n        value: [1],\r\n        desc: \'\'\r\n    },\r\n    label: {\r\n        type: \'text\',\r\n        value: \'input\',\r\n        desc: \'\'\r\n    },\r\n    prop: {\r\n        type: \'text\',\r\n        showConfig: false,\r\n        value: \'\',\r\n        desc: \'\'\r\n    },\r\n    required: {\r\n        type: \'boolean\',\r\n        value: false,\r\n        desc: \'value\'\r\n    },\r\n    style: {\r\n        type: \'json\',\r\n        value: {\r\n            width: \'300px\'\r\n        },\r\n        desc: \'value\'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        ref: \'formItem\' + context.uid,\r\n        style: context.model.style.value,\r\n        props: {\r\n            soul: context\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: \'editable\',\r\n            value: \'Checkbox\'\r\n        }]\r\n    })\r\n}', '3', '-100', '1', '1', '2017-11-03 08:33:42', '1', '2017-11-10 10:08:17');
INSERT INTO `control` VALUES ('141', null, null, '', '2', '-104', '0', '33', '2017-11-05 13:16:08', '33', '2017-11-05 13:16:28');
INSERT INTO `control` VALUES ('142', null, null, 'fdsf\nfdsfd', '3', '-100', '0', '33', '2017-11-05 15:20:09', '33', '2017-11-05 17:03:45');
INSERT INTO `control` VALUES ('143', null, null, 'ffdsf', '6', '-100', '0', '33', '2017-11-05 15:20:19', '33', '2017-11-05 15:21:12');
INSERT INTO `control` VALUES ('144', null, null, '', '6', '-100', '0', '33', '2017-11-05 15:37:59', '33', '2017-11-05 15:37:59');
INSERT INTO `control` VALUES ('145', null, null, '', '6', '-100', '0', '33', '2017-11-05 15:38:13', '33', '2017-11-05 15:38:44');
INSERT INTO `control` VALUES ('146', null, null, '', '6', '-100', '0', '33', '2017-11-05 17:59:25', '33', '2017-11-05 17:59:25');
INSERT INTO `control` VALUES ('147', null, null, '', '3', '-100', '0', '33', '2017-11-05 21:10:26', '33', '2017-11-05 22:37:13');
INSERT INTO `control` VALUES ('148', null, null, '', '6', '-100', '0', '33', '2017-11-05 22:37:39', '33', '2017-11-06 09:31:39');
INSERT INTO `control` VALUES ('149', null, null, '', '6', '-100', '0', '33', '2017-11-06 09:31:46', '33', '2017-11-06 09:31:46');
INSERT INTO `control` VALUES ('150', null, null, '', '6', '-100', '0', '33', '2017-11-06 10:33:14', '33', '2017-11-06 11:54:43');
INSERT INTO `control` VALUES ('151', null, null, '', '6', '-100', '1', '11', '2017-11-06 16:33:18', '11', '2017-11-06 16:33:18');
INSERT INTO `control` VALUES ('152', null, null, 'fdsfsdfads sa', '4', '-100', '0', '33', '2017-11-06 16:48:21', '33', '2017-11-06 16:48:39');
INSERT INTO `control` VALUES ('153', null, null, 'alter table table add(column type);\n\ndatabase', '6', '-100', '0', '33', '2017-11-06 19:16:58', '33', '2017-11-07 09:06:05');
INSERT INTO `control` VALUES ('154', null, null, '', '6', '-100', '0', '33', '2017-11-07 09:45:19', '33', '2017-11-07 09:45:19');
INSERT INTO `control` VALUES ('155', null, null, '', '6', '-100', '0', '33', '2017-11-07 09:45:23', '33', '2017-11-07 10:35:07');
INSERT INTO `control` VALUES ('156', null, null, 'sdfsdf', '6', '-100', '0', '33', '2017-11-07 10:35:14', '33', '2017-11-07 11:14:30');
INSERT INTO `control` VALUES ('157', null, null, '', '3', '-100', '0', '33', '2017-11-07 11:15:38', '33', '2017-11-07 12:46:34');
INSERT INTO `control` VALUES ('158', null, null, 'ededr', '6', '-100', '0', '33', '2017-11-07 12:46:59', '33', '2017-11-07 12:46:59');
INSERT INTO `control` VALUES ('159', null, null, 'dog', '6', '-100', '0', '33', '2017-11-07 12:49:21', '33', '2017-11-07 12:49:21');
INSERT INTO `control` VALUES ('160', null, null, 'name    date    default sysdate    not null', '6', '-100', '0', '33', '2017-11-07 12:49:33', '33', '2017-11-07 12:49:33');
INSERT INTO `control` VALUES ('161', null, null, '的', '6', '-100', '0', '33', '2017-11-07 12:49:37', '33', '2017-11-07 12:49:37');
INSERT INTO `control` VALUES ('162', null, null, 'd', '6', '-100', '0', '33', '2017-11-07 12:49:41', '33', '2017-11-07 12:49:41');
INSERT INTO `control` VALUES ('163', null, null, 'dfff', '6', '-100', '0', '33', '2017-11-07 12:49:44', '33', '2017-11-07 12:49:44');
INSERT INTO `control` VALUES ('164', null, null, 'dfdf', '6', '-100', '0', '33', '2017-11-07 12:49:47', '33', '2017-11-07 12:49:47');
INSERT INTO `control` VALUES ('165', null, null, 'dfdf', '6', '-100', '0', '33', '2017-11-07 12:49:50', '33', '2017-11-07 12:49:50');
INSERT INTO `control` VALUES ('166', null, null, 'fdfdf', '6', '-100', '0', '33', '2017-11-07 12:49:53', '33', '2017-11-07 12:49:53');
INSERT INTO `control` VALUES ('167', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:49:57', '33', '2017-11-07 12:49:57');
INSERT INTO `control` VALUES ('168', null, null, 'fdfdffff', '6', '-100', '0', '33', '2017-11-07 12:50:00', '33', '2017-11-07 12:50:00');
INSERT INTO `control` VALUES ('169', null, null, 'dfdfdff', '6', '-100', '0', '33', '2017-11-07 12:50:03', '33', '2017-11-07 12:50:03');
INSERT INTO `control` VALUES ('170', null, null, 'dfdfr', '6', '-100', '0', '33', '2017-11-07 12:50:10', '33', '2017-11-07 12:50:10');
INSERT INTO `control` VALUES ('171', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:50:12', '33', '2017-11-07 12:50:12');
INSERT INTO `control` VALUES ('172', null, null, 'dfdf', '6', '-100', '0', '33', '2017-11-07 12:50:22', '33', '2017-11-07 12:50:22');
INSERT INTO `control` VALUES ('173', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:50:25', '33', '2017-11-07 12:50:25');
INSERT INTO `control` VALUES ('174', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:50:27', '33', '2017-11-07 12:50:27');
INSERT INTO `control` VALUES ('175', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:50:30', '33', '2017-11-07 12:50:30');
INSERT INTO `control` VALUES ('176', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:50:32', '33', '2017-11-07 12:50:32');
INSERT INTO `control` VALUES ('177', null, null, 'fdfdfdf', '6', '-100', '0', '33', '2017-11-07 12:50:35', '33', '2017-11-07 12:50:35');
INSERT INTO `control` VALUES ('178', null, null, 'xcxcxcc', '6', '-100', '0', '33', '2017-11-07 12:50:57', '33', '2017-11-07 12:50:57');
INSERT INTO `control` VALUES ('179', null, null, 'fgfg', '6', '-100', '0', '33', '2017-11-07 12:53:13', '33', '2017-11-07 12:53:13');
INSERT INTO `control` VALUES ('180', null, null, 'double', '6', '-100', '0', '33', '2017-11-07 12:53:17', '33', '2017-11-07 12:53:17');
INSERT INTO `control` VALUES ('181', null, null, 'alter table table add (column type);', '6', '-100', '0', '33', '2017-11-07 12:53:21', '33', '2017-11-07 12:53:21');
INSERT INTO `control` VALUES ('182', null, null, 'dfdf', '6', '-100', '0', '33', '2017-11-07 12:53:23', '33', '2017-11-07 12:53:23');
INSERT INTO `control` VALUES ('183', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:53:26', '33', '2017-11-07 12:53:26');
INSERT INTO `control` VALUES ('184', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:53:28', '33', '2017-11-07 12:53:28');
INSERT INTO `control` VALUES ('185', null, null, 'fdfdf', '6', '-100', '0', '33', '2017-11-07 12:53:31', '33', '2017-11-07 12:53:31');
INSERT INTO `control` VALUES ('186', null, null, 'dfdfd', '6', '-100', '0', '33', '2017-11-07 12:53:34', '33', '2017-11-07 12:53:34');
INSERT INTO `control` VALUES ('187', null, null, 'dfdf', '6', '-100', '0', '33', '2017-11-07 12:53:36', '33', '2017-11-07 12:53:36');
INSERT INTO `control` VALUES ('188', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:53:40', '33', '2017-11-07 12:53:40');
INSERT INTO `control` VALUES ('189', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:53:45', '33', '2017-11-07 12:53:45');
INSERT INTO `control` VALUES ('190', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:53:47', '33', '2017-11-07 12:53:47');
INSERT INTO `control` VALUES ('191', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:53:50', '33', '2017-11-07 12:53:50');
INSERT INTO `control` VALUES ('192', null, null, 'dfdfdf', '6', '-100', '0', '33', '2017-11-07 12:53:56', '33', '2017-11-07 13:08:22');
INSERT INTO `control` VALUES ('193', null, null, '', '6', '-100', '0', '33', '2017-11-07 16:52:51', '33', '2017-11-07 16:52:51');
INSERT INTO `control` VALUES ('194', null, null, 'having', '6', '-100', '0', '33', '2017-11-07 16:53:10', '33', '2017-11-07 16:53:10');
INSERT INTO `control` VALUES ('195', null, null, '', '6', '-100', '0', '33', '2017-11-07 16:53:27', '33', '2017-11-07 16:53:27');
INSERT INTO `control` VALUES ('196', null, null, 'werwerv', '6', '-100', '0', '33', '2017-11-08 15:53:29', '33', '2017-11-08 15:53:29');
INSERT INTO `control` VALUES ('197', null, null, '', '6', '-100', '0', '33', '2017-11-08 22:59:04', '33', '2017-11-08 22:59:04');
INSERT INTO `control` VALUES ('198', null, null, '', '6', '-100', '0', '33', '2017-11-08 23:09:33', '33', '2017-11-08 23:09:33');
INSERT INTO `control` VALUES ('199', null, null, '', '6', '-100', '0', '33', '2017-11-09 14:50:04', '33', '2017-11-09 18:01:40');
INSERT INTO `control` VALUES ('200', 'Content', 'Content', 'exports.cid = \'218\'\r\nexports.name = \'Content\';\r\nexports.nickname = \'Content\';\r\nexports.type = \'p\';\r\nexports.template =\r\n    `<p{model} {slotName}>{slot}{innerHTML}</p>`\r\nexports.desc = \'Content\';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    value: {\r\n        type: \'text\',\r\n        value: \'this is content\',\r\n        desc: \'\'\r\n    },\r\n    style: {\r\n        type: \'json\',\r\n        value: {\r\n            minHeight: \'10px\'\r\n        },\r\n        desc: \'value\'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n\r\n        style: context.model.style.value,\r\n        props: {\r\n            soul: context\r\n        },\r\n        domProps: {\r\n            innerHTML: context.model.value.value,\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: \'editable\',\r\n            value: \'Content\'\r\n        }]\r\n    })\r\n}', '4', '-100', '1', '1', '2017-11-09 15:03:29', '1', '2017-11-09 16:12:03');
INSERT INTO `control` VALUES ('201', 'Page', 'Page', 'exports.cid = \'220\'\r\nexports.name = \'Table\';\r\nexports.nickname = \'Table\';\r\nexports.type = \'wrapTable\';\r\nexports.template =\r\n    `<p{model} {slotName}>{slot}{innerHTML}</p>`\r\nexports.desc = \'Content\';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    columns: {\r\n        showConfig: false,\r\n        exclude: true,\r\n        type: \'array\',\r\n        value: [],\r\n        desc: \'\'\r\n    },\r\n    data: {\r\n        showConfig: false,\r\n        exclude: true,\r\n        type: \'array\',\r\n        value: [],\r\n        desc: \'\'\r\n    },\r\n    current: {\r\n        type: \'text\',\r\n        value: 1,\r\n        desc: \'\'\r\n    },\r\n    pageSize: {\r\n        type: \'text\',\r\n        value: 10,\r\n        desc: \'\'\r\n    },\r\n    total: {\r\n        type: \'text\',\r\n        value: 100,\r\n        desc: \'\'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n    this.model.columns.value = [{\r\n            title: \'name\',\r\n            key: \'name\'\r\n        },\r\n        {\r\n            title: \'age\',\r\n            key: \'age\'\r\n        },\r\n        {\r\n            title: \'gender\',\r\n            key: \'gender\'\r\n        }\r\n    ]\r\n\r\n    eventCenter.trigger(\'submit-form\', {\r\n        from: this.uid,\r\n        data: {\r\n            pageNum: this.model.current.value,\r\n            pageSize: this.model.pageSize.value\r\n        }\r\n    })\r\n\r\n    let vm = eventCenter.createElement.vm\r\n    eventCenter.bind(\'refresh-table\', (param) => {\r\n        this.model.loading = true\r\n        let url = param.data.url\r\n        delete param.data.url\r\n        vm.$http.post(url, param.data).then(res => {\r\n            if (res.data.code === 10000) {\r\n                this.model.loading = false\r\n                this.model.data.value = res.data.data\r\n                this.model.total.value = res.data.length\r\n            }\r\n        })\r\n    })\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n\r\n        props: {\r\n            current: context.model.current.value,\r\n            \'pageSize\': context.model.pageSize.value,\r\n            total: context.model.total.value,\r\n            \'show-total\': true,\r\n            \'show-elevator\': true,\r\n            columns: context.model.columns.value,\r\n            data: context.model.data.value,\r\n            loading: context.model.loading\r\n\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            \'click\': function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n        on: {\r\n            \'on-change\': function(e) {\r\n                createElement.eventCenter.trigger(\'submit-form\', {\r\n                    from: context.uid,\r\n                    data: {\r\n                        pageNum: context.model.current.value,\r\n                        pageSize: context.model.pageSize.value\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        directives: [{\r\n            name: \'editable\',\r\n            value: \'Table\'\r\n        }]\r\n    })\r\n}', '6', '-100', '0', '1', '2017-11-09 16:24:22', '1', '2017-11-09 17:54:47');
INSERT INTO `control` VALUES ('202', 'Table', 'Table', 'exports.cid = \'220\'\r\nexports.name = \'Table\';\r\nexports.nickname = \'Table\';\r\nexports.type = \'wrapTable\';\r\nexports.template =\r\n    `<Table{model} {slotName}></Table>`\r\nexports.desc = \'Content\';\r\nexports.allow = null;\r\nexports.isFormItem = true;\r\nexports.model = {\r\n    columns: {\r\n        showConfig: false,\r\n        exclude: true,\r\n        type: \'array\',\r\n        value: [],\r\n        desc: \'\'\r\n    },\r\n    data: {\r\n        showConfig: false,\r\n        exclude: true,\r\n        dontSave: true,\r\n        type: \'array\',\r\n        value: [],\r\n        desc: \'\'\r\n    },\r\n    current: {\r\n        type: \'text\',\r\n        value: 1,\r\n        desc: \'\'\r\n    },\r\n    pageSize: {\r\n        type: \'text\',\r\n        value: 10,\r\n        desc: \'\'\r\n    },\r\n    total: {\r\n        type: \'text\',\r\n        value: 100,\r\n        desc: \'\'\r\n    }\r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n    this.model.columns.value = [{\r\n            title: \'name\',\r\n            key: \'name\'\r\n        },\r\n        {\r\n            title: \'age\',\r\n            key: \'age\'\r\n        },\r\n        {\r\n            title: \'gender\',\r\n            key: \'gender\'\r\n        }\r\n    ]\r\n\r\n\r\n\r\n    let vm = eventCenter.createElement.vm\r\n    eventCenter.bind(\'refresh-table\', (param) => {\r\n        this.model.loading = true\r\n        let url = param.data.url\r\n        delete param.data.url\r\n        vm.$http.post(url, param.data).then(res => {\r\n            if (res.data.code === 10000) {\r\n                this.model.loading = false\r\n                this.model.data.value = res.data.data\r\n                this.model.total.value = res.data.data.length\r\n            }\r\n        })\r\n    })\r\n\r\n    eventCenter.trigger(\'submit-form\', {\r\n        from: this.uid,\r\n        data: {\r\n            pageNum: this.model.current.value,\r\n            pageSize: this.model.pageSize.value\r\n        }\r\n    })\r\n};\r\n\r\nexports.render = function(createElement) {\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n\r\n        props: {\r\n            current: context.model.current.value,\r\n            \'pageSize\': context.model.pageSize.value,\r\n            total: context.model.total.value,\r\n            \'show-total\': true,\r\n            \'show-elevator\': true,\r\n            columns: context.model.columns.value,\r\n            data: context.model.data.value,\r\n            loading: context.model.loading\r\n\r\n        },\r\n        domProps: {\r\n            controlConfig: this\r\n        },\r\n        nativeOn: {\r\n            \'click\': function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n        on: {\r\n            \'on-change\': function(e) {\r\n                createElement.eventCenter.trigger(\'submit-form\', {\r\n                    from: context.uid,\r\n                    data: {\r\n                        pageNum: context.model.current.value,\r\n                        pageSize: context.model.pageSize.value\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        directives: [{\r\n            name: \'editable\',\r\n            value: \'Table\'\r\n        }]\r\n    })\r\n}', '4', '-100', '1', '1', '2017-11-09 17:56:02', '1', '2017-11-10 12:51:21');
INSERT INTO `control` VALUES ('203', null, null, '', '6', '-100', '0', '33', '2017-11-09 22:07:53', '33', '2017-11-09 22:13:26');
INSERT INTO `control` VALUES ('204', null, null, '计划就话估计的撒发的撒的撒发的撒', '6', '-100', '0', '33', '2017-11-09 22:08:00', '33', '2017-11-10 10:10:18');
INSERT INTO `control` VALUES ('205', null, null, '', '4', '-100', '0', '33', '2017-11-09 23:55:04', '33', '2017-11-10 12:33:01');
INSERT INTO `control` VALUES ('206', null, null, '', '6', '-100', '0', '33', '2017-11-10 07:23:46', '33', '2017-11-10 07:23:46');
INSERT INTO `control` VALUES ('207', null, null, '', '6', '-100', '0', '33', '2017-11-10 09:33:43', '33', '2017-11-10 10:12:23');
INSERT INTO `control` VALUES ('208', null, null, 'asdf', '6', '-100', '0', '33', '2017-11-10 10:12:39', '33', '2017-11-10 10:12:39');
INSERT INTO `control` VALUES ('209', null, null, 'dsgfd', '2', '-100', '0', '33', '2017-11-10 15:05:03', '33', '2017-11-10 15:05:18');
INSERT INTO `control` VALUES ('210', 'Label', 'Label', 'exports.cid = \'2111\'\r\nexports.name = \'FormLabel\';\r\nexports.nickname = \'FormLabel\';\r\nexports.type = \'FormLabel\';\r\nexports.template =\r\n    `\r\n        <Label>\r\n        </Label>\r\n`\r\nexports.model = {\r\n    label: {\r\n        type: \'text\',\r\n        value: \'input\',\r\n        desc: \'\'\r\n    }\r\n\r\n    \r\n};\r\n\r\nexports.script = function(eventCenter) {\r\n\r\n};\r\n\r\nexports.render = function(createElement) {\r\n\r\n\r\n    const context = this\r\n    const store = createElement.store\r\n\r\n    if (!context.initScript) {\r\n        context.initScript = true\r\n        context.script(createElement.eventCenter)\r\n    }\r\n\r\n    return createElement(context.type, {\r\n        ref: \'formItem\' + context.uid,\r\n        nativeOn: {\r\n            click: function(e) {\r\n                store.commit(\'dragModule/showEditorPanel\', e)\r\n            }\r\n        },\r\n        directives: [{\r\n            name: \'editable\',\r\n            value: \'Input\'\r\n        }]\r\n    })\r\n}', '3', '-100', '0', '33', '2017-11-10 15:46:55', '33', '2017-11-10 16:18:50');
INSERT INTO `control` VALUES ('211', null, null, '', '6', '-100', '0', '33', '2017-11-10 17:49:53', '33', '2017-11-10 17:53:44');
INSERT INTO `control` VALUES ('212', null, null, 'ManageControl\r\nesview > Develop > OperateControl\r\ngithub\r\n33 http: //47.94.2.0:9090/#/esview/develop/index\r\n    save\r\n\r\n   http: //47.94.2.0:9090/#/esview/develop/index\r\n    1\r\nhttp: //47.94.2.0:9090/#/esview/develop/indexhttp://47.94.2.0:9090/#/esview/develop/index', '6', '-96', '0', '33', '2017-11-10 17:50:08', '33', '2017-11-10 17:53:49');

-- ----------------------------
-- Table structure for page
-- ----------------------------
DROP TABLE IF EXISTS `page`;
CREATE TABLE `page` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'appId',
  `name` varchar(30) DEFAULT NULL COMMENT 'app name',
  `pageSoul` longtext COMMENT 'syntax tree of page',
  `appId` bigint(20) DEFAULT NULL,
  `createBy` varchar(255) DEFAULT NULL,
  `createDt` datetime DEFAULT NULL,
  `updateBy` varchar(255) DEFAULT NULL,
  `updateDt` datetime DEFAULT NULL,
  `rowStatus` tinyint(2) DEFAULT '1' COMMENT '0:无效，1有效',
  PRIMARY KEY (`id`),
  KEY `name` (`name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=307 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of page
-- ----------------------------
INSERT INTO `page` VALUES ('255', '1', '{\"children\":[{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":4,\"pid\":3,\"initScript\":true}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":3,\"initScript\":true}', null, '1', '2017-11-01 21:03:24', '1', '2017-11-01 21:03:24', '0');
INSERT INTO `page` VALUES ('256', '3', '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":4,\"initScript\":true}', null, '33', '2017-11-01 21:04:49', '33', '2017-11-01 21:04:49', '0');
INSERT INTO `page` VALUES ('257', '1', '{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":1,\"pid\":8,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":8,\"pid\":7,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":7,\"initScript\":false,\"maxUid\":2}', null, '33', '2017-11-01 21:22:15', '33', '2017-11-01 21:22:24', '0');
INSERT INTO `page` VALUES ('258', '1', '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":4,\"initScript\":true}', null, '33', '2017-11-01 21:29:55', '33', '2017-11-01 21:29:55', '0');
INSERT INTO `page` VALUES ('259', 'sample', '{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":5,\"pid\":4,\"initScript\":true}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":4,\"pid\":3,\"initScript\":true}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":3,\"initScript\":true}', null, '1', '2017-11-01 21:34:33', '1', '2017-11-01 21:34:33', '0');
INSERT INTO `page` VALUES ('260', 'example', '{\"children\":[{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":7,\"pid\":6,\"initScript\":true}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":6,\"initScript\":true}', null, '1', '2017-11-01 21:34:44', '1', '2017-11-01 21:34:44', '0');
INSERT INTO `page` VALUES ('261', 'example1', '{\"children\":[{\"children\":[{\"children\":[{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"5\",\"name\":\"Input\",\"nickname\":\"Input\",\"type\":\"Input\",\"template\":\"`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"model\":{\"disabled\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"disabled\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"200px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const eventCenter = createElement.eventCenter\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      disabled:context.model.disabled.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'5\'\\r\\nexports.name = \'Input\';\\r\\nexports.nickname = \'Input\';\\r\\nexports.type = \'Input\';\\r\\nexports.template=\\r\\n`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  disabled:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n      width: \'200px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const eventCenter = createElement.eventCenter\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      disabled:context.model.disabled.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":101,\"pid\":97,\"initScript\":false}],\"cid\":\"4\",\"name\":\"FormItem\",\"nickname\":\"FormItem\",\"type\":\"FormItem\",\"template\":\"`<FormItem{model}>{slot}</FormItem>`;\\r\\n\",\"desc\":\"表单Item\",\"allow\":[\"5\",\"6\",\"8\",\"10\",\"15\",\"20\",\"21\",\"22\",\"42\"],\"allowPlace\":[\"3\"],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"Input\",\"desc\":\"标签\",\"name\":\"label\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n  \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'4\'\\r\\nexports.name = \'FormItem\';\\r\\nexports.nickname = \'FormItem\';\\r\\nexports.type = \'FormItem\';\\r\\nexports.template=`<FormItem{model}>{slot}</FormItem>`;\\r\\nexports.desc = \'表单Item\';\\r\\nexports.allow = [5,6,8,10,15,20,21,22,42];\\r\\nexports.allowPlace = [3];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'test\',\\r\\n    desc: \'标签\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n  \\r\\n};\\r\\n\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":3,\"uid\":97,\"pid\":96,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"15\",\"name\":\"Select\",\"nickname\":\"Select\",\"type\":\"WrapSelect\",\"template\":\"`<Select{model}>\\r\\n        <Option value=\\\"beijing\\\" label=\\\"北京市\\\">\\r\\n            <span>北京</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">Beiing</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shanghai\\\" label=\\\"上海市\\\">\\r\\n            <span>上海</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShangHai</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shenzhen\\\" label=\\\"深圳市\\\">\\r\\n            <span>深圳</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShenZhen</span>\\r\\n        </Option>\\r\\n</Select>`\\r\\n\",\"desc\":\"下拉框\",\"allow\":null,\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"北京市\",\"value\":1},{\"label\":\"上海市\",\"value\":2},{\"label\":\"深圳市\",\"value\":3}],\"desc\":\"\",\"name\":\"items\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"200px\"},\"desc\":\"value\",\"name\":\"style\"},\"filterable\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"支持搜索\",\"name\":\"filterable\"},\"disabled\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"支持搜索\",\"name\":\"disabled\"},\"clearable\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"支持搜索\",\"name\":\"clearable\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      items:context.model.items.value,\\r\\n      filterable: context.model.filterable.value,\\r\\n      disabled: context.model.disabled.value,\\r\\n      clearable: context.model.clearable.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Select\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'15\'\\r\\nexports.name = \'Select\';\\r\\nexports.nickname = \'Select\';\\r\\nexports.type = \'WrapSelect\';\\r\\nexports.template =\\r\\n  `<Select{model}>\\r\\n        <Option value=\\\"beijing\\\" label=\\\"北京市\\\">\\r\\n            <span>北京</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">Beiing</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shanghai\\\" label=\\\"上海市\\\">\\r\\n            <span>上海</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShangHai</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shenzhen\\\" label=\\\"深圳市\\\">\\r\\n            <span>深圳</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShenZhen</span>\\r\\n        </Option>\\r\\n</Select>`\\r\\nexports.desc = \'下拉框\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  items: {\\r\\n    exclude:true,\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n      label: \'北京市\',\\r\\n      value: 1\\r\\n    }, {\\r\\n      label: \'上海市\',\\r\\n      value: 2\\r\\n    }, {\\r\\n      label: \'深圳市\',\\r\\n      value: 3\\r\\n    }],\\r\\n    desc: \'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n      width: \'200px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  filterable: {\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'支持搜索\'\\r\\n  },\\r\\n  disabled: {\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'支持搜索\'\\r\\n  },\\r\\n  clearable: {\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'支持搜索\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      items:context.model.items.value,\\r\\n      filterable: context.model.filterable.value,\\r\\n      disabled: context.model.disabled.value,\\r\\n      clearable: context.model.clearable.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Select\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":118,\"pid\":98,\"initScript\":false}],\"cid\":\"4\",\"name\":\"FormItem\",\"nickname\":\"FormItem\",\"type\":\"FormItem\",\"template\":\"`<FormItem{model}>{slot}</FormItem>`;\\r\\n\",\"desc\":\"表单Item\",\"allow\":[\"5\",\"6\",\"8\",\"10\",\"15\",\"20\",\"21\",\"22\",\"42\"],\"allowPlace\":[\"3\"],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"Select\",\"desc\":\"标签\",\"name\":\"label\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n  \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'4\'\\r\\nexports.name = \'FormItem\';\\r\\nexports.nickname = \'FormItem\';\\r\\nexports.type = \'FormItem\';\\r\\nexports.template=`<FormItem{model}>{slot}</FormItem>`;\\r\\nexports.desc = \'表单Item\';\\r\\nexports.allow = [5,6,8,10,15,20,21,22,42];\\r\\nexports.allowPlace = [3];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'test\',\\r\\n    desc: \'标签\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n  \\r\\n};\\r\\n\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":3,\"uid\":98,\"pid\":96,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"9\",\"name\":\"Checkbox\",\"nickname\":\"Checkbox\",\"type\":\"Checkbox\",\"template\":\"`\\r\\n    <Checkbox{model}>\\r\\n    </Checkbox>\\r\\n`\\r\\n\",\"desc\":\"多选\",\"allow\":null,\"model\":{\"label\":{\"type\":\"text\",\"value\":\"facebook\",\"desc\":\"Checkbox的值\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n    this.model.label.value=\'facebook\'\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    props: {\\r\\n      label: context.model.label.value\\r\\n    },\\r\\n   \\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'CheckBox\'\\r\\n        }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'9\'\\r\\nexports.name = \'Checkbox\';\\r\\nexports.nickname = \'Checkbox\';\\r\\nexports.type = \'Checkbox\';\\r\\nexports.template=`\\r\\n    <Checkbox{model}>\\r\\n    </Checkbox>\\r\\n`\\r\\nexports.desc = \'多选\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  label:{\\r\\n        type:\'text\',\\r\\n        value: \'\',\\r\\n        desc: \'Checkbox的值\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n    this.model.label.value=\'facebook\'\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    props: {\\r\\n      label: context.model.label.value\\r\\n    },\\r\\n   \\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'CheckBox\'\\r\\n        }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":104,\"pid\":103,\"initScript\":false},{\"children\":[],\"cid\":\"9\",\"name\":\"Checkbox\",\"nickname\":\"Checkbox\",\"type\":\"Checkbox\",\"template\":\"`\\r\\n    <Checkbox{model}>\\r\\n    </Checkbox>\\r\\n`\\r\\n\",\"desc\":\"多选\",\"allow\":null,\"model\":{\"label\":{\"type\":\"text\",\"value\":\"facebook\",\"desc\":\"Checkbox的值\",\"name\":\"label\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n    this.model.label.value=\'facebook\'\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    props: {\\r\\n      label: context.model.label.value\\r\\n    },\\r\\n   \\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'CheckBox\'\\r\\n        }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'9\'\\r\\nexports.name = \'Checkbox\';\\r\\nexports.nickname = \'Checkbox\';\\r\\nexports.type = \'Checkbox\';\\r\\nexports.template=`\\r\\n    <Checkbox{model}>\\r\\n    </Checkbox>\\r\\n`\\r\\nexports.desc = \'多选\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  label:{\\r\\n        type:\'text\',\\r\\n        value: \'\',\\r\\n        desc: \'Checkbox的值\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n    this.model.label.value=\'facebook\'\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    props: {\\r\\n      label: context.model.label.value\\r\\n    },\\r\\n   \\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'CheckBox\'\\r\\n        }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":105,\"pid\":103,\"initScript\":false}],\"cid\":\"10\",\"name\":\"CheckboxGroup\",\"nickname\":\"CheckboxGroup\",\"type\":\"CheckboxGroup\",\"template\":\"`\\r\\n    <CheckboxGroup{model}>\\r\\n        {slot}\\r\\n    </CheckboxGroup>\\r\\n`\\r\\n\",\"desc\":\"多选Group\",\"allow\":[\"9\"],\"model\":{\"value\":{\"type\":\"text\",\"value\":[],\"desc\":\"选中的Checkbox的值\",\"name\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props :{\\r\\n       value:context.model.value.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'CheckboxGroup\'\\r\\n        }\\r\\n    ]\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement) \\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'10\'\\r\\nexports.name = \'CheckboxGroup\';\\r\\nexports.nickname = \'CheckboxGroup\';\\r\\nexports.type = \'CheckboxGroup\';\\r\\nexports.template=`\\r\\n    <CheckboxGroup{model}>\\r\\n        {slot}\\r\\n    </CheckboxGroup>\\r\\n`\\r\\nexports.desc = \'多选Group\';\\r\\nexports.allow = [9];\\r\\nexports.model = {\\r\\n  value:{\\r\\n    type:\'text\',\\r\\n    value: [],\\r\\n    desc: \'选中的Checkbox的值\'     \\r\\n  },   \\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props :{\\r\\n       value:context.model.value.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'CheckboxGroup\'\\r\\n        }\\r\\n    ]\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement) \\r\\n  }))\\r\\n}\",\"clazzId\":3,\"uid\":103,\"pid\":99,\"initScript\":false}],\"cid\":\"4\",\"name\":\"FormItem\",\"nickname\":\"FormItem\",\"type\":\"FormItem\",\"template\":\"`<FormItem{model}>{slot}</FormItem>`;\\r\\n\",\"desc\":\"表单Item\",\"allow\":[\"5\",\"6\",\"8\",\"10\",\"15\",\"20\",\"21\",\"22\",\"42\"],\"allowPlace\":[\"3\"],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"Checkbox\",\"desc\":\"标签\",\"name\":\"label\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n  \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'4\'\\r\\nexports.name = \'FormItem\';\\r\\nexports.nickname = \'FormItem\';\\r\\nexports.type = \'FormItem\';\\r\\nexports.template=`<FormItem{model}>{slot}</FormItem>`;\\r\\nexports.desc = \'表单Item\';\\r\\nexports.allow = [5,6,8,10,15,20,21,22,42];\\r\\nexports.allowPlace = [3];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'test\',\\r\\n    desc: \'标签\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n  \\r\\n};\\r\\n\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":3,\"uid\":99,\"pid\":96,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"7\",\"name\":\"Radio\",\"nickname\":\"Radio\",\"type\":\"Radio\",\"template\":\"`\\r\\n    <Radio{model}>\\r\\n    </Radio>\\r\\n`\\r\\n\",\"desc\":\"单选\",\"allow\":null,\"model\":{\"label\":{\"type\":\"text\",\"value\":\"apple\",\"desc\":\"radio的值\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n    this.model.label.value=\'apple\'\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      label: context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n   \\r\\n   \\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Radio\'\\r\\n        }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'7\'\\r\\nexports.name = \'Radio\';\\r\\nexports.nickname = \'Radio\';\\r\\nexports.type = \'Radio\';\\r\\nexports.template=`\\r\\n    <Radio{model}>\\r\\n    </Radio>\\r\\n`\\r\\nexports.desc = \'单选\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    label:{\\r\\n        type:\'text\',\\r\\n        value: \'\',\\r\\n        desc: \'radio的值\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n    this.model.label.value=\'apple\'\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      label: context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n   \\r\\n   \\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Radio\'\\r\\n        }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":107,\"pid\":106,\"initScript\":false},{\"children\":[],\"cid\":\"7\",\"name\":\"Radio\",\"nickname\":\"Radio\",\"type\":\"Radio\",\"template\":\"`\\r\\n    <Radio{model}>\\r\\n    </Radio>\\r\\n`\\r\\n\",\"desc\":\"单选\",\"allow\":null,\"model\":{\"label\":{\"type\":\"text\",\"value\":\"apple\",\"desc\":\"radio的值\",\"name\":\"label\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n    this.model.label.value=\'apple\'\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      label: context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n   \\r\\n   \\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Radio\'\\r\\n        }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'7\'\\r\\nexports.name = \'Radio\';\\r\\nexports.nickname = \'Radio\';\\r\\nexports.type = \'Radio\';\\r\\nexports.template=`\\r\\n    <Radio{model}>\\r\\n    </Radio>\\r\\n`\\r\\nexports.desc = \'单选\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    label:{\\r\\n        type:\'text\',\\r\\n        value: \'\',\\r\\n        desc: \'radio的值\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n    this.model.label.value=\'apple\'\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      label: context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n   \\r\\n   \\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Radio\'\\r\\n        }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":108,\"pid\":106,\"initScript\":false}],\"cid\":\"8\",\"name\":\"RadioGroup\",\"nickname\":\"RadioGroup\",\"type\":\"RadioGroup\",\"template\":\"`\\r\\n    <RadioGroup{model}>\\r\\n        {slot}\\r\\n    </RadioGroup>\\r\\n`\\r\\n\",\"desc\":\"单选组\",\"allow\":[\"7\"],\"model\":{\"key\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"value\":{\"type\":\"text\",\"value\":-1,\"desc\":\"选中的radio的值\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n  \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n   }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      value: context.model.value.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'RadioGroup\'\\r\\n        }\\r\\n    ]\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n    \\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'8\'\\r\\nexports.name = \'RadioGroup\';\\r\\nexports.nickname = \'RadioGroup\';\\r\\nexports.type = \'RadioGroup\';\\r\\nexports.template=`\\r\\n    <RadioGroup{model}>\\r\\n        {slot}\\r\\n    </RadioGroup>\\r\\n`\\r\\nexports.desc = \'单选组\';\\r\\nexports.allow = [7];\\r\\nexports.model = {\\r\\n  key:{\\r\\n    type:\'text\',\\r\\n    value: \'\',\\r\\n    desc: \'\'     \\r\\n  }, \\r\\n    value:{\\r\\n        type:\'text\',\\r\\n        value: -1,\\r\\n        desc: \'选中的radio的值\'\\r\\n    },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n  \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n   }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      value: context.model.value.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'RadioGroup\'\\r\\n        }\\r\\n    ]\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n    \\r\\n  }))\\r\\n}\",\"clazzId\":3,\"uid\":106,\"pid\":100,\"initScript\":false}],\"cid\":\"4\",\"name\":\"FormItem\",\"nickname\":\"FormItem\",\"type\":\"FormItem\",\"template\":\"`<FormItem{model}>{slot}</FormItem>`;\\r\\n\",\"desc\":\"表单Item\",\"allow\":[\"5\",\"6\",\"8\",\"10\",\"15\",\"20\",\"21\",\"22\",\"42\"],\"allowPlace\":[\"3\"],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"Radio\",\"desc\":\"标签\",\"name\":\"label\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n  \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'4\'\\r\\nexports.name = \'FormItem\';\\r\\nexports.nickname = \'FormItem\';\\r\\nexports.type = \'FormItem\';\\r\\nexports.template=`<FormItem{model}>{slot}</FormItem>`;\\r\\nexports.desc = \'表单Item\';\\r\\nexports.allow = [5,6,8,10,15,20,21,22,42];\\r\\nexports.allowPlace = [3];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'test\',\\r\\n    desc: \'标签\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n  \\r\\n};\\r\\n\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":3,\"uid\":100,\"pid\":96,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"20\",\"name\":\"DatePicker\",\"nickname\":\"DatePicker\",\"type\":\"DatePicker\",\"template\":\"`\\r\\n    <DatePicker{model}>\\r\\n    </DatePicker>\\r\\n`\\r\\n\",\"desc\":\"日期选择\",\"allow\":null,\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"format\":{\"type\":\"text\",\"value\":\"yyyy-MM-dd\",\"desc\":\"\"},\"type\":{\"type\":\"text\",\"value\":\"date\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n  \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      format:\'yyyy-MM-dd\',\\r\\n      type:\\\"date\\\"\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'DatePicker\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'20\'\\r\\nexports.name = \'DatePicker\';\\r\\nexports.nickname = \'DatePicker\';\\r\\nexports.type = \'DatePicker\';\\r\\nexports.template=\\r\\n`\\r\\n    <DatePicker{model}>\\r\\n    </DatePicker>\\r\\n`\\r\\nexports.desc = \'日期选择\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    value:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    },\\r\\n    format:{\\r\\n        type:\'text\',\\r\\n        value:\'yyyy-MM-dd\',\\r\\n        desc:\'\'\\r\\n    },\\r\\n    type:{\\r\\n        type:\'text\',\\r\\n        value:\'date\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n  \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      format:\'yyyy-MM-dd\',\\r\\n      type:\\\"date\\\"\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'DatePicker\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":110,\"pid\":109,\"initScript\":false}],\"cid\":\"4\",\"name\":\"FormItem\",\"nickname\":\"FormItem\",\"type\":\"FormItem\",\"template\":\"`<FormItem{model}>{slot}</FormItem>`;\\r\\n\",\"desc\":\"表单Item\",\"allow\":[\"5\",\"6\",\"8\",\"10\",\"15\",\"20\",\"21\",\"22\",\"42\"],\"allowPlace\":[\"3\"],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"DatePicker\",\"desc\":\"标签\",\"name\":\"label\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n  \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'4\'\\r\\nexports.name = \'FormItem\';\\r\\nexports.nickname = \'FormItem\';\\r\\nexports.type = \'FormItem\';\\r\\nexports.template=`<FormItem{model}>{slot}</FormItem>`;\\r\\nexports.desc = \'表单Item\';\\r\\nexports.allow = [5,6,8,10,15,20,21,22,42];\\r\\nexports.allowPlace = [3];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'test\',\\r\\n    desc: \'标签\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n  \\r\\n};\\r\\n\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":3,\"uid\":109,\"pid\":96,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"21\",\"name\":\"TimePicker\",\"nickname\":\"TimePicker\",\"type\":\"TimePicker\",\"template\":\"`\\r\\n    <TimePicker{model}>\\r\\n    </TimePicker>\\r\\n`\\r\\n\",\"desc\":\"时间选择\",\"allow\":null,\"model\":{},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      format:\'HH:mm:ss\',\\r\\n      type:\\\"time\\\"\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TimePicker\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'21\'\\r\\nexports.name = \'TimePicker\';\\r\\nexports.nickname = \'TimePicker\';\\r\\nexports.type = \'TimePicker\';\\r\\nexports.template=`\\r\\n    <TimePicker{model}>\\r\\n    </TimePicker>\\r\\n`\\r\\nexports.desc = \'时间选择\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  \\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      format:\'HH:mm:ss\',\\r\\n      type:\\\"time\\\"\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TimePicker\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":112,\"pid\":111,\"initScript\":false}],\"cid\":\"4\",\"name\":\"FormItem\",\"nickname\":\"FormItem\",\"type\":\"FormItem\",\"template\":\"`<FormItem{model}>{slot}</FormItem>`;\\r\\n\",\"desc\":\"表单Item\",\"allow\":[\"5\",\"6\",\"8\",\"10\",\"15\",\"20\",\"21\",\"22\",\"42\"],\"allowPlace\":[\"3\"],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"TimePicker\",\"desc\":\"标签\",\"name\":\"label\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n  \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'4\'\\r\\nexports.name = \'FormItem\';\\r\\nexports.nickname = \'FormItem\';\\r\\nexports.type = \'FormItem\';\\r\\nexports.template=`<FormItem{model}>{slot}</FormItem>`;\\r\\nexports.desc = \'表单Item\';\\r\\nexports.allow = [5,6,8,10,15,20,21,22,42];\\r\\nexports.allowPlace = [3];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'test\',\\r\\n    desc: \'标签\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n  \\r\\n};\\r\\n\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":3,\"uid\":111,\"pid\":96,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"42\",\"name\":\"Upload\",\"nickname\":\"Upload\",\"type\":\"WrapUpload\",\"template\":\"`<Upload{model}></Upload>`\\n\",\"desc\":\"Upload\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"width\":\"200px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\n\\n}\",\"render\":\"function (createElement) {\\n  const context = this\\n  const eventCenter = createElement.eventCenter\\n  const store = createElement.store\\n  \\n  if(!context.initScript){\\n      context.initScript=true\\n      context.script(eventCenter)\\n  }\\n  \\n\\n  return createElement(context.type, {\\n    style: context.model.style.value,\\n    props:{\\n      \\n    },\\n    domProps: {\\n      controlConfig: this\\n    },\\n    directives: [\\n        {\\n            name:\'editable\',\\n            value:\'Upload\'\\n        }\\n    ],\\n    nativeOn: {\\n      click: function (e) {\\n        store.commit(\'dragModule/showEditorPanel\', e)\\n      }\\n    },\\n  })\\n}\",\"code\":\"exports.cid = \'42\'\\nexports.name = \'Upload\';\\nexports.nickname = \'Upload\';\\nexports.type = \'WrapUpload\';\\nexports.template=`<Upload{model}></Upload>`\\nexports.desc = \'Upload\';\\nexports.allow = [];\\nexports.model = {\\n  style: {\\n    type: \'json\',\\n    value: {\\n      width: \'200px\'\\n    },\\n    desc: \'value\'\\n  }\\n};\\n\\nexports.script = function (eventCenter) {\\n\\n};\\n\\nexports.render = function (createElement) {\\n  const context = this\\n  const eventCenter = createElement.eventCenter\\n  const store = createElement.store\\n  \\n  if(!context.initScript){\\n      context.initScript=true\\n      context.script(eventCenter)\\n  }\\n  \\n\\n  return createElement(context.type, {\\n    style: context.model.style.value,\\n    props:{\\n      \\n    },\\n    domProps: {\\n      controlConfig: this\\n    },\\n    directives: [\\n        {\\n            name:\'editable\',\\n            value:\'Upload\'\\n        }\\n    ],\\n    nativeOn: {\\n      click: function (e) {\\n        store.commit(\'dragModule/showEditorPanel\', e)\\n      }\\n    },\\n  })\\n};\",\"clazzId\":3,\"uid\":114,\"pid\":113,\"initScript\":false}],\"cid\":\"4\",\"name\":\"FormItem\",\"nickname\":\"FormItem\",\"type\":\"FormItem\",\"template\":\"`<FormItem{model}>{slot}</FormItem>`;\\r\\n\",\"desc\":\"表单Item\",\"allow\":[\"5\",\"6\",\"8\",\"10\",\"15\",\"20\",\"21\",\"22\",\"42\"],\"allowPlace\":[\"3\"],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"Upload\",\"desc\":\"标签\",\"name\":\"label\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n  \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'4\'\\r\\nexports.name = \'FormItem\';\\r\\nexports.nickname = \'FormItem\';\\r\\nexports.type = \'FormItem\';\\r\\nexports.template=`<FormItem{model}>{slot}</FormItem>`;\\r\\nexports.desc = \'表单Item\';\\r\\nexports.allow = [5,6,8,10,15,20,21,22,42];\\r\\nexports.allowPlace = [3];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'test\',\\r\\n    desc: \'标签\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n  \\r\\n};\\r\\n\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":3,\"uid\":113,\"pid\":96,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"6\",\"name\":\"Button\",\"nickname\":\"Button\",\"type\":\"Button\",\"template\":\"`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\n\",\"desc\":\"按钮\",\"allow\":null,\"model\":{\"name\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"submit\",\"desc\":\"\",\"name\":\"name\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"},\"type\":{\"type\":\"text\",\"value\":\"primary\",\"desc\":\"type of button\",\"name\":\"type\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'6\'\\r\\nexports.name = \'Button\';\\r\\nexports.nickname = \'Button\';\\r\\nexports.type = \'Button\';\\r\\nexports.template=`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\nexports.desc = \'按钮\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  name:{\\r\\n       type: \'text\',\\r\\n       compileType:\'innerHTML\',\\r\\n       value: \'提交\',\\r\\n       desc: \'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  type: {\\r\\n    type: \'text\',\\r\\n    value: \'primary\',\\r\\n    desc: \'type of button\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":116,\"pid\":115,\"initScript\":false}],\"cid\":\"4\",\"name\":\"FormItem\",\"nickname\":\"FormItem\",\"type\":\"FormItem\",\"template\":\"`<FormItem{model}>{slot}</FormItem>`;\\r\\n\",\"desc\":\"表单Item\",\"allow\":[\"5\",\"6\",\"8\",\"10\",\"15\",\"20\",\"21\",\"22\",\"42\"],\"allowPlace\":[\"3\"],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"标签\",\"name\":\"label\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n  \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'4\'\\r\\nexports.name = \'FormItem\';\\r\\nexports.nickname = \'FormItem\';\\r\\nexports.type = \'FormItem\';\\r\\nexports.template=`<FormItem{model}>{slot}</FormItem>`;\\r\\nexports.desc = \'表单Item\';\\r\\nexports.allow = [5,6,8,10,15,20,21,22,42];\\r\\nexports.allowPlace = [3];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'test\',\\r\\n    desc: \'标签\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n  \\r\\n};\\r\\n\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'FormItem\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":3,\"uid\":115,\"pid\":96,\"initScript\":false}],\"cid\":\"3\",\"name\":\"Form\",\"nickname\":\"Form\",\"type\":\"Form\",\"template\":\"`<Form{model}>{slot}</Form>`;\\r\\n\",\"desc\":\"表单\",\"allow\":[\"1\",\"4\"],\"model\":{\"labelWidth\":{\"type\":\"text\",\"value\":100,\"desc\":\"表单label宽度\",\"name\":\"labelWidth\"},\"inline\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"行内\",\"name\":\"inline\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n  \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      inline:context.model.inline.value,\\r\\n      \'label-width\': context.model.labelWidth.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Form\'\\r\\n      }\\r\\n    ],\\r\\n    navtiveOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'3\'\\r\\nexports.name = \'Form\';\\r\\nexports.nickname = \'Form\';\\r\\nexports.type = \'Form\';\\r\\nexports.template = `<Form{model}>{slot}</Form>`;\\r\\nexports.desc = \'表单\';\\r\\nexports.allow = [1,4];\\r\\nexports.model = {\\r\\n \\r\\n  labelWidth: {\\r\\n    type: \'text\',\\r\\n    value: 100,\\r\\n    desc: \'表单label宽度\'\\r\\n  },\\r\\n  inline:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'行内\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  \\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n  \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      inline:context.model.inline.value,\\r\\n      \'label-width\': context.model.labelWidth.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Form\'\\r\\n      }\\r\\n    ],\\r\\n    navtiveOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":3,\"uid\":96,\"pid\":4,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"24\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":4,\"pid\":2,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"type\"},\"style\":{\"type\":\"text\",\"value\":{\"margin\":\"20px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n    this.model.style.value={\\r\\n        margin:\'20px\'\\r\\n    }\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":2,\"pid\":1,\"initScript\":false,\"scriptString\":\"function (eventCenter) {\\r\\n    this.model.style.value={\\r\\n        margin:\'20px\'\\r\\n    }\\r\\n}\"},{\"children\":[{\"children\":[{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}],\"save\":false,\"desc\":\"\",\"name\":\"data\"},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}],\"name\":\"columns\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":46,\"pid\":43,\"initScript\":false}],\"cid\":\"13\",\"name\":\"TabPane\",\"nickname\":\"TabPane\",\"type\":\"TabPane\",\"template\":\"`<TabPane{model}>{slot}</TabPane>`\\r\\n\",\"desc\":\"TabPane\",\"allow\":[],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"Tab1\",\"desc\":\"label\",\"name\":\"label\"},\"name\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"name\",\"name\":\"name\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'13\'\\r\\nexports.name = \'TabPane\';\\r\\nexports.nickname = \'TabPane\';\\r\\nexports.type = \'TabPane\';\\r\\nexports.template=\\r\\n`<TabPane{model}>{slot}</TabPane>`\\r\\nexports.desc = \'TabPane\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'tab\',\\r\\n    desc: \'label\'\\r\\n  },\\r\\n  name: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'name\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":43,\"pid\":42,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}],\"save\":false,\"desc\":\"\",\"name\":\"data\"},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}],\"name\":\"columns\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":47,\"pid\":44,\"initScript\":false}],\"cid\":\"13\",\"name\":\"TabPane\",\"nickname\":\"TabPane\",\"type\":\"TabPane\",\"template\":\"`<TabPane{model}>{slot}</TabPane>`\\r\\n\",\"desc\":\"TabPane\",\"allow\":[],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"Tab2\",\"desc\":\"label\",\"name\":\"label\"},\"name\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"name\",\"name\":\"name\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'13\'\\r\\nexports.name = \'TabPane\';\\r\\nexports.nickname = \'TabPane\';\\r\\nexports.type = \'TabPane\';\\r\\nexports.template=\\r\\n`<TabPane{model}>{slot}</TabPane>`\\r\\nexports.desc = \'TabPane\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'tab\',\\r\\n    desc: \'label\'\\r\\n  },\\r\\n  name: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'name\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":44,\"pid\":42,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}],\"save\":false,\"desc\":\"\"},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}]},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":48,\"pid\":45,\"initScript\":false}],\"cid\":\"13\",\"name\":\"TabPane\",\"nickname\":\"TabPane\",\"type\":\"TabPane\",\"template\":\"`<TabPane{model}>{slot}</TabPane>`\\r\\n\",\"desc\":\"TabPane\",\"allow\":[],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"Tab3\",\"desc\":\"label\",\"name\":\"label\"},\"name\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"name\",\"name\":\"name\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'13\'\\r\\nexports.name = \'TabPane\';\\r\\nexports.nickname = \'TabPane\';\\r\\nexports.type = \'TabPane\';\\r\\nexports.template=\\r\\n`<TabPane{model}>{slot}</TabPane>`\\r\\nexports.desc = \'TabPane\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'tab\',\\r\\n    desc: \'label\'\\r\\n  },\\r\\n  name: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'name\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":45,\"pid\":42,\"initScript\":false}],\"cid\":\"12\",\"name\":\"Tabs\",\"nickname\":\"Tabs\",\"type\":\"Tabs\",\"template\":\"`<Tabs{model}>{slot}</Tabs>`\\r\\n\",\"desc\":\"Tabs\",\"allow\":[\"13\"],\"model\":{\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'12\'\\r\\nexports.name = \'Tabs\';\\r\\nexports.nickname = \'Tabs\';\\r\\nexports.type = \'Tabs\';\\r\\nexports.template=\\r\\n`<Tabs{model}>{slot}</Tabs>`\\r\\nexports.desc = \'Tabs\';\\r\\nexports.allow = [13];\\r\\nexports.model = {\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":42,\"pid\":40,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"24\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的��栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":40,\"pid\":39,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":39,\"pid\":1,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":false,\"maxUid\":119}', null, '1', '2017-11-01 21:35:30', '1', '2017-11-02 11:17:12', '0');
INSERT INTO `page` VALUES ('262', '2', '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":3,\"initScript\":true,\"maxUid\":4}', null, '1', '2017-11-01 21:52:46', '1', '2017-11-01 21:52:46', '0');
INSERT INTO `page` VALUES ('263', '3', '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":4,\"initScript\":true,\"maxUid\":5}', null, '1', '2017-11-01 21:52:59', '1', '2017-11-01 21:52:59', '0');
INSERT INTO `page` VALUES ('264', '4', '{\"children\":[{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":3,\"pid\":2,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":2,\"initScript\":false,\"maxUid\":4}', null, '1', '2017-11-01 21:55:38', '1', '2017-11-01 21:55:42', '0');
INSERT INTO `page` VALUES ('265', '123', '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":false,\"maxUid\":3}', null, '1', '2017-11-01 21:59:10', '1', '2017-11-01 21:59:28', '0');
INSERT INTO `page` VALUES ('266', null, '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":true,\"maxUid\":2}', null, '33', '2017-11-02 08:23:48', '33', '2017-11-02 08:23:48', '0');
INSERT INTO `page` VALUES ('267', 'ss', '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":false,\"maxUid\":2}', null, '33', '2017-11-02 09:31:18', '33', '2017-11-02 09:31:36', '0');
INSERT INTO `page` VALUES ('268', 'example', '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":true,\"maxUid\":2}', null, '33', '2017-11-02 09:59:20', '33', '2017-11-02 09:59:20', '0');
INSERT INTO `page` VALUES ('269', null, '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":2,\"initScript\":false,\"maxUid\":4}', null, '33', '2017-11-02 10:18:54', '33', '2017-11-02 10:19:01', '0');
INSERT INTO `page` VALUES ('270', 'test', '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":false,\"maxUid\":3}', null, '33', '2017-11-02 10:30:43', '33', '2017-11-02 10:31:34', '0');
INSERT INTO `page` VALUES ('271', '1', '{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":4,\"pid\":3,\"initScript\":true}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":3,\"pid\":2,\"initScript\":true}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":2,\"initScript\":true,\"maxUid\":5}', null, '1', '2017-11-02 10:53:44', '1', '2017-11-02 10:53:44', '0');
INSERT INTO `page` VALUES ('272', null, '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":true,\"maxUid\":2}', null, '1', '2017-11-02 10:58:53', '1', '2017-11-02 10:58:53', '0');
INSERT INTO `page` VALUES ('273', null, '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":2,\"initScript\":true,\"maxUid\":3}', null, '1', '2017-11-02 10:59:03', '1', '2017-11-02 10:59:03', '0');
INSERT INTO `page` VALUES ('274', null, '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":2,\"initScript\":true,\"maxUid\":3}', null, '33', '2017-11-02 11:28:57', '33', '2017-11-02 11:28:57', '0');
INSERT INTO `page` VALUES ('275', '谁谁谁', '{\"children\":[{\"children\":[],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"\"},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":3,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"text\",\"desc\":\"\",\"name\":\"type\"},\"style\":{\"type\":\"text\",\"value\":\"sd\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":4,\"pid\":1,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":false,\"maxUid\":7}', null, '33', '2017-11-02 11:38:34', '33', '2017-11-02 17:00:29', '0');
INSERT INTO `page` VALUES ('276', null, '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":true,\"maxUid\":2}', null, '1', '2017-11-02 12:32:00', '1', '2017-11-02 12:32:00', '0');
INSERT INTO `page` VALUES ('277', null, '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":true,\"maxUid\":2}', null, '1', '2017-11-02 12:32:04', '1', '2017-11-02 12:32:04', '0');
INSERT INTO `page` VALUES ('278', null, '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":2,\"initScript\":true,\"maxUid\":3}', null, '1', '2017-11-02 12:32:12', '1', '2017-11-02 12:32:12', '0');
INSERT INTO `page` VALUES ('279', null, '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":4,\"initScript\":true,\"maxUid\":5}', null, '1', '2017-11-02 12:32:20', '1', '2017-11-02 12:32:20', '0');
INSERT INTO `page` VALUES ('280', ' ', '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":2,\"initScript\":true,\"maxUid\":3}', null, '1', '2017-11-02 12:32:36', '1', '2017-11-02 12:32:36', '0');
INSERT INTO `page` VALUES ('281', 'example2', '{\"children\":[{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"201\",\"name\":\"Switch\",\"nickname\":\"Switch\",\"type\":\"i-switch\",\"template\":\"`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\n\",\"desc\":\"开关\",\"allow\":null,\"model\":{\"size\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"size\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'201\'\\r\\nexports.name = \'Switch\';\\r\\nexports.nickname = \'Switch\';\\r\\nexports.type = \'i-switch\';\\r\\nexports.template=`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\nexports.desc = \'开关\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    size:{\\r\\n        type:\'text\',\\r\\n        value: \'\',\\r\\n        desc: \'size\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":23,\"pid\":6,\"initScript\":false},{\"children\":[],\"cid\":\"201\",\"name\":\"Switch\",\"nickname\":\"Switch\",\"type\":\"i-switch\",\"template\":\"`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\n\",\"desc\":\"开关\",\"allow\":null,\"model\":{\"size\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"size\",\"name\":\"size\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'201\'\\r\\nexports.name = \'Switch\';\\r\\nexports.nickname = \'Switch\';\\r\\nexports.type = \'i-switch\';\\r\\nexports.template=`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\nexports.desc = \'开关\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    size:{\\r\\n        type:\'text\',\\r\\n        value: \'\',\\r\\n        desc: \'size\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":31,\"pid\":6,\"initScript\":false},{\"children\":[],\"cid\":\"201\",\"name\":\"Switch\",\"nickname\":\"Switch\",\"type\":\"i-switch\",\"template\":\"`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\n\",\"desc\":\"开关\",\"allow\":null,\"model\":{\"size\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"size\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'201\'\\r\\nexports.name = \'Switch\';\\r\\nexports.nickname = \'Switch\';\\r\\nexports.type = \'i-switch\';\\r\\nexports.template=`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\nexports.desc = \'开关\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    size:{\\r\\n        type:\'text\',\\r\\n        value: \'\',\\r\\n        desc: \'size\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":32,\"pid\":6,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"24\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":6,\"pid\":5,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":5,\"pid\":4,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"202\",\"name\":\"AutoComplete\",\"nickname\":\"AutoComplete\",\"type\":\"AutoComplete\",\"template\":\"`<AutoComplete{model}>\\r\\n        <Option value=\\\"beijing\\\" label=\\\"北京市\\\">\\r\\n            <span>北京</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">Beiing</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shanghai\\\" label=\\\"上海市\\\">\\r\\n            <span>上海</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShangHai</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shenzhen\\\" label=\\\"深圳市\\\">\\r\\n            <span>深圳</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShenZhen</span>\\r\\n        </Option>\\r\\n</AutoComplete>`\\r\\n\",\"desc\":\"自动补全\",\"allow\":null,\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"width\":\"200px\"},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'AutoComplete\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'202\'\\r\\nexports.name = \'AutoComplete\';\\r\\nexports.nickname = \'AutoComplete\';\\r\\nexports.type = \'AutoComplete\';\\r\\nexports.template =\\r\\n  `<AutoComplete{model}>\\r\\n        <Option value=\\\"beijing\\\" label=\\\"北京市\\\">\\r\\n            <span>北京</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">Beiing</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shanghai\\\" label=\\\"上海市\\\">\\r\\n            <span>上海</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShangHai</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shenzhen\\\" label=\\\"深圳市\\\">\\r\\n            <span>深圳</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShenZhen</span>\\r\\n        </Option>\\r\\n</AutoComplete>`\\r\\nexports.desc = \'自动补全\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  \\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n      width: \'200px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'AutoComplete\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":42,\"pid\":22,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"24\",\"desc\":\"12,12代表���个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":22,\"pid\":21,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"type\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":21,\"pid\":4,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"203\",\"name\":\"Slider\",\"nickname\":\"Slider\",\"type\":\"Slider\",\"template\":\"`\\r\\n    <Slider{model}>\\r\\n    </Slider>\\r\\n`\\r\\n\",\"desc\":\"Slider\",\"allow\":null,\"model\":{\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Slider\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'203\'\\r\\nexports.name = \'Slider\';\\r\\nexports.nickname = \'Slider\';\\r\\nexports.type = \'Slider\';\\r\\nexports.template=`\\r\\n    <Slider{model}>\\r\\n    </Slider>\\r\\n`\\r\\nexports.desc = \'Slider\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Slider\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":34,\"pid\":28,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"24\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":28,\"pid\":24,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":24,\"pid\":4,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"205\",\"name\":\"Transfer\",\"nickname\":\"Transfer\",\"type\":\"Transfer\",\"template\":\"`\\r\\n    <Transfer{model}>\\r\\n    </Transfer>\\r\\n`\\r\\n\",\"desc\":\"Transfer\",\"allow\":null,\"model\":{\"data\":{\"type\":\"array\",\"value\":[{\"key\":\"1\",\"label\":\"内容1\",\"disabled\":false},{\"key\":\"2\",\"label\":\"内容2\",\"disabled\":true},{\"key\":\"3\",\"label\":\"内容3\",\"disabled\":false}],\"desc\":\"\"},\"targetKeys\":{\"type\":\"array\",\"value\":[\"1\",\"2\"],\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      data:context.model.data.value,\\r\\n      \'target-keys\':context.model.targetKeys.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Transfer\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'205\'\\r\\nexports.name = \'Transfer\';\\r\\nexports.nickname = \'Transfer\';\\r\\nexports.type = \'Transfer\';\\r\\nexports.template=`\\r\\n    <Transfer{model}>\\r\\n    </Transfer>\\r\\n`\\r\\nexports.desc = \'Transfer\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    data:{\\r\\n        type:\'array\',\\r\\n        value: [\\r\\n                { \\\"key\\\": \\\"1\\\", \\\"label\\\": \\\"内容1\\\", \\\"disabled\\\": false },\\r\\n                { \\\"key\\\": \\\"2\\\", \\\"label\\\": \\\"内容2\\\", \\\"disabled\\\": true },\\r\\n                { \\\"key\\\": \\\"3\\\", \\\"label\\\": \\\"内容3\\\", \\\"disabled\\\": false }\\r\\n            ],\\r\\n        desc:\'\'\\r\\n    },\\r\\n    targetKeys: {\\r\\n       type:\'array\',\\r\\n       value:[\\\"1\\\",\\\"2\\\"],\\r\\n       desc:\'\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      data:context.model.data.value,\\r\\n      \'target-keys\':context.model.targetKeys.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Transfer\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":36,\"pid\":29,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"24\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8���三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":29,\"pid\":26,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"type\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":26,\"pid\":4,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"204\",\"name\":\"Cascader\",\"nickname\":\"Cascader\",\"type\":\"Cascader\",\"template\":\"`\\r\\n    <Cascader{model}>\\r\\n    </Cascader>\\r\\n`\\r\\n\",\"desc\":\"Cascader\",\"allow\":null,\"model\":{\"data\":{\"type\":\"array\",\"value\":[{\"value\":\"beijing\",\"label\":\"北京\",\"children\":[{\"value\":\"gugong\",\"label\":\"故宫\",\"__label\":\"北京 / 故宫\",\"__value\":\"beijing,gugong\"},{\"value\":\"tiantan\",\"label\":\"天坛\",\"__label\":\"北京 / 天坛\",\"__value\":\"beijing,tiantan\"},{\"value\":\"wangfujing\",\"label\":\"王府井\",\"__label\":\"北京 / 王府井\",\"__value\":\"beijing,wangfujing\"}]},{\"value\":\"jiangsu\",\"label\":\"江苏\",\"children\":[{\"value\":\"nanjing\",\"label\":\"南京\",\"children\":[{\"value\":\"fuzimiao\",\"label\":\"夫子庙\",\"__label\":\"江苏 / 南京 / 夫子庙\",\"__value\":\"jiangsu,nanjing,fuzimiao\"}]},{\"value\":\"suzhou\",\"label\":\"苏州\",\"children\":[{\"value\":\"zhuozhengyuan\",\"label\":\"拙政园\",\"__label\":\"江苏 / 苏州 / 拙政园\",\"__value\":\"jiangsu,suzhou,zhuozhengyuan\"},{\"value\":\"shizilin\",\"label\":\"狮子林\",\"__label\":\"江苏 / 苏州 / 狮子林\",\"__value\":\"jiangsu,suzhou,shizilin\"}]}]}],\"desc\":\"\",\"name\":\"data\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      data:context.model.data.value,\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Cascader\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'204\'\\r\\nexports.name = \'Cascader\';\\r\\nexports.nickname = \'Cascader\';\\r\\nexports.type = \'Cascader\';\\r\\nexports.template=`\\r\\n    <Cascader{model}>\\r\\n    </Cascader>\\r\\n`\\r\\nexports.desc = \'Cascader\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    data:{\\r\\n        type:\'array\',\\r\\n        value: [{\\r\\n                    value: \'beijing\',\\r\\n                    label: \'北京\',\\r\\n                    children: [\\r\\n                        {\\r\\n                            value: \'gugong\',\\r\\n                            label: \'故宫\'\\r\\n                        },\\r\\n                        {\\r\\n                            value: \'tiantan\',\\r\\n                            label: \'天坛\'\\r\\n                        },\\r\\n                        {\\r\\n                            value: \'wangfujing\',\\r\\n                            label: \'王府井\'\\r\\n                        }\\r\\n                    ]\\r\\n                }, {\\r\\n                    value: \'jiangsu\',\\r\\n                    label: \'江苏\',\\r\\n                    children: [\\r\\n                        {\\r\\n                            value: \'nanjing\',\\r\\n                            label: \'南京\',\\r\\n                            children: [\\r\\n                                {\\r\\n                                    value: \'fuzimiao\',\\r\\n                                    label: \'夫子庙\',\\r\\n                                }\\r\\n                            ]\\r\\n                        },\\r\\n                        {\\r\\n                            value: \'suzhou\',\\r\\n                            label: \'苏州\',\\r\\n                            children: [\\r\\n                                {\\r\\n                                    value: \'zhuozhengyuan\',\\r\\n                                    label: \'��政园\',\\r\\n                                },\\r\\n                                {\\r\\n                                    value: \'shizilin\',\\r\\n                                    label: \'狮子林\',\\r\\n                                }\\r\\n                            ]\\r\\n                        }\\r\\n                    ],\\r\\n          }],\\r\\n        desc:\'\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      data:context.model.data.value,\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Cascader\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":37,\"pid\":30,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":30,\"pid\":27,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"type\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":27,\"pid\":4,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"207\",\"name\":\"Rate\",\"nickname\":\"Rate\",\"type\":\"Rate\",\"template\":\"`\\r\\n    <Rate{model}>\\r\\n    </Rate>\\r\\n`\\r\\n\",\"desc\":\"Rate\",\"allow\":null,\"model\":{\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Rate\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'207\'\\r\\nexports.name = \'Rate\';\\r\\nexports.nickname = \'Rate\';\\r\\nexports.type = \'Rate\';\\r\\nexports.template=`\\r\\n    <Rate{model}>\\r\\n    </Rate>\\r\\n`\\r\\nexports.desc = \'Rate\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n   \\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Rate\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":40,\"pid\":39,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":39,\"pid\":38,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":38,\"pid\":4,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":4,\"initScript\":false,\"maxUid\":43}', null, '1', '2017-11-02 12:56:03', '1', '2017-11-02 13:25:29', '0');
INSERT INTO `page` VALUES ('282', '1', '{\"children\":[{\"children\":[],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"\",\"name\":\"style\"},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"\",\"desc\":\"\",\"name\":\"innerHTML\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":2,\"pid\":1,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"6\",\"name\":\"Button\",\"nickname\":\"Button\",\"type\":\"Button\",\"template\":\"`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\n\",\"desc\":\"按钮\",\"allow\":null,\"model\":{\"name\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"提交\",\"desc\":\"\",\"name\":\"name\"},\"style\":{\"type\":\"text\",\"value\":\"1\",\"desc\":\"value\",\"name\":\"style\"},\"type\":{\"type\":\"text\",\"value\":\"primary\",\"desc\":\"type of button\",\"name\":\"type\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'6\'\\r\\nexports.name = \'Button\';\\r\\nexports.nickname = \'Button\';\\r\\nexports.type = \'Button\';\\r\\nexports.template=`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\nexports.desc = \'按钮\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  name:{\\r\\n       type: \'text\',\\r\\n       compileType:\'innerHTML\',\\r\\n       value: \'提交\',\\r\\n       desc: \'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  type: {\\r\\n    type: \'text\',\\r\\n    value: \'primary\',\\r\\n    desc: \'type of button\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":7,\"pid\":5,\"initScript\":false},{\"children\":[],\"cid\":\"205\",\"name\":\"Transfer\",\"nickname\":\"Transfer\",\"type\":\"Transfer\",\"template\":\"`\\r\\n    <Transfer{model}>\\r\\n    </Transfer>\\r\\n`\\r\\n\",\"desc\":\"Transfer\",\"allow\":null,\"model\":{\"data\":{\"type\":\"array\",\"value\":[{\"key\":\"1\",\"label\":\"内容1\",\"disabled\":false},{\"key\":\"2\",\"label\":\"内容2\",\"disabled\":true},{\"key\":\"3\",\"label\":\"内容3\",\"disabled\":false}],\"desc\":\"\",\"name\":\"data\"},\"targetKeys\":{\"type\":\"array\",\"value\":[\"1\",\"2\"],\"desc\":\"\",\"name\":\"targetKeys\"},\"style\":{\"type\":\"text\",\"value\":\"1\",\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      data:context.model.data.value,\\r\\n      \'target-keys\':context.model.targetKeys.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Transfer\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'205\'\\r\\nexports.name = \'Transfer\';\\r\\nexports.nickname = \'Transfer\';\\r\\nexports.type = \'Transfer\';\\r\\nexports.template=`\\r\\n    <Transfer{model}>\\r\\n    </Transfer>\\r\\n`\\r\\nexports.desc = \'Transfer\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    data:{\\r\\n        type:\'array\',\\r\\n        value: [\\r\\n                { \\\"key\\\": \\\"1\\\", \\\"label\\\": \\\"内��1\\\", \\\"disabled\\\": false },\\r\\n                { \\\"key\\\": \\\"2\\\", \\\"label\\\": \\\"内容2\\\", \\\"disabled\\\": true },\\r\\n                { \\\"key\\\": \\\"3\\\", \\\"label\\\": \\\"内容3\\\", \\\"disabled\\\": false }\\r\\n            ],\\r\\n        desc:\'\'\\r\\n    },\\r\\n    targetKeys: {\\r\\n       type:\'array\',\\r\\n       value:[\\\"1\\\",\\\"2\\\"],\\r\\n       desc:\'\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      data:context.model.data.value,\\r\\n      \'target-keys\':context.model.targetKeys.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Transfer\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":8,\"pid\":5,\"initScript\":false},{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"1\",\"desc\":\"\",\"name\":\"type\"},\"style\":{\"type\":\"text\",\"value\":\"2\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":10,\"pid\":5,\"initScript\":false},{\"children\":[],\"cid\":\"12\",\"name\":\"Tabs\",\"nickname\":\"Tabs\",\"type\":\"Tabs\",\"template\":\"`<Tabs{model}>{slot}</Tabs>`\\r\\n\",\"desc\":\"Tabs\",\"allow\":[\"13\"],\"model\":{\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'12\'\\r\\nexports.name = \'Tabs\';\\r\\nexports.nickname = \'Tabs\';\\r\\nexports.type = \'Tabs\';\\r\\nexports.template=\\r\\n`<Tabs{model}>{slot}</Tabs>`\\r\\nexports.desc = \'Tabs\';\\r\\nexports.allow = [13];\\r\\nexports.model = {\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":11,\"pid\":5,\"initScript\":false},{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}],\"save\":false,\"desc\":\"\",\"name\":\"data\"},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}],\"name\":\"columns\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":12,\"pid\":5,\"initScript\":false},{\"children\":[],\"cid\":\"46\",\"name\":\"Icon\",\"nickname\":\"Icon\",\"type\":\"Icon\",\"template\":\"`<Icon{model}></Icon>`\\r\\n\",\"desc\":\"Icon\",\"allow\":[],\"model\":{\"type\":{\"type\":\"select\",\"value\":\"refresh\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'46\'\\r\\nexports.name = \'Icon\';\\r\\nexports.nickname = \'Icon\';\\r\\nexports.type = \'Icon\';\\r\\nexports.template= `<Icon{model}></Icon>`\\r\\nexports.desc = \'Icon\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    type:{\\r\\n      type:\'select\',\\r\\n      value:\'refresh\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":6,\"uid\":13,\"pid\":5,\"initScript\":false}],\"cid\":\"13\",\"name\":\"TabPane\",\"nickname\":\"TabPane\",\"type\":\"TabPane\",\"template\":\"`<TabPane{model}>{slot}</TabPane>`\\r\\n\",\"desc\":\"TabPane\",\"allow\":[],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"1\",\"desc\":\"label\",\"name\":\"label\"},\"name\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"name\",\"name\":\"name\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'13\'\\r\\nexports.name = \'TabPane\';\\r\\nexports.nickname = \'TabPane\';\\r\\nexports.type = \'TabPane\';\\r\\nexports.template=\\r\\n`<TabPane{model}>{slot}</TabPane>`\\r\\nexports.desc = \'TabPane\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'tab\',\\r\\n    desc: \'label\'\\r\\n  },\\r\\n  name: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'name\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":5,\"pid\":3,\"initScript\":false},{\"children\":[],\"cid\":\"13\",\"name\":\"TabPane\",\"nickname\":\"TabPane\",\"type\":\"TabPane\",\"template\":\"`<TabPane{model}>{slot}</TabPane>`\\r\\n\",\"desc\":\"TabPane\",\"allow\":[],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"tab\",\"desc\":\"label\",\"name\":\"label\"},\"name\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"name\",\"name\":\"name\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'13\'\\r\\nexports.name = \'TabPane\';\\r\\nexports.nickname = \'TabPane\';\\r\\nexports.type = \'TabPane\';\\r\\nexports.template=\\r\\n`<TabPane{model}>{slot}</TabPane>`\\r\\nexports.desc = \'TabPane\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'tab\',\\r\\n    desc: \'label\'\\r\\n  },\\r\\n  name: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'name\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":6,\"pid\":3,\"initScript\":false}],\"cid\":\"12\",\"name\":\"Tabs\",\"nickname\":\"Tabs\",\"type\":\"Tabs\",\"template\":\"`<Tabs{model}>{slot}</Tabs>`\\r\\n\",\"desc\":\"Tabs\",\"allow\":[\"13\"],\"model\":{\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'12\'\\r\\nexports.name = \'Tabs\';\\r\\nexports.nickname = \'Tabs\';\\r\\nexports.type = \'Tabs\';\\r\\nexports.template=\\r\\n`<Tabs{model}>{slot}</Tabs>`\\r\\nexports.desc = \'Tabs\';\\r\\nexports.allow = [13];\\r\\nexports.model = {\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":3,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"201\",\"name\":\"Switch\",\"nickname\":\"Switch\",\"type\":\"i-switch\",\"template\":\"`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\n\",\"desc\":\"开关\",\"allow\":null,\"model\":{\"size\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"size\",\"name\":\"size\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'201\'\\r\\nexports.name = \'Switch\';\\r\\nexports.nickname = \'Switch\';\\r\\nexports.type = \'i-switch\';\\r\\nexports.template=`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\nexports.desc = \'���关\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    size:{\\r\\n        type:\'text\',\\r\\n        value: \'\',\\r\\n        desc: \'size\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":4,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":14,\"pid\":1,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":false,\"maxUid\":16}', null, '33', '2017-11-02 13:35:17', '33', '2017-11-02 15:45:08', '0');
INSERT INTO `page` VALUES ('283', '33', '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":13,\"initScript\":false,\"maxUid\":14}', null, '33', '2017-11-02 15:56:13', '33', '2017-11-02 17:03:06', '0');
INSERT INTO `page` VALUES ('284', 'test1', '{\"children\":[{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"WrapInput\",\"template\":\"`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"model\":{\"value\":{\"type\":\"text\",\"watch\":\"false\",\"value\":\"123\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"watch\":false,\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"watch\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"watch\":false,\"value\":true,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'WrapInput\';\\r\\nexports.template=\\r\\n`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  value:{\\r\\n    type: \'text\',\\r\\n    watch:\'false\',\\r\\n    value: \'\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  label:{\\r\\n    type: \'text\',\\r\\n    watch:false,\\r\\n    value: \'input\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  prop:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    watch:false,\\r\\n    value: \'value\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  required:{\\r\\n    type: \'boolean\',\\r\\n    watch:false,\\r\\n    value: false,\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n     \\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":6,\"uid\":2,\"pid\":1,\"initScript\":true}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":true,\"maxUid\":3}', null, '1', '2017-11-02 16:46:09', '1', '2017-11-02 16:46:09', '0');
INSERT INTO `page` VALUES ('285', '1123', '{\"children\":[{\"children\":[{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"212\",\"name\":\"FormSelect\",\"nickname\":\"FormSelect\",\"type\":\"FormSelect\",\"template\":\"`\\r\\n    <Select{model}>\\r\\n    </Select>\\r\\n`\\r\\n\",\"desc\":\"下拉框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"北京市\",\"value\":\"1\"},{\"label\":\"上海市\",\"value\":\"2\"},{\"label\":\"深圳市\",\"value\":\"3\"}],\"desc\":\"\",\"name\":\"items\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"select\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref:\'formItem\',\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }, \\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Select\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'212\'\\r\\nexports.name = \'FormSelect\';\\r\\nexports.nickname = \'FormSelect\';\\r\\nexports.type = \'FormSelect\';\\r\\nexports.template=\\r\\n`\\r\\n    <Select{model}>\\r\\n    </Select>\\r\\n`\\r\\nexports.desc = \'下拉框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n  items: {\\r\\n        exclude:true,\\r\\n        type: \'json\',\\r\\n            value: [{\\r\\n            label: \'北京市\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'上海市\',\\r\\n            value: \'2\'\\r\\n        }, {\\r\\n            label: \'深圳市\',\\r\\n            value: \'3\'\\r\\n        }],\\r\\n        desc: \'\' \\r\\n  },\\r\\n  value:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    value: \'\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  label:{\\r\\n    type: \'text\',\\r\\n    value: \'input\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  prop:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    value: \'value\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  required:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n       width:\'300px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref:\'formItem\',\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }, \\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Select\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":6,\"uid\":123,\"pid\":117,\"initScript\":false},{\"children\":[],\"cid\":\"214\",\"name\":\"FormDate\",\"nickname\":\"FormDate\",\"type\":\"FormDate\",\"template\":\"`\\r\\n    <FormDate{model}>\\r\\n    </FormDate>\\r\\n`\\r\\n\",\"desc\":\"date\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":0,\"desc\":\"\",\"name\":\"value\"},\"type\":{\"type\":\"text\",\"value\":\"datetime\",\"desc\":\"\",\"name\":\"type\"},\"format\":{\"type\":\"text\",\"value\":\"yyyy-MM-dd HH:mm:ss\",\"desc\":\"\",\"name\":\"format\"},\"label\":{\"type\":\"text\",\"value\":\"date\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref:\'formItem\',\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'DatePicker\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'214\'\\r\\nexports.name = \'FormDate\';\\r\\nexports.nickname = \'FormDate\';\\r\\nexports.type = \'FormDate\';\\r\\nexports.template=\\r\\n`\\r\\n    <FormDate{model}>\\r\\n    </FormDate>\\r\\n`\\r\\nexports.desc = \'date\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n  value:{\\r\\n    type: \'text\',\\r\\n    value: 0,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  type:{\\r\\n    type: \'text\',\\r\\n    value: \'datetime\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  format:{\\r\\n    type: \'text\',\\r\\n    value: \'yyyy-MM-dd HH:mm:ss\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  label:{\\r\\n    type: \'text\',\\r\\n    value: \'input\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  prop:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    value: \'value\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  required:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n     \\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref:\'formItem\',\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'DatePicker\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":6,\"uid\":124,\"pid\":117,\"initScript\":false},{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref: \'formItem\'+context.uid,\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      ref:\'model\',\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template=\\r\\n`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\nexports.desc = \'���入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n  value:{\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  label:{\\r\\n    type: \'text\',\\r\\n    value: \'input\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  prop:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    value: \'value\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  required:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n        width:\'300px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref: \'formItem\'+context.uid,\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      ref:\'model\',\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":6,\"uid\":125,\"pid\":117,\"initScript\":false},{\"children\":[],\"cid\":\"217\",\"name\":\"FormRadio\",\"nickname\":\"FormRadio\",\"type\":\"FormRadio\",\"template\":\"`\\r\\n    <Radio{model}>\\r\\n    </Radio>\\r\\n`\\r\\n\",\"desc\":\"radio\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"北京市\",\"value\":\"1\"},{\"label\":\"上海市\",\"value\":\"2\"},{\"label\":\"深圳市\",\"value\":\"3\"}],\"desc\":\"\",\"name\":\"items\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"2\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref:\'formItem\',\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }, \\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Radio\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'217\'\\r\\nexports.name = \'FormRadio\';\\r\\nexports.nickname = \'FormRadio\';\\r\\nexports.type = \'FormRadio\';\\r\\nexports.template=\\r\\n`\\r\\n    <Radio{model}>\\r\\n    </Radio>\\r\\n`\\r\\nexports.desc = \'radio\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n  items: {\\r\\n        exclude:true,\\r\\n        type: \'json\',\\r\\n        value: [{\\r\\n            label: \'北京市\',\\r\\n            value: \'1\'\\r\\n            }, {\\r\\n                label: \'上海市\',\\r\\n                value: \'2\'\\r\\n            }, {\\r\\n                label: \'深圳市\',\\r\\n                value: \'3\'\\r\\n            }],\\r\\n        desc: \'\' \\r\\n  },\\r\\n  value:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    value: \'\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  label:{\\r\\n    type: \'text\',\\r\\n    value: \'input\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  prop:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    value: \'value\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  required:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n       width:\'300px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref:\'formItem\',\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }, \\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Radio\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":6,\"uid\":127,\"pid\":117,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":117,\"pid\":116,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"6\",\"name\":\"Button\",\"nickname\":\"Button\",\"type\":\"Button\",\"template\":\"`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\n\",\"desc\":\"按钮\",\"allow\":null,\"model\":{\"name\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"提交\",\"desc\":\"\",\"name\":\"name\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"},\"type\":{\"type\":\"text\",\"value\":\"primary\",\"desc\":\"type of button\",\"name\":\"type\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'6\'\\r\\nexports.name = \'Button\';\\r\\nexports.nickname = \'Button\';\\r\\nexports.type = \'Button\';\\r\\nexports.template=`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\nexports.desc = \'按钮\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  name:{\\r\\n       type: \'text\',\\r\\n       compileType:\'innerHTML\',\\r\\n       value: \'提交\',\\r\\n       desc: \'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  type: {\\r\\n    type: \'text\',\\r\\n    value: \'primary\',\\r\\n    desc: \'type of button\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":120,\"pid\":118,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":118,\"pid\":116,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":116,\"pid\":115,\"initScript\":false}],\"cid\":\"3\",\"name\":\"Form\",\"nickname\":\"Form\",\"type\":\"Form\",\"template\":\"`<Form{model}>{slot}</Form>`;\\r\\n\",\"desc\":\"表单\",\"allow\":[\"1\",\"4\"],\"model\":{\"labelWidth\":{\"type\":\"text\",\"value\":100,\"desc\":\"表单label宽度\"},\"inline\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"行内\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\',(param)=>{\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm,\'formItem\')\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n   \\r\\n        refs.forEach(ref=>{\\r\\n           ref.$children[0].validate(function (valid) {\\r\\n              if (!valid) pass = false\\r\\n           })\\r\\n        })\\r\\n        \\r\\n        if(!pass){\\r\\n           eventCenter.createElement.vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n    })\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      inline:context.model.inline.value,\\r\\n      \'label-width\': context.model.labelWidth.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Form\'\\r\\n      }\\r\\n    ],\\r\\n    navtiveOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'3\'\\r\\nexports.name = \'Form\';\\r\\nexports.nickname = \'Form\';\\r\\nexports.type = \'Form\';\\r\\nexports.template = `<Form{model}>{slot}</Form>`;\\r\\nexports.desc = \'表单\';\\r\\nexports.allow = [1,4];\\r\\nexports.model = {\\r\\n \\r\\n  labelWidth: {\\r\\n    type: \'text\',\\r\\n    value: 100,\\r\\n    desc: \'表单label宽度\'\\r\\n  },\\r\\n  inline:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'行内\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  \\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\',(param)=>{\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm,\'formItem\')\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n   \\r\\n        refs.forEach(ref=>{\\r\\n           ref.$children[0].validate(function (valid) {\\r\\n              if (!valid) pass = false\\r\\n           })\\r\\n        })\\r\\n        \\r\\n        if(!pass){\\r\\n           eventCenter.createElement.vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n    })\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      inline:context.model.inline.value,\\r\\n      \'label-width\': context.model.labelWidth.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Form\'\\r\\n      }\\r\\n    ],\\r\\n    navtiveOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":3,\"uid\":115,\"pid\":25,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽��置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":25,\"initScript\":false,\"maxUid\":130}', null, '1', '2017-11-02 17:37:46', '1', '2017-11-05 10:56:25', '0');
INSERT INTO `page` VALUES ('286', 'test', '{\"children\":[{\"children\":[],\"cid\":\"212\",\"name\":\"FormSelect\",\"nickname\":\"FormSelect\",\"type\":\"FormSelect\",\"template\":\"`\\r\\n    <Select{model}>\\r\\n    </Select>\\r\\n`\\r\\n\",\"desc\":\"下拉框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"北京市\",\"value\":\"1\"},{\"label\":\"上海市\",\"value\":\"2\"},{\"label\":\"深圳市\",\"value\":\"3\"}],\"desc\":\"\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref:\'formItem\',\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }, \\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Select\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'212\'\\r\\nexports.name = \'FormSelect\';\\r\\nexports.nickname = \'FormSelect\';\\r\\nexports.type = \'FormSelect\';\\r\\nexports.template=\\r\\n`\\r\\n    <Select{model}>\\r\\n    </Select>\\r\\n`\\r\\nexports.desc = \'下拉框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n  items: {\\r\\n        exclude:true,\\r\\n        type: \'json\',\\r\\n            value: [{\\r\\n            label: \'北京市\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'上海市\',\\r\\n            value: \'2\'\\r\\n        }, {\\r\\n            label: \'深圳市\',\\r\\n            value: \'3\'\\r\\n        }],\\r\\n        desc: \'\' \\r\\n  },\\r\\n  value:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    value: \'\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  label:{\\r\\n    type: \'text\',\\r\\n    value: \'input\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  prop:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    value: \'value\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  required:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n       width:\'300px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref:\'formItem\',\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }, \\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Select\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":6,\"uid\":2,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":3,\"pid\":1,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"202\",\"name\":\"AutoComplete\",\"nickname\":\"AutoComplete\",\"type\":\"AutoComplete\",\"template\":\"`<AutoComplete{model}>\\r\\n        <Option value=\\\"beijing\\\" label=\\\"北京市\\\">\\r\\n            <span>北京</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">Beiing</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shanghai\\\" label=\\\"上海市\\\">\\r\\n            <span>上海</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShangHai</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shenzhen\\\" label=\\\"深圳市\\\">\\r\\n            <span>深圳</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShenZhen</span>\\r\\n        </Option>\\r\\n</AutoComplete>`\\r\\n\",\"desc\":\"自动补全\",\"allow\":null,\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"width\":\"200px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'AutoComplete\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'202\'\\r\\nexports.name = \'AutoComplete\';\\r\\nexports.nickname = \'AutoComplete\';\\r\\nexports.type = \'AutoComplete\';\\r\\nexports.template =\\r\\n  `<AutoComplete{model}>\\r\\n        <Option value=\\\"beijing\\\" label=\\\"北京市\\\">\\r\\n            <span>北京</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">Beiing</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shanghai\\\" label=\\\"上海市\\\">\\r\\n            <span>上海</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShangHai</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shenzhen\\\" label=\\\"深圳市\\\">\\r\\n            <span>深圳</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShenZhen</span>\\r\\n        </Option>\\r\\n</AutoComplete>`\\r\\nexports.desc = \'自动补全\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  \\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n      width: \'200px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'AutoComplete\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":14,\"pid\":4,\"initScript\":false},{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":20,\"pid\":4,\"initScript\":false}],\"cid\":\"13\",\"name\":\"TabPane\",\"nickname\":\"TabPane\",\"type\":\"TabPane\",\"template\":\"`<TabPane{model}>{slot}</TabPane>`\\r\\n\",\"desc\":\"TabPane\",\"allow\":[],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"tab\",\"desc\":\"label\",\"name\":\"label\"},\"name\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"name\",\"name\":\"name\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'13\'\\r\\nexports.name = \'TabPane\';\\r\\nexports.nickname = \'TabPane\';\\r\\nexports.type = \'TabPane\';\\r\\nexports.template=\\r\\n`<TabPane{model}>{slot}</TabPane>`\\r\\nexports.desc = \'TabPane\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'tab\',\\r\\n    desc: \'label\'\\r\\n  },\\r\\n  name: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'name\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":4,\"pid\":1,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"10\",\"name\":\"CheckboxGroup\",\"nickname\":\"CheckboxGroup\",\"type\":\"CheckboxGroup\",\"template\":\"`\\r\\n    <CheckboxGroup{model}>\\r\\n        {slot}\\r\\n    </CheckboxGroup>\\r\\n`\\r\\n\",\"desc\":\"���选Group\",\"allow\":[\"9\"],\"model\":{\"value\":{\"type\":\"text\",\"value\":[],\"desc\":\"选中的Checkbox的值\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props :{\\r\\n       value:context.model.value.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'CheckboxGroup\'\\r\\n        }\\r\\n    ]\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement) \\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'10\'\\r\\nexports.name = \'CheckboxGroup\';\\r\\nexports.nickname = \'CheckboxGroup\';\\r\\nexports.type = \'CheckboxGroup\';\\r\\nexports.template=`\\r\\n    <CheckboxGroup{model}>\\r\\n        {slot}\\r\\n    </CheckboxGroup>\\r\\n`\\r\\nexports.desc = \'多选Group\';\\r\\nexports.allow = [9];\\r\\nexports.model = {\\r\\n  value:{\\r\\n    type:\'text\',\\r\\n    value: [],\\r\\n    desc: \'选中的Checkbox的值\'     \\r\\n  },   \\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props :{\\r\\n       value:context.model.value.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'CheckboxGroup\'\\r\\n        }\\r\\n    ]\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement) \\r\\n  }))\\r\\n}\",\"clazzId\":3,\"uid\":17,\"pid\":16,\"initScript\":false}],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"\",\"name\":\"style\"},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"\",\"desc\":\"\",\"name\":\"innerHTML\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":16,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"\"},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":19,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"3\",\"name\":\"Form\",\"nickname\":\"Form\",\"type\":\"Form\",\"template\":\"`<Form{model}>{slot}</Form>`;\\r\\n\",\"desc\":\"表单\",\"allow\":[\"1\",\"4\"],\"model\":{\"labelWidth\":{\"type\":\"text\",\"value\":100,\"desc\":\"表单label���度\"},\"inline\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"行内\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\',(param)=>{\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm,\'formItem\')\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n   \\r\\n        refs.forEach(ref=>{\\r\\n           ref.$children[0].validate(function (valid) {\\r\\n              if (!valid) pass = false\\r\\n           })\\r\\n        })\\r\\n        \\r\\n        if(!pass){\\r\\n           eventCenter.createElement.vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n    })\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      inline:context.model.inline.value,\\r\\n      \'label-width\': context.model.labelWidth.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Form\'\\r\\n      }\\r\\n    ],\\r\\n    navtiveOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'3\'\\r\\nexports.name = \'Form\';\\r\\nexports.nickname = \'Form\';\\r\\nexports.type = \'Form\';\\r\\nexports.template = `<Form{model}>{slot}</Form>`;\\r\\nexports.desc = \'表单\';\\r\\nexports.allow = [1,4];\\r\\nexports.model = {\\r\\n \\r\\n  labelWidth: {\\r\\n    type: \'text\',\\r\\n    value: 100,\\r\\n    desc: \'表单label宽度\'\\r\\n  },\\r\\n  inline:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'行内\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  \\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\',(param)=>{\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm,\'formItem\')\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n   \\r\\n        refs.forEach(ref=>{\\r\\n           ref.$children[0].validate(function (valid) {\\r\\n              if (!valid) pass = false\\r\\n           })\\r\\n        })\\r\\n        \\r\\n        if(!pass){\\r\\n           eventCenter.createElement.vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n    })\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      inline:context.model.inline.value,\\r\\n      \'label-width\': context.model.labelWidth.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Form\'\\r\\n      }\\r\\n    ],\\r\\n    navtiveOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":3,\"uid\":21,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"12\",\"name\":\"Tabs\",\"nickname\":\"Tabs\",\"type\":\"Tabs\",\"template\":\"`<Tabs{model}>{slot}</Tabs>`\\r\\n\",\"desc\":\"Tabs\",\"allow\":[\"13\"],\"model\":{\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'12\'\\r\\nexports.name = \'Tabs\';\\r\\nexports.nickname = \'Tabs\';\\r\\nexports.type = \'Tabs\';\\r\\nexports.template=\\r\\n`<Tabs{model}>{slot}</Tabs>`\\r\\nexports.desc = \'Tabs\';\\r\\nexports.allow = [13];\\r\\nexports.model = {\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":22,\"pid\":1,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":false,\"maxUid\":23}', null, '33', '2017-11-03 14:23:52', '33', '2017-11-04 15:37:50', '0');
INSERT INTO `page` VALUES ('287', '阿萨德飞', '{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":4,\"slotName\":\"title\",\"showSlot\":false,\"initScript\":true},{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":5,\"slotName\":\"extra\",\"showSlot\":false,\"initScript\":true},{\"children\":[{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":7,\"pid\":6,\"initScript\":true},{\"children\":[{\"children\":[],\"cid\":\"203\",\"name\":\"Slider\",\"nickname\":\"Slider\",\"type\":\"Slider\",\"template\":\"`\\r\\n    <Slider{model}>\\r\\n    </Slider>\\r\\n`\\r\\n\",\"desc\":\"Slider\",\"allow\":null,\"model\":{\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Slider\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'203\'\\r\\nexports.name = \'Slider\';\\r\\nexports.nickname = \'Slider\';\\r\\nexports.type = \'Slider\';\\r\\nexports.template=`\\r\\n    <Slider{model}>\\r\\n    </Slider>\\r\\n`\\r\\nexports.desc = \'Slider\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Slider\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":10,\"pid\":9,\"initScript\":true},{\"children\":[],\"cid\":\"5\",\"name\":\"Input\",\"nickname\":\"Input\",\"type\":\"Input\",\"template\":\"`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"model\":{\"disabled\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"disabled\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"200px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const eventCenter = createElement.eventCenter\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      disabled:context.model.disabled.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'5\'\\r\\nexports.name = \'Input\';\\r\\nexports.nickname = \'Input\';\\r\\nexports.type = \'Input\';\\r\\nexports.template=\\r\\n`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  disabled:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n      width: \'200px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const eventCenter = createElement.eventCenter\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      disabled:context.model.disabled.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":11,\"pid\":9,\"initScript\":true}],\"cid\":\"13\",\"name\":\"TabPane\",\"nickname\":\"TabPane\",\"type\":\"TabPane\",\"template\":\"`<TabPane{model}>{slot}</TabPane>`\\r\\n\",\"desc\":\"TabPane\",\"allow\":[],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"tab\",\"desc\":\"label\"},\"name\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"name\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'13\'\\r\\nexports.name = \'TabPane\';\\r\\nexports.nickname = \'TabPane\';\\r\\nexports.type = \'TabPane\';\\r\\nexports.template=\\r\\n`<TabPane{model}>{slot}</TabPane>`\\r\\nexports.desc = \'TabPane\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'tab\',\\r\\n    desc: \'label\'\\r\\n  },\\r\\n  name: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'name\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":9,\"pid\":6,\"initScript\":true}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":6,\"slotName\":\"default\",\"showSlot\":false,\"initScript\":true}],\"cid\":\"15\",\"name\":\"Card\",\"nickname\":\"Card\",\"type\":\"WrapCard\",\"template\":\"`<Card{model}>{slot}</Card>`\\r\\n\",\"desc\":\"Card\",\"allow\":[],\"model\":{\"showHead\":{\"type\":\"boolean\",\"exclude\":true,\"value\":false,\"desc\":\"\"},\"showExtra\":{\"type\":\"boolean\",\"exclude\":true,\"value\":false,\"desc\":\"\"},\"showBody\":{\"type\":\"boolean\",\"exclude\":true,\"dontEdit\":true,\"value\":false,\"desc\":\"\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\"},\"disHover\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"禁用鼠标悬停显示阴影\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const dropTitle = context.children[0]\\r\\n  const dropExtra = context.children[1]\\r\\n  const dropBody = context.children[2]\\r\\n  dropTitle.showSlot = context.model.showHead.value\\r\\n  dropExtra.showSlot = context.model.showExtra.value\\r\\n  dropBody.showSlot = context.model.showBody.value\\r\\n  \\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n    \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n        showHead:context.model.showHead.value,\\r\\n        showExtra:context.model.showExtra.value,\\r\\n        disHover:context.model.disHover.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Card\'\\r\\n        }\\r\\n    ],\\r\\n    scopedSlots: {\\r\\n      \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n      \'extra\': () =>  context.model.showExtra.value && dropExtra.render(createElement),\\r\\n      \'body\': () =>   dropBody.render(createElement)\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'15\'\\r\\nexports.name = \'Card\';\\r\\nexports.nickname = \'Card\';\\r\\nexports.type = \'WrapCard\';\\r\\nexports.template=`<Card{model}>{slot}</Card>`\\r\\nexports.desc = \'Card\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  showHead:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  showExtra:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  showBody:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    dontEdit:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  disHover: {\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'禁用鼠标悬停显示阴影\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const dropTitle = context.children[0]\\r\\n  const dropExtra = context.children[1]\\r\\n  const dropBody = context.children[2]\\r\\n  dropTitle.showSlot = context.model.showHead.value\\r\\n  dropExtra.showSlot = context.model.showExtra.value\\r\\n  dropBody.showSlot = context.model.showBody.value\\r\\n  \\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n    \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n        showHead:context.model.showHead.value,\\r\\n        showExtra:context.model.showExtra.value,\\r\\n        disHover:context.model.disHover.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Card\'\\r\\n        }\\r\\n    ],\\r\\n    scopedSlots: {\\r\\n      \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n      \'extra\': () =>  context.model.showExtra.value && dropExtra.render(createElement),\\r\\n      \'body\': () =>   dropBody.render(createElement)\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":3,\"pid\":1,\"initScript\":true}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":true,\"maxUid\":12}', null, '33', '2017-11-04 10:23:41', '33', '2017-11-04 10:23:41', '0');
INSERT INTO `page` VALUES ('288', null, '{\"children\":[{\"children\":[],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"\"},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":10,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"202\",\"name\":\"AutoComplete\",\"nickname\":\"AutoComplete\",\"type\":\"AutoComplete\",\"template\":\"`<AutoComplete{model}>\\r\\n        <Option value=\\\"beijing\\\" label=\\\"北京市\\\">\\r\\n            <span>北京</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">Beiing</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shanghai\\\" label=\\\"上海市\\\">\\r\\n            <span>上海</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShangHai</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shenzhen\\\" label=\\\"深圳市\\\">\\r\\n            <span>深圳</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShenZhen</span>\\r\\n        </Option>\\r\\n</AutoComplete>`\\r\\n\",\"desc\":\"自动补全\",\"allow\":null,\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"width\":\"200px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'AutoComplete\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'202\'\\r\\nexports.name = \'AutoComplete\';\\r\\nexports.nickname = \'AutoComplete\';\\r\\nexports.type = \'AutoComplete\';\\r\\nexports.template =\\r\\n  `<AutoComplete{model}>\\r\\n        <Option value=\\\"beijing\\\" label=\\\"北京市\\\">\\r\\n            <span>北京</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">Beiing</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shanghai\\\" label=\\\"上海市\\\">\\r\\n            <span>上海</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShangHai</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shenzhen\\\" label=\\\"深圳市\\\">\\r\\n            <span>深圳</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShenZhen</span>\\r\\n        </Option>\\r\\n</AutoComplete>`\\r\\nexports.desc = \'自动补全\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  \\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n      width: \'200px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'AutoComplete\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":11,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"202\",\"name\":\"AutoComplete\",\"nickname\":\"AutoComplete\",\"type\":\"AutoComplete\",\"template\":\"`<AutoComplete{model}>\\r\\n        <Option value=\\\"beijing\\\" label=\\\"北京市\\\">\\r\\n            <span>北京</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">Beiing</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shanghai\\\" label=\\\"上海市\\\">\\r\\n            <span>上海</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShangHai</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shenzhen\\\" label=\\\"深圳市\\\">\\r\\n            <span>深圳</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShenZhen</span>\\r\\n        </Option>\\r\\n</AutoComplete>`\\r\\n\",\"desc\":\"自动补全\",\"allow\":null,\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"width\":\"200px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'AutoComplete\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'202\'\\r\\nexports.name = \'AutoComplete\';\\r\\nexports.nickname = \'AutoComplete\';\\r\\nexports.type = \'AutoComplete\';\\r\\nexports.template =\\r\\n  `<AutoComplete{model}>\\r\\n        <Option value=\\\"beijing\\\" label=\\\"北京市\\\">\\r\\n            <span>北京</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">Beiing</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shanghai\\\" label=\\\"上海市\\\">\\r\\n            <span>上海</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShangHai</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shenzhen\\\" label=\\\"深圳市\\\">\\r\\n            <span>深圳</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShenZhen</span>\\r\\n        </Option>\\r\\n</AutoComplete>`\\r\\nexports.desc = \'自动补全\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  \\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n      width: \'200px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'AutoComplete\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":12,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"201\",\"name\":\"Switch\",\"nickname\":\"Switch\",\"type\":\"i-switch\",\"template\":\"`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\n\",\"desc\":\"开关\",\"allow\":null,\"model\":{\"size\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"size\",\"name\":\"size\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'201\'\\r\\nexports.name = \'Switch\';\\r\\nexports.nickname = \'Switch\';\\r\\nexports.type = \'i-switch\';\\r\\nexports.template=`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\nexports.desc = \'开关\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    size:{\\r\\n        type:\'text\',\\r\\n        value: \'\',\\r\\n        desc: \'size\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":13,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"201\",\"name\":\"Switch\",\"nickname\":\"Switch\",\"type\":\"i-switch\",\"template\":\"`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\n\",\"desc\":\"开关\",\"allow\":null,\"model\":{\"size\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"size\",\"name\":\"size\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'201\'\\r\\nexports.name = \'Switch\';\\r\\nexports.nickname = \'Switch\';\\r\\nexports.type = \'i-switch\';\\r\\nexports.template=`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\nexports.desc = \'开关\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    size:{\\r\\n        type:\'text\',\\r\\n        value: \'\',\\r\\n        desc: \'size\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":14,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"204\",\"name\":\"Cascader\",\"nickname\":\"Cascader\",\"type\":\"Cascader\",\"template\":\"`\\r\\n    <Cascader{model}>\\r\\n    </Cascader>\\r\\n`\\r\\n\",\"desc\":\"Cascader\",\"allow\":null,\"model\":{\"data\":{\"type\":\"array\",\"value\":[{\"value\":\"beijing\",\"label\":\"北京\",\"children\":[{\"value\":\"gugong\",\"label\":\"故宫\",\"__label\":\"北京 / 故宫\",\"__value\":\"beijing,gugong\"},{\"value\":\"tiantan\",\"label\":\"天坛\",\"__label\":\"北京 / 天坛\",\"__value\":\"beijing,tiantan\"},{\"value\":\"wangfujing\",\"label\":\"王府井\",\"__label\":\"北京 / 王府井\",\"__value\":\"beijing,wangfujing\"}]},{\"value\":\"jiangsu\",\"label\":\"江苏\",\"children\":[{\"value\":\"nanjing\",\"label\":\"南京\",\"children\":[{\"value\":\"fuzimiao\",\"label\":\"夫子庙\",\"__label\":\"江苏 / 南京 / 夫子庙\",\"__value\":\"jiangsu,nanjing,fuzimiao\"}]},{\"value\":\"suzhou\",\"label\":\"苏州\",\"children\":[{\"value\":\"zhuozhengyuan\",\"label\":\"拙政园\",\"__label\":\"江苏 / 苏州 / 拙政园\",\"__value\":\"jiangsu,suzhou,zhuozhengyuan\"},{\"value\":\"shizilin\",\"label\":\"狮子林\",\"__label\":\"江苏 / 苏州 / 狮子林\",\"__value\":\"jiangsu,suzhou,shizilin\"}]}]}],\"desc\":\"\",\"name\":\"data\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      data:context.model.data.value,\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Cascader\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'204\'\\r\\nexports.name = \'Cascader\';\\r\\nexports.nickname = \'Cascader\';\\r\\nexports.type = \'Cascader\';\\r\\nexports.template=`\\r\\n    <Cascader{model}>\\r\\n    </Cascader>\\r\\n`\\r\\nexports.desc = \'Cascader\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    data:{\\r\\n        type:\'array\',\\r\\n        value: [{\\r\\n                    value: \'beijing\',\\r\\n                    label: \'北京\',\\r\\n                    children: [\\r\\n                        {\\r\\n                            value: \'gugong\',\\r\\n                            label: \'故宫\'\\r\\n                        },\\r\\n                        {\\r\\n                            value: \'tiantan\',\\r\\n                            label: \'天坛\'\\r\\n                        },\\r\\n                        {\\r\\n                            value: \'wangfujing\',\\r\\n                            label: \'王府井\'\\r\\n                        }\\r\\n                    ]\\r\\n                }, {\\r\\n                    value: \'jiangsu\',\\r\\n                    label: \'江苏\',\\r\\n                    children: [\\r\\n                        {\\r\\n                            value: \'nanjing\',\\r\\n                            label: \'南京\',\\r\\n                            children: [\\r\\n                                {\\r\\n                                    value: \'fuzimiao\',\\r\\n                                    label: \'夫子庙\',\\r\\n                                }\\r\\n                            ]\\r\\n                        },\\r\\n                        {\\r\\n                            value: \'suzhou\',\\r\\n                            label: \'苏州\',\\r\\n                            children: [\\r\\n                                {\\r\\n                                    value: \'zhuozhengyuan\',\\r\\n                                    label: \'拙政园\',\\r\\n                                },\\r\\n                                {\\r\\n                                    value: \'shizilin\',\\r\\n                                    label: \'狮子林\',\\r\\n                                }\\r\\n                            ]\\r\\n                        }\\r\\n                    ],\\r\\n          }],\\r\\n        desc:\'\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      data:context.model.data.value,\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Cascader\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":15,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"6\",\"name\":\"Button\",\"nickname\":\"Button\",\"type\":\"Button\",\"template\":\"`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\n\",\"desc\":\"按钮\",\"allow\":null,\"model\":{\"name\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"提交\",\"desc\":\"\",\"name\":\"name\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"},\"type\":{\"type\":\"text\",\"value\":\"primary\",\"desc\":\"type of button\",\"name\":\"type\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'6\'\\r\\nexports.name = \'Button\';\\r\\nexports.nickname = \'Button\';\\r\\nexports.type = \'Button\';\\r\\nexports.template=`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\nexports.desc = \'按钮\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  name:{\\r\\n       type: \'text\',\\r\\n       compileType:\'innerHTML\',\\r\\n       value: \'提交\',\\r\\n       desc: \'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  type: {\\r\\n    type: \'text\',\\r\\n    value: \'primary\',\\r\\n    desc: \'type of button\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":16,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"3\",\"name\":\"Form\",\"nickname\":\"Form\",\"type\":\"Form\",\"template\":\"`<Form{model}>{slot}</Form>`;\\r\\n\",\"desc\":\"表单\",\"allow\":[\"1\",\"4\"],\"model\":{\"labelWidth\":{\"type\":\"text\",\"value\":100,\"desc\":\"表单label宽度\"},\"inline\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"行内\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\',(param)=>{\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm,\'formItem\')\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n   \\r\\n        refs.forEach(ref=>{\\r\\n           ref.$children[0].validate(function (valid) {\\r\\n              if (!valid) pass = false\\r\\n           })\\r\\n        })\\r\\n        \\r\\n        if(!pass){\\r\\n           eventCenter.createElement.vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n    })\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      inline:context.model.inline.value,\\r\\n      \'label-width\': context.model.labelWidth.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Form\'\\r\\n      }\\r\\n    ],\\r\\n    navtiveOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'3\'\\r\\nexports.name = \'Form\';\\r\\nexports.nickname = \'Form\';\\r\\nexports.type = \'Form\';\\r\\nexports.template = `<Form{model}>{slot}</Form>`;\\r\\nexports.desc = \'表单\';\\r\\nexports.allow = [1,4];\\r\\nexports.model = {\\r\\n \\r\\n  labelWidth: {\\r\\n    type: \'text\',\\r\\n    value: 100,\\r\\n    desc: \'表单label宽度\'\\r\\n  },\\r\\n  inline:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'行内\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  \\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\',(param)=>{\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm,\'formItem\')\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n   \\r\\n        refs.forEach(ref=>{\\r\\n           ref.$children[0].validate(function (valid) {\\r\\n              if (!valid) pass = false\\r\\n           })\\r\\n        })\\r\\n        \\r\\n        if(!pass){\\r\\n           eventCenter.createElement.vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n    })\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      inline:context.model.inline.value,\\r\\n      \'label-width\': context.model.labelWidth.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'droppable\'\\r\\n      },\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Form\'\\r\\n      }\\r\\n    ],\\r\\n    navtiveOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":3,\"uid\":17,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}],\"save\":false,\"desc\":\"\",\"name\":\"data\"},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}],\"name\":\"columns\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":18,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref: \'formItem\'+context.uid,\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      ref:\'model\',\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template=\\r\\n`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n  value:{\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  label:{\\r\\n    type: \'text\',\\r\\n    value: \'input\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  prop:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    value: \'value\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  required:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n        width:\'300px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref: \'formItem\'+context.uid,\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      ref:\'model\',\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":6,\"uid\":19,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"46\",\"name\":\"Icon\",\"nickname\":\"Icon\",\"type\":\"Icon\",\"template\":\"`<Icon{model}></Icon>`\\r\\n\",\"desc\":\"Icon\",\"allow\":[],\"model\":{\"type\":{\"type\":\"select\",\"value\":\"refresh\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'46\'\\r\\nexports.name = \'Icon\';\\r\\nexports.nickname = \'Icon\';\\r\\nexports.type = \'Icon\';\\r\\nexports.template= `<Icon{model}></Icon>`\\r\\nexports.desc = \'Icon\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    type:{\\r\\n      type:\'select\',\\r\\n      value:\'refresh\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":6,\"uid\":20,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref: \'formItem\'+context.uid,\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      ref:\'model\',\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template=\\r\\n`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n  value:{\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  label:{\\r\\n    type: \'text\',\\r\\n    value: \'input\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  prop:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    value: \'value\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  required:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n        width:\'300px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref: \'formItem\'+context.uid,\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      ref:\'model\',\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":6,\"uid\":21,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref: \'formItem\'+context.uid,\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      ref:\'model\',\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template=\\r\\n`\\r\\n    <Input{model}>\\r\\n    </Input>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n  value:{\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  label:{\\r\\n    type: \'text\',\\r\\n    value: \'input\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  prop:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    value: \'value\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  required:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n        width:\'300px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n    context.script(createElement.eventCenter)\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref: \'formItem\'+context.uid,\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      ref:\'model\',\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Input\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":6,\"uid\":22,\"pid\":8,\"initScript\":false},{\"children\":[],\"cid\":\"213\",\"name\":\"FormNumber\",\"nickname\":\"FormNumber\",\"type\":\"FormNumber\",\"template\":\"`\\r\\n    <InputNumber{model}>\\r\\n    </InputNumber>\\r\\n`\\r\\n\",\"desc\":\"数字输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":0,\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"max\":{\"type\":\"text\",\"value\":10,\"desc\":\"\"},\"min\":{\"type\":\"text\",\"value\":0,\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref:\'formItem\',\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'InputNumber\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'213\'\\r\\nexports.name = \'FormNumber\';\\r\\nexports.nickname = \'FormNumber\';\\r\\nexports.type = \'FormNumber\';\\r\\nexports.template=\\r\\n`\\r\\n    <InputNumber{model}>\\r\\n    </InputNumber>\\r\\n`\\r\\nexports.desc = \'数字输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n  value:{\\r\\n    type: \'text\',\\r\\n    value: 0,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  label:{\\r\\n    type: \'text\',\\r\\n    value: \'input\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  max:{\\r\\n    type: \'text\',\\r\\n    value: 10,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  min:{\\r\\n    type: \'text\',\\r\\n    value: 0,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  prop:{\\r\\n    type: \'text\',\\r\\n    showConfig:false,\\r\\n    value: \'value\',\\r\\n    desc: \'\'\\r\\n  },\\r\\n  required:{\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n     \\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    \\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    ref:\'formItem\',\\r\\n    style: context.model.style.value,\\r\\n    props:{\\r\\n      soul:context \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'InputNumber\'\\r\\n      }\\r\\n    ]\\r\\n  })\\r\\n}\",\"clazzId\":6,\"uid\":23,\"pid\":8,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"204\",\"name\":\"Cascader\",\"nickname\":\"Cascader\",\"type\":\"Cascader\",\"template\":\"`\\r\\n    <Cascader{model}>\\r\\n    </Cascader>\\r\\n`\\r\\n\",\"desc\":\"Cascader\",\"allow\":null,\"model\":{\"data\":{\"type\":\"array\",\"value\":[{\"value\":\"beijing\",\"label\":\"北京\",\"children\":[{\"value\":\"gugong\",\"label\":\"故宫\",\"__label\":\"北京 / 故宫\",\"__value\":\"beijing,gugong\"},{\"value\":\"tiantan\",\"label\":\"天坛\",\"__label\":\"北京 / 天坛\",\"__value\":\"beijing,tiantan\"},{\"value\":\"wangfujing\",\"label\":\"王府井\",\"__label\":\"北京 / 王府井\",\"__value\":\"beijing,wangfujing\"}]},{\"value\":\"jiangsu\",\"label\":\"江苏\",\"children\":[{\"value\":\"nanjing\",\"label\":\"南京\",\"children\":[{\"value\":\"fuzimiao\",\"label\":\"夫子庙\",\"__label\":\"江苏 / 南京 / 夫子庙\",\"__value\":\"jiangsu,nanjing,fuzimiao\"}]},{\"value\":\"suzhou\",\"label\":\"苏州\",\"children\":[{\"value\":\"zhuozhengyuan\",\"label\":\"拙政园\",\"__label\":\"江苏 / 苏州 / 拙政园\",\"__value\":\"jiangsu,suzhou,zhuozhengyuan\"},{\"value\":\"shizilin\",\"label\":\"狮子林\",\"__label\":\"江苏 / 苏州 / 狮子林\",\"__value\":\"jiangsu,suzhou,shizilin\"}]}]}],\"desc\":\"\",\"name\":\"data\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      data:context.model.data.value,\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Cascader\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'204\'\\r\\nexports.name = \'Cascader\';\\r\\nexports.nickname = \'Cascader\';\\r\\nexports.type = \'Cascader\';\\r\\nexports.template=`\\r\\n    <Cascader{model}>\\r\\n    </Cascader>\\r\\n`\\r\\nexports.desc = \'Cascader\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    data:{\\r\\n        type:\'array\',\\r\\n        value: [{\\r\\n                    value: \'beijing\',\\r\\n                    label: \'北京\',\\r\\n                    children: [\\r\\n                        {\\r\\n                            value: \'gugong\',\\r\\n                            label: \'故宫\'\\r\\n                        },\\r\\n                        {\\r\\n                            value: \'tiantan\',\\r\\n                            label: \'天坛\'\\r\\n                        },\\r\\n                        {\\r\\n                            value: \'wangfujing\',\\r\\n                            label: \'王府井\'\\r\\n                        }\\r\\n                    ]\\r\\n                }, {\\r\\n                    value: \'jiangsu\',\\r\\n                    label: \'江苏\',\\r\\n                    children: [\\r\\n                        {\\r\\n                            value: \'nanjing\',\\r\\n                            label: \'南京\',\\r\\n                            children: [\\r\\n                                {\\r\\n                                    value: \'fuzimiao\',\\r\\n                                    label: \'夫子庙\',\\r\\n                                }\\r\\n                            ]\\r\\n                        },\\r\\n                        {\\r\\n                            value: \'suzhou\',\\r\\n                            label: \'苏州\',\\r\\n                            children: [\\r\\n                                {\\r\\n                                    value: \'zhuozhengyuan\',\\r\\n                                    label: \'拙政园\',\\r\\n                                },\\r\\n                                {\\r\\n                                    value: \'shizilin\',\\r\\n                                    label: \'狮子林\',\\r\\n                                }\\r\\n                            ]\\r\\n                        }\\r\\n                    ],\\r\\n          }],\\r\\n        desc:\'\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      data:context.model.data.value,\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Cascader\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":25,\"pid\":24,\"initScript\":false},{\"children\":[],\"cid\":\"201\",\"name\":\"Switch\",\"nickname\":\"Switch\",\"type\":\"i-switch\",\"template\":\"`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\n\",\"desc\":\"开关\",\"allow\":null,\"model\":{\"size\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"size\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'201\'\\r\\nexports.name = \'Switch\';\\r\\nexports.nickname = \'Switch\';\\r\\nexports.type = \'i-switch\';\\r\\nexports.template=`\\r\\n    <Switch{model}>\\r\\n    </Switch>\\r\\n`\\r\\nexports.desc = \'开关\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n    size:{\\r\\n        type:\'text\',\\r\\n        value: \'\',\\r\\n        desc: \'size\'\\r\\n    },\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n      size: context.model.size.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Switch\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":26,\"pid\":24,\"initScript\":false},{\"children\":[],\"cid\":\"203\",\"name\":\"Slider\",\"nickname\":\"Slider\",\"type\":\"Slider\",\"template\":\"`\\r\\n    <Slider{model}>\\r\\n    </Slider>\\r\\n`\\r\\n\",\"desc\":\"Slider\",\"allow\":null,\"model\":{\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Slider\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'203\'\\r\\nexports.name = \'Slider\';\\r\\nexports.nickname = \'Slider\';\\r\\nexports.type = \'Slider\';\\r\\nexports.template=`\\r\\n    <Slider{model}>\\r\\n    </Slider>\\r\\n`\\r\\nexports.desc = \'Slider\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n\\r\\n    style:{\\r\\n        type:\'text\',\\r\\n        value:\'\',\\r\\n        desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Slider\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":27,\"pid\":24,\"initScript\":false},{\"children\":[],\"cid\":\"202\",\"name\":\"AutoComplete\",\"nickname\":\"AutoComplete\",\"type\":\"AutoComplete\",\"template\":\"`<AutoComplete{model}>\\r\\n        <Option value=\\\"beijing\\\" label=\\\"北京市\\\">\\r\\n            <span>北京</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">Beiing</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shanghai\\\" label=\\\"上海市\\\">\\r\\n            <span>上海</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShangHai</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shenzhen\\\" label=\\\"深圳市\\\">\\r\\n            <span>深圳</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShenZhen</span>\\r\\n        </Option>\\r\\n</AutoComplete>`\\r\\n\",\"desc\":\"自动补全\",\"allow\":null,\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"width\":\"200px\"},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'AutoComplete\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'202\'\\r\\nexports.name = \'AutoComplete\';\\r\\nexports.nickname = \'AutoComplete\';\\r\\nexports.type = \'AutoComplete\';\\r\\nexports.template =\\r\\n  `<AutoComplete{model}>\\r\\n        <Option value=\\\"beijing\\\" label=\\\"北京市\\\">\\r\\n            <span>北京</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">Beiing</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shanghai\\\" label=\\\"上海市\\\">\\r\\n            <span>上海</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShangHai</span>\\r\\n        </Option>\\r\\n        <Option value=\\\"shenzhen\\\" label=\\\"深圳市\\\">\\r\\n            <span>深圳</span>\\r\\n            <span style=\\\"float:right;color:#ccc\\\">ShenZhen</span>\\r\\n        </Option>\\r\\n</AutoComplete>`\\r\\nexports.desc = \'自动补全\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  \\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {\\r\\n      width: \'200px\'\\r\\n    },\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n     \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'AutoComplete\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    }\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":28,\"pid\":24,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安��面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":24,\"pid\":8,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"desc\":\"value\",\"value\":{}}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":8,\"initScript\":false,\"maxUid\":29}', null, '33', '2017-11-04 11:06:14', '33', '2017-11-04 13:17:31', '0');
INSERT INTO `page` VALUES ('289', 'example', '{\"children\":[{\"children\":[{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n\\r\\n\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n\\r\\n\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":292,\"pid\":257,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":257,\"pid\":252,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":252,\"pid\":250,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"212\",\"name\":\"FormSelect\",\"nickname\":\"FormSelect\",\"type\":\"FormSelect\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Select>\\r\\n        </Select>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"下拉框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"北京市\",\"value\":\"1\"},{\"label\":\"上海市\",\"value\":\"2\"},{\"label\":\"深圳市\",\"value\":\"3\"}],\"desc\":\"\",\"name\":\"items\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Select\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'212\'\\r\\nexports.name = \'FormSelect\';\\r\\nexports.nickname = \'FormSelect\';\\r\\nexports.type = \'FormSelect\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Select>\\r\\n        </Select>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'下拉框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [{\\r\\n            label: \'北京市\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'上海市\',\\r\\n            value: \'2\'\\r\\n        }, {\\r\\n            label: \'深圳市\',\\r\\n            value: \'3\'\\r\\n        }],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Select\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":293,\"pid\":259,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":259,\"pid\":258,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":258,\"pid\":250,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"213\",\"name\":\"FormNumber\",\"nickname\":\"FormNumber\",\"type\":\"FormNumber\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <InputNumber>\\r\\n        </InputNumber>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"数字输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":0,\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"max\":{\"type\":\"text\",\"value\":10,\"desc\":\"\"},\"min\":{\"type\":\"text\",\"value\":0,\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'InputNumber\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'213\'\\r\\nexports.name = \'FormNumber\';\\r\\nexports.nickname = \'FormNumber\';\\r\\nexports.type = \'FormNumber\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <InputNumber>\\r\\n        </InputNumber>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'数字输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: 0,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    max: {\\r\\n        type: \'text\',\\r\\n        value: 10,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    min: {\\r\\n        type: \'text\',\\r\\n        value: 0,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'InputNumber\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":294,\"pid\":261,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":261,\"pid\":260,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":260,\"pid\":250,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"214\",\"name\":\"FormDate\",\"nickname\":\"FormDate\",\"type\":\"FormDate\",\"template\":\"`\\r\\n   <FormItem>\\r\\n        <DatePicker>\\r\\n        </DatePicker>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"date\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":0,\"desc\":\"\"},\"type\":{\"type\":\"text\",\"value\":\"datetime\",\"desc\":\"\"},\"format\":{\"type\":\"text\",\"value\":\"yyyy-MM-dd HH:mm:ss\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'DatePicker\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'214\'\\r\\nexports.name = \'FormDate\';\\r\\nexports.nickname = \'FormDate\';\\r\\nexports.type = \'FormDate\';\\r\\nexports.template =\\r\\n    `\\r\\n   <FormItem>\\r\\n        <DatePicker>\\r\\n        </DatePicker>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'date\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: 0,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    type: {\\r\\n        type: \'text\',\\r\\n        value: \'datetime\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    format: {\\r\\n        type: \'text\',\\r\\n        value: \'yyyy-MM-dd HH:mm:ss\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'DatePicker\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":295,\"pid\":263,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":263,\"pid\":262,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\",\"name\":\"type\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":262,\"pid\":250,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"215\",\"name\":\"FormUpload\",\"nickname\":\"FormUpload\",\"type\":\"FormUpload\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Upload>\\r\\n        </Upload>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"upload\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"uploadUrl\":{\"type\":\"text\",\"value\":\"/esview/file/upload_file\",\"desc\":\"\"},\"value\":{\"type\":\"array\",\"value\":[],\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Upload\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'215\'\\r\\nexports.name = \'FormUpload\';\\r\\nexports.nickname = \'FormUpload\';\\r\\nexports.type = \'FormUpload\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Upload>\\r\\n        </Upload>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'upload\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    uploadUrl: {\\r\\n        type: \'text\',\\r\\n        value: \'/esview/file/upload_file\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'array\',\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Upload\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":296,\"pid\":269,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":269,\"pid\":268,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":268,\"pid\":250,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"217\",\"name\":\"FormRadio\",\"nickname\":\"FormRadio\",\"type\":\"FormRadio\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Radio>\\r\\n        </Radio>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"radio\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"male\",\"value\":\"1\"},{\"label\":\"female\",\"value\":\"2\"}],\"desc\":\"\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Radio\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'217\'\\r\\nexports.name = \'FormRadio\';\\r\\nexports.nickname = \'FormRadio\';\\r\\nexports.type = \'FormRadio\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Radio>\\r\\n        </Radio>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'radio\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [{\\r\\n            label: \'male\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'female\',\\r\\n            value: \'2\'\\r\\n        }],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Radio\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":297,\"pid\":272,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":272,\"pid\":270,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":270,\"pid\":250,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"218\",\"name\":\"FormCheckbox\",\"nickname\":\"FormCheckbox\",\"type\":\"FormCheckbox\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Checkbox>\\r\\n        </Checkbox>\\r\\n    </FormItem>\\r\\n\\r\\n`\\r\\n\",\"desc\":\"FormCheckbox\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"github\",\"value\":\"1\"},{\"label\":\"facebook\",\"value\":\"2\"},{\"label\":\"microsoft\",\"value\":\"3\"}],\"desc\":\"\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":[1],\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Checkbox\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'218\'\\r\\nexports.name = \'FormCheckbox\';\\r\\nexports.nickname = \'FormCheckbox\';\\r\\nexports.type = \'FormCheckbox\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Checkbox>\\r\\n        </Checkbox>\\r\\n    </FormItem>\\r\\n\\r\\n`\\r\\nexports.desc = \'FormCheckbox\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [\\r\\n            {\\r\\n                label: \'github\',\\r\\n                value: \'1\'\\r\\n            }, {\\r\\n                label: \'facebook\',\\r\\n                value: \'2\'\\r\\n            }, {\\r\\n                label: \'microsoft\',\\r\\n                value: \'3\'\\r\\n            }\\r\\n        ],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: [1],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Checkbox\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":298,\"pid\":276,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":276,\"pid\":275,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":275,\"pid\":250,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"3\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏���8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":278,\"pid\":277,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"6\",\"name\":\"Button\",\"nickname\":\"Button\",\"type\":\"Button\",\"template\":\"`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\n\",\"desc\":\"按钮\",\"allow\":null,\"model\":{\"name\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"submit\",\"desc\":\"\",\"name\":\"name\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"},\"type\":{\"type\":\"text\",\"value\":\"primary\",\"desc\":\"type of button\",\"name\":\"type\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'6\'\\r\\nexports.name = \'Button\';\\r\\nexports.nickname = \'Button\';\\r\\nexports.type = \'Button\';\\r\\nexports.template=`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\nexports.desc = \'按钮\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  name:{\\r\\n       type: \'text\',\\r\\n       compileType:\'innerHTML\',\\r\\n       value: \'提交\',\\r\\n       desc: \'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  type: {\\r\\n    type: \'text\',\\r\\n    value: \'primary\',\\r\\n    desc: \'type of button\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":282,\"pid\":281,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":281,\"pid\":277,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\",\"name\":\"type\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":277,\"pid\":250,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}],\"save\":false,\"desc\":\"\"},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}]},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":289,\"pid\":288,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"24\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":288,\"pid\":287,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":{\"marginTop\":\"20px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n this.model.style.value = {\\r\\n        \\r\\n        marginTop: \'20px\'\\r\\n    }\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":287,\"pid\":250,\"initScript\":false,\"scriptString\":\"function(eventCenter) {\\r\\n this.model.style.value = {\\r\\n        \\r\\n        marginTop: \'20px\'\\r\\n    }\\r\\n}\"}],\"cid\":\"3\",\"name\":\"Form\",\"nickname\":\"Form\",\"type\":\"Form\",\"template\":\"`<Form{model}>{slot}</Form>`;\\r\\n\",\"desc\":\"表单\",\"allow\":[\"1\",\" 4\"],\"model\":{\"labelWidth\":{\"type\":\"text\",\"value\":100,\"desc\":\"表单label宽度\"},\"inline\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"行内\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"800px\",\"margin\":\"0 auto\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n    this.model.style.value={\\r\\n        width:\'800px\',\\r\\n        margin:\'0 auto\'\\r\\n    }\\r\\n    eventCenter.bind(\'submit-form\', (param) => {\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\\r\\n        let vm = eventCenter.createElement.vm\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n\\r\\n        refs.forEach(ref => {\\r\\n            ref.$children[0].validate(function(valid) {\\r\\n                if (!valid) pass = false\\r\\n            })\\r\\n        })\\r\\n\\r\\n        if (!pass) {\\r\\n            return void vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n\\r\\n        vm.$http.post(\'./test/submit_form\', params).then(res => {\\r\\n            if (res.data.code === 10000) {\\r\\n                vm.$Message.success(\'success\')\\r\\n            }\\r\\n        })\\r\\n    })\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            inline: context.model.inline.value,\\r\\n            \'label-width\': context.model.labelWidth.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Form\'\\r\\n            }\\r\\n        ],\\r\\n        navtiveOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        }\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'3\'\\r\\nexports.name = \'Form\';\\r\\nexports.nickname = \'Form\';\\r\\nexports.type = \'Form\';\\r\\nexports.template = `<Form{model}>{slot}</Form>`;\\r\\nexports.desc = \'表单\';\\r\\nexports.allow = [1, 4];\\r\\nexports.model = {\\r\\n\\r\\n    labelWidth: {\\r\\n        type: \'text\',\\r\\n        value: 100,\\r\\n        desc: \'表单label宽度\'\\r\\n    },\\r\\n    inline: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'行内\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {},\\r\\n        desc: \'value\'\\r\\n    },\\r\\n\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\', (param) => {\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\\r\\n        let vm = eventCenter.createElement.vm\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n\\r\\n        refs.forEach(ref => {\\r\\n            ref.$children[0].validate(function(valid) {\\r\\n                if (!valid) pass = false\\r\\n            })\\r\\n        })\\r\\n\\r\\n        if (!pass) {\\r\\n            return void vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n\\r\\n        vm.$http.post(\'./test/submit_form\', params).then(res => {\\r\\n            if (res.data.code === 10000) {\\r\\n                vm.$Message.success(\'success\')\\r\\n            }\\r\\n        })\\r\\n    })\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            inline: context.model.inline.value,\\r\\n            \'label-width\': context.model.labelWidth.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Form\'\\r\\n            }\\r\\n        ],\\r\\n        navtiveOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        }\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":3,\"uid\":250,\"pid\":147,\"initScript\":false,\"scriptString\":\"function (eventCenter) {\\r\\n    this.model.style.value={\\r\\n        width:\'800px\',\\r\\n        margin:\'0 auto\'\\r\\n    }\\r\\n    eventCenter.bind(\'submit-form\', (param) => {\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\\r\\n        let vm = eventCenter.createElement.vm\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n\\r\\n        refs.forEach(ref => {\\r\\n            ref.$children[0].validate(function(valid) {\\r\\n                if (!valid) pass = false\\r\\n            })\\r\\n        })\\r\\n\\r\\n        if (!pass) {\\r\\n            return void vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n\\r\\n        vm.$http.post(\'./test/submit_form\', params).then(res => {\\r\\n            if (res.data.code === 10000) {\\r\\n                vm.$Message.success(\'success\')\\r\\n            }\\r\\n        })\\r\\n    })\\r\\n}\"}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽���置面���\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":147,\"initScript\":false,\"maxUid\":300}', null, '1', '2017-11-05 11:18:27', '1', '2017-11-10 12:36:48', '1');
INSERT INTO `page` VALUES ('290', 'example2', '{\"children\":[{\"children\":[{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"name\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":295,\"pid\":293,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"8\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":293,\"pid\":292,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"214\",\"name\":\"FormDate\",\"nickname\":\"FormDate\",\"type\":\"FormDate\",\"template\":\"`\\r\\n   <FormItem>\\r\\n        <DatePicker>\\r\\n        </DatePicker>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"date\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":0,\"desc\":\"\",\"name\":\"value\"},\"type\":{\"type\":\"text\",\"value\":\"datetime\",\"desc\":\"\",\"name\":\"type\"},\"format\":{\"type\":\"text\",\"value\":\"yyyy-MM-dd HH:mm:ss\",\"desc\":\"\",\"name\":\"format\"},\"label\":{\"type\":\"text\",\"value\":\"date\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'DatePicker\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'214\'\\r\\nexports.name = \'FormDate\';\\r\\nexports.nickname = \'FormDate\';\\r\\nexports.type = \'FormDate\';\\r\\nexports.template =\\r\\n    `\\r\\n   <FormItem>\\r\\n        <DatePicker>\\r\\n        </DatePicker>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'date\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: 0,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    type: {\\r\\n        type: \'text\',\\r\\n        value: \'datetime\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    format: {\\r\\n        type: \'text\',\\r\\n        value: \'yyyy-MM-dd HH:mm:ss\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'DatePicker\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":296,\"pid\":294,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"8\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":294,\"pid\":292,\"initScript\":false},{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"1\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":302,\"pid\":292,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"6\",\"name\":\"Button\",\"nickname\":\"Button\",\"type\":\"Button\",\"template\":\"`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\n\",\"desc\":\"按钮\",\"allow\":null,\"model\":{\"name\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"提交\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"},\"type\":{\"type\":\"text\",\"value\":\"primary\",\"desc\":\"type of button\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'6\'\\r\\nexports.name = \'Button\';\\r\\nexports.nickname = \'Button\';\\r\\nexports.type = \'Button\';\\r\\nexports.template=`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\nexports.desc = \'按钮\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  name:{\\r\\n       type: \'text\',\\r\\n       compileType:\'innerHTML\',\\r\\n       value: \'提交\',\\r\\n       desc: \'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  type: {\\r\\n    type: \'text\',\\r\\n    value: \'primary\',\\r\\n    desc: \'type of button\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":316,\"pid\":315,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"4\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":315,\"pid\":292,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\",\"name\":\"type\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":292,\"pid\":291,\"initScript\":false}],\"cid\":\"3\",\"name\":\"Form\",\"nickname\":\"Form\",\"type\":\"Form\",\"template\":\"`<Form{model}>{slot}</Form>`;\\r\\n\",\"desc\":\"表单\",\"allow\":[\"1\",\" 4\"],\"model\":{\"labelWidth\":{\"type\":\"text\",\"value\":100,\"desc\":\"表单label宽度\"},\"inline\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"行内\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\', (param) => {\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\\r\\n        let vm = eventCenter.createElement.vm\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n\\r\\n        refs.forEach(ref => {\\r\\n            ref.$children[0].validate(function(valid) {\\r\\n                if (!valid) pass = false\\r\\n            })\\r\\n        })\\r\\n\\r\\n        if (!pass) {\\r\\n            return void vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n\\r\\n        vm.$http.post(\'./test/submit_form\', params).then(res => {\\r\\n            if (res.data.code === 10000) {\\r\\n                vm.$Message.success(\'success\')\\r\\n            }\\r\\n        })\\r\\n    })\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            inline: context.model.inline.value,\\r\\n            \'label-width\': context.model.labelWidth.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Form\'\\r\\n            }\\r\\n        ],\\r\\n        navtiveOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        }\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'3\'\\r\\nexports.name = \'Form\';\\r\\nexports.nickname = \'Form\';\\r\\nexports.type = \'Form\';\\r\\nexports.template = `<Form{model}>{slot}</Form>`;\\r\\nexports.desc = \'表单\';\\r\\nexports.allow = [1, 4];\\r\\nexports.model = {\\r\\n\\r\\n    labelWidth: {\\r\\n        type: \'text\',\\r\\n        value: 100,\\r\\n        desc: \'表单label宽度\'\\r\\n    },\\r\\n    inline: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'行内\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {},\\r\\n        desc: \'value\'\\r\\n    },\\r\\n\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\', (param) => {\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\\r\\n        let vm = eventCenter.createElement.vm\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n\\r\\n        refs.forEach(ref => {\\r\\n            ref.$children[0].validate(function(valid) {\\r\\n                if (!valid) pass = false\\r\\n            })\\r\\n        })\\r\\n\\r\\n        if (!pass) {\\r\\n            return void vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n\\r\\n        vm.$http.post(\'./test/submit_form\', params).then(res => {\\r\\n            if (res.data.code === 10000) {\\r\\n                vm.$Message.success(\'success\')\\r\\n            }\\r\\n        })\\r\\n    })\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            inline: context.model.inline.value,\\r\\n            \'label-width\': context.model.labelWidth.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Form\'\\r\\n            }\\r\\n        ],\\r\\n        navtiveOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        }\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":3,\"uid\":291,\"pid\":284,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表���\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}],\"save\":false,\"desc\":\"\"},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}]},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":311,\"pid\":307,\"initScript\":false}],\"cid\":\"13\",\"name\":\"TabPane\",\"nickname\":\"TabPane\",\"type\":\"TabPane\",\"template\":\"`<TabPane{model}>{slot}</TabPane>`\\r\\n\",\"desc\":\"TabPane\",\"allow\":[],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"tab1\",\"desc\":\"label\",\"name\":\"label\"},\"name\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"name\",\"name\":\"name\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'13\'\\r\\nexports.name = \'TabPane\';\\r\\nexports.nickname = \'TabPane\';\\r\\nexports.type = \'TabPane\';\\r\\nexports.template=\\r\\n`<TabPane{model}>{slot}</TabPane>`\\r\\nexports.desc = \'TabPane\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'tab\',\\r\\n    desc: \'label\'\\r\\n  },\\r\\n  name: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'name\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":307,\"pid\":306,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}],\"save\":false,\"desc\":\"\"},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}]},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":312,\"pid\":309,\"initScript\":false}],\"cid\":\"13\",\"name\":\"TabPane\",\"nickname\":\"TabPane\",\"type\":\"TabPane\",\"template\":\"`<TabPane{model}>{slot}</TabPane>`\\r\\n\",\"desc\":\"TabPane\",\"allow\":[],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"tab2\",\"desc\":\"label\",\"name\":\"label\"},\"name\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"name\",\"name\":\"name\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'13\'\\r\\nexports.name = \'TabPane\';\\r\\nexports.nickname = \'TabPane\';\\r\\nexports.type = \'TabPane\';\\r\\nexports.template=\\r\\n`<TabPane{model}>{slot}</TabPane>`\\r\\nexports.desc = \'TabPane\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'tab\',\\r\\n    desc: \'label\'\\r\\n  },\\r\\n  name: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'name\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":309,\"pid\":306,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}],\"save\":false,\"desc\":\"\"},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}]},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":313,\"pid\":310,\"initScript\":false}],\"cid\":\"13\",\"name\":\"TabPane\",\"nickname\":\"TabPane\",\"type\":\"TabPane\",\"template\":\"`<TabPane{model}>{slot}</TabPane>`\\r\\n\",\"desc\":\"TabPane\",\"allow\":[],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"tab3\",\"desc\":\"label\",\"name\":\"label\"},\"name\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"name\",\"name\":\"name\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'13\'\\r\\nexports.name = \'TabPane\';\\r\\nexports.nickname = \'TabPane\';\\r\\nexports.type = \'TabPane\';\\r\\nexports.template=\\r\\n`<TabPane{model}>{slot}</TabPane>`\\r\\nexports.desc = \'TabPane\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'tab\',\\r\\n    desc: \'label\'\\r\\n  },\\r\\n  name: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'name\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":310,\"pid\":306,\"initScript\":false}],\"cid\":\"12\",\"name\":\"Tabs\",\"nickname\":\"Tabs\",\"type\":\"Tabs\",\"template\":\"`<Tabs{model}>{slot}</Tabs>`\\r\\n\",\"desc\":\"Tabs\",\"allow\":[\"13\"],\"model\":{\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'12\'\\r\\nexports.name = \'Tabs\';\\r\\nexports.nickname = \'Tabs\';\\r\\nexports.type = \'Tabs\';\\r\\nexports.template=\\r\\n`<Tabs{model}>{slot}</Tabs>`\\r\\nexports.desc = \'Tabs\';\\r\\nexports.allow = [13];\\r\\nexports.model = {\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":306,\"pid\":305,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"24\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代���两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":305,\"pid\":304,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":304,\"pid\":284,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":284,\"initScript\":false,\"maxUid\":318}', null, '1', '2017-11-05 12:54:28', '1', '2017-11-05 13:27:17', '0');
INSERT INTO `page` VALUES ('291', 'test', '{\"children\":[{\"children\":[],\"cid\":\"218\",\"name\":\"FormCheckbox\",\"nickname\":\"FormCheckbox\",\"type\":\"FormCheckbox\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Checkbox>\\r\\n        </Checkbox>\\r\\n    </FormItem>\\r\\n\\r\\n`\\r\\n\",\"desc\":\"FormCheckbox\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"github\",\"value\":\"1\"},{\"label\":\"facebook\",\"value\":\"2\"},{\"label\":\"microsoft\",\"value\":\"3\"}],\"desc\":\"\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":[],\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Checkbox\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'218\'\\r\\nexports.name = \'FormCheckbox\';\\r\\nexports.nickname = \'FormCheckbox\';\\r\\nexports.type = \'FormCheckbox\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Checkbox>\\r\\n        </Checkbox>\\r\\n    </FormItem>\\r\\n\\r\\n`\\r\\nexports.desc = \'FormCheckbox\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [{\\r\\n            label: \'github\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'facebook\',\\r\\n            value: \'2\'\\r\\n        }, {\\r\\n            label: \'microsoft\',\\r\\n            value: \'3\'\\r\\n        }],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Checkbox\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":335,\"pid\":334,\"initScript\":true},{\"children\":[],\"cid\":\"215\",\"name\":\"FormUpload\",\"nickname\":\"FormUpload\",\"type\":\"FormUpload\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Upload>\\r\\n        </Upload>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"upload\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"uploadUrl\":{\"type\":\"text\",\"value\":\"/esview/file/upload_file\",\"desc\":\"\"},\"value\":{\"type\":\"array\",\"value\":[],\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Upload\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'215\'\\r\\nexports.name = \'FormUpload\';\\r\\nexports.nickname = \'FormUpload\';\\r\\nexports.type = \'FormUpload\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Upload>\\r\\n        </Upload>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'upload\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    uploadUrl: {\\r\\n        type: \'text\',\\r\\n        value: \'/esview/file/upload_file\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'array\',\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Upload\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":336,\"pid\":334,\"initScript\":true},{\"children\":[],\"cid\":\"214\",\"name\":\"FormDate\",\"nickname\":\"FormDate\",\"type\":\"FormDate\",\"template\":\"`\\r\\n   <FormItem>\\r\\n        <DatePicker>\\r\\n        </DatePicker>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"date\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":0,\"desc\":\"\"},\"type\":{\"type\":\"text\",\"value\":\"datetime\",\"desc\":\"\"},\"format\":{\"type\":\"text\",\"value\":\"yyyy-MM-dd HH:mm:ss\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'DatePicker\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'214\'\\r\\nexports.name = \'FormDate\';\\r\\nexports.nickname = \'FormDate\';\\r\\nexports.type = \'FormDate\';\\r\\nexports.template =\\r\\n    `\\r\\n   <FormItem>\\r\\n        <DatePicker>\\r\\n        </DatePicker>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'date\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: 0,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    type: {\\r\\n        type: \'text\',\\r\\n        value: \'datetime\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    format: {\\r\\n        type: \'text\',\\r\\n        value: \'yyyy-MM-dd HH:mm:ss\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'DatePicker\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":337,\"pid\":334,\"initScript\":true}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":334,\"initScript\":true,\"maxUid\":338}', null, '33', '2017-11-06 16:49:37', '33', '2017-11-06 16:49:37', '0');
INSERT INTO `page` VALUES ('292', 'test1', '{\"children\":[{\"children\":[],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"\"},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":320,\"pid\":319,\"initScript\":false},{\"children\":[],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"\"},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":321,\"pid\":319,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"查询\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":327,\"pid\":326,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"8\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":326,\"pid\":325,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"6\",\"name\":\"Button\",\"nickname\":\"Button\",\"type\":\"Button\",\"template\":\"`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\n\",\"desc\":\"按钮\",\"allow\":null,\"model\":{\"name\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"提交\",\"desc\":\"\",\"name\":\"name\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"},\"type\":{\"type\":\"text\",\"value\":\"primary\",\"desc\":\"type of button\",\"name\":\"type\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'6\'\\r\\nexports.name = \'Button\';\\r\\nexports.nickname = \'Button\';\\r\\nexports.type = \'Button\';\\r\\nexports.template=`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\nexports.desc = \'按钮\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  name:{\\r\\n       type: \'text\',\\r\\n       compileType:\'innerHTML\',\\r\\n       value: \'提交\',\\r\\n       desc: \'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  type: {\\r\\n    type: \'text\',\\r\\n    value: \'primary\',\\r\\n    desc: \'type of button\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":332,\"pid\":331,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":331,\"pid\":325,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":325,\"pid\":319,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}],\"save\":false,\"desc\":\"\",\"name\":\"data\"},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}],\"name\":\"columns\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":335,\"pid\":334,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"24\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":334,\"pid\":333,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\",\"name\":\"type\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":333,\"pid\":319,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":338,\"pid\":336,\"initScript\":false},{\"children\":[],\"cid\":\"6\",\"name\":\"Button\",\"nickname\":\"Button\",\"type\":\"Button\",\"template\":\"`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\n\",\"desc\":\"按钮\",\"allow\":null,\"model\":{\"name\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"提交\",\"desc\":\"\",\"name\":\"name\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"},\"type\":{\"type\":\"text\",\"value\":\"primary\",\"desc\":\"type of button\",\"name\":\"type\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'6\'\\r\\nexports.name = \'Button\';\\r\\nexports.nickname = \'Button\';\\r\\nexports.type = \'Button\';\\r\\nexports.template=`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\nexports.desc = \'按钮\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  name:{\\r\\n       type: \'text\',\\r\\n       compileType:\'innerHTML\',\\r\\n       value: \'提交\',\\r\\n       desc: \'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  type: {\\r\\n    type: \'text\',\\r\\n    value: \'primary\',\\r\\n    desc: \'type of button\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":339,\"pid\":336,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":336,\"pid\":319,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":319,\"initScript\":false,\"maxUid\":340}', null, '33', '2017-11-07 09:14:25', '33', '2017-11-07 09:32:34', '0');
INSERT INTO `page` VALUES ('293', 'ddd', '{\"children\":[{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":2,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"212\",\"name\":\"FormSelect\",\"nickname\":\"FormSelect\",\"type\":\"FormSelect\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Select>\\r\\n        </Select>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"下拉框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"北京市\",\"value\":\"1\"},{\"label\":\"上海市\",\"value\":\"2\"},{\"label\":\"深圳市\",\"value\":\"3\"}],\"desc\":\"\",\"name\":\"items\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"3\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Select\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'212\'\\r\\nexports.name = \'FormSelect\';\\r\\nexports.nickname = \'FormSelect\';\\r\\nexports.type = \'FormSelect\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Select>\\r\\n        </Select>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'下拉框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [{\\r\\n            label: \'北京市\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'���海市\',\\r\\n            value: \'2\'\\r\\n        }, {\\r\\n            label: \'深圳市\',\\r\\n            value: \'3\'\\r\\n        }],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Select\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":3,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"\",\"name\":\"style\"},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"\",\"desc\":\"\",\"name\":\"innerHTML\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":5,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}],\"save\":false,\"desc\":\"\",\"name\":\"data\"},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}],\"name\":\"columns\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":6,\"pid\":1,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":false,\"maxUid\":7}', null, '33', '2017-11-07 16:45:28', '33', '2017-11-07 16:52:25', '0');
INSERT INTO `page` VALUES ('294', 'FFFFF', '{\"children\":[{\"children\":[],\"cid\":\"212\",\"name\":\"FormSelect\",\"nickname\":\"FormSelect\",\"type\":\"FormSelect\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Select>\\r\\n        </Select>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"下拉框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"北京市\",\"value\":\"1\"},{\"label\":\"上海市\",\"value\":\"2\"},{\"label\":\"深圳市\",\"value\":\"3\"}],\"desc\":\"\",\"name\":\"items\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"2\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Select\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'212\'\\r\\nexports.name = \'FormSelect\';\\r\\nexports.nickname = \'FormSelect\';\\r\\nexports.type = \'FormSelect\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Select>\\r\\n        </Select>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'下拉框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [{\\r\\n            label: \'北京市\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'上海市\',\\r\\n            value: \'2\'\\r\\n        }, {\\r\\n            label: \'深圳市\',\\r\\n            value: \'3\'\\r\\n        }],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Select\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":3,\"pid\":1,\"initScript\":false,\"scriptString\":\"function (eventCenter) {\\r\\n\\r\\n}\"},{\"children\":[],\"cid\":\"218\",\"name\":\"FormCheckbox\",\"nickname\":\"FormCheckbox\",\"type\":\"FormCheckbox\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Checkbox>\\r\\n        </Checkbox>\\r\\n    </FormItem>\\r\\n\\r\\n`\\r\\n\",\"desc\":\"FormCheckbox\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"github\",\"value\":\"1\"},{\"label\":\"facebook\",\"value\":\"2\"},{\"label\":\"microsoft\",\"value\":\"3\"}],\"desc\":\"\",\"name\":\"items\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":[],\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Checkbox\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'218\'\\r\\nexports.name = \'FormCheckbox\';\\r\\nexports.nickname = \'FormCheckbox\';\\r\\nexports.type = \'FormCheckbox\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Checkbox>\\r\\n        </Checkbox>\\r\\n    </FormItem>\\r\\n\\r\\n`\\r\\nexports.desc = \'FormCheckbox\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [{\\r\\n            label: \'github\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'facebook\',\\r\\n            value: \'2\'\\r\\n        }, {\\r\\n            label: \'microsoft\',\\r\\n            value: \'3\'\\r\\n        }],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Checkbox\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":13,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"217\",\"name\":\"FormRadio\",\"nickname\":\"FormRadio\",\"type\":\"FormRadio\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Radio>\\r\\n        </Radio>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"radio\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"male\",\"value\":\"1\"},{\"label\":\"female\",\"value\":\"2\"}],\"desc\":\"\",\"name\":\"items\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Radio\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'217\'\\r\\nexports.name = \'FormRadio\';\\r\\nexports.nickname = \'FormRadio\';\\r\\nexports.type = \'FormRadio\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Radio>\\r\\n        </Radio>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'radio\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [{\\r\\n            label: \'male\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'female\',\\r\\n            value: \'2\'\\r\\n        }],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Radio\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":14,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"214\",\"name\":\"FormDate\",\"nickname\":\"FormDate\",\"type\":\"FormDate\",\"template\":\"`\\r\\n   <FormItem>\\r\\n        <DatePicker>\\r\\n        </DatePicker>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"date\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":0,\"desc\":\"\",\"name\":\"value\"},\"type\":{\"type\":\"text\",\"value\":\"datetime\",\"desc\":\"\",\"name\":\"type\"},\"format\":{\"type\":\"text\",\"value\":\"yyyy-MM-dd HH:mm:ss\",\"desc\":\"\",\"name\":\"format\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'DatePicker\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'214\'\\r\\nexports.name = \'FormDate\';\\r\\nexports.nickname = \'FormDate\';\\r\\nexports.type = \'FormDate\';\\r\\nexports.template =\\r\\n    `\\r\\n   <FormItem>\\r\\n        <DatePicker>\\r\\n        </DatePicker>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'date\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: 0,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    type: {\\r\\n        type: \'text\',\\r\\n        value: \'datetime\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    format: {\\r\\n        type: \'text\',\\r\\n        value: \'yyyy-MM-dd HH:mm:ss\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'DatePicker\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":15,\"pid\":1,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"6\",\"name\":\"Button\",\"nickname\":\"Button\",\"type\":\"Button\",\"template\":\"`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\n\",\"desc\":\"按钮\",\"allow\":null,\"model\":{\"name\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"提交\",\"desc\":\"\",\"name\":\"name\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"},\"type\":{\"type\":\"text\",\"value\":\"primary\",\"desc\":\"type of button\",\"name\":\"type\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'6\'\\r\\nexports.name = \'Button\';\\r\\nexports.nickname = \'Button\';\\r\\nexports.type = \'Button\';\\r\\nexports.template=`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\nexports.desc = \'按钮\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  name:{\\r\\n       type: \'text\',\\r\\n       compileType:\'innerHTML\',\\r\\n       value: \'提交\',\\r\\n       desc: \'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  type: {\\r\\n    type: \'text\',\\r\\n    value: \'primary\',\\r\\n    desc: \'type of button\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":18,\"pid\":16,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":16,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":17,\"pid\":1,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":false,\"maxUid\":22}', null, '33', '2017-11-07 17:25:20', '33', '2017-11-09 10:37:06', '0');
INSERT INTO `page` VALUES ('295', 'test', '{\"children\":[{\"children\":[],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"\"},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":5,\"pid\":2,\"initScript\":false},{\"children\":[],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"\"},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":6,\"pid\":2,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输���框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":9,\"pid\":8,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖��安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"title\",\"uid\":12,\"showSlot\":false,\"initScript\":false},{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"extra\",\"uid\":13,\"showSlot\":false,\"initScript\":false},{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"default\",\"uid\":14,\"showSlot\":false,\"initScript\":false}],\"cid\":\"15\",\"name\":\"Card\",\"nickname\":\"Card\",\"type\":\"WrapCard\",\"template\":\"`<Card{model}>{slot}</Card>`\\r\\n\",\"desc\":\"Card\",\"allow\":[],\"model\":{\"showHead\":{\"type\":\"boolean\",\"exclude\":true,\"value\":false,\"desc\":\"\"},\"showExtra\":{\"type\":\"boolean\",\"exclude\":true,\"value\":false,\"desc\":\"\"},\"showBody\":{\"type\":\"boolean\",\"exclude\":true,\"dontEdit\":true,\"value\":false,\"desc\":\"\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\"},\"disHover\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"禁用鼠标悬停显示阴影\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const dropTitle = context.children[0]\\r\\n  const dropExtra = context.children[1]\\r\\n  const dropBody = context.children[2]\\r\\n  dropTitle.showSlot = context.model.showHead.value\\r\\n  dropExtra.showSlot = context.model.showExtra.value\\r\\n  dropBody.showSlot = context.model.showBody.value\\r\\n  \\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n    \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n        showHead:context.model.showHead.value,\\r\\n        showExtra:context.model.showExtra.value,\\r\\n        disHover:context.model.disHover.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Card\'\\r\\n        }\\r\\n    ],\\r\\n    scopedSlots: {\\r\\n      \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n      \'extra\': () =>  context.model.showExtra.value && dropExtra.render(createElement),\\r\\n      \'body\': () =>   dropBody.render(createElement)\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'15\'\\r\\nexports.name = \'Card\';\\r\\nexports.nickname = \'Card\';\\r\\nexports.type = \'WrapCard\';\\r\\nexports.template=`<Card{model}>{slot}</Card>`\\r\\nexports.desc = \'Card\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  showHead:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  showExtra:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  showBody:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    dontEdit:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  disHover: {\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'禁用鼠标悬停显示阴影\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const dropTitle = context.children[0]\\r\\n  const dropExtra = context.children[1]\\r\\n  const dropBody = context.children[2]\\r\\n  dropTitle.showSlot = context.model.showHead.value\\r\\n  dropExtra.showSlot = context.model.showExtra.value\\r\\n  dropBody.showSlot = context.model.showBody.value\\r\\n  \\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n    \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n        showHead:context.model.showHead.value,\\r\\n        showExtra:context.model.showExtra.value,\\r\\n        disHover:context.model.disHover.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Card\'\\r\\n        }\\r\\n    ],\\r\\n    scopedSlots: {\\r\\n      \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n      \'extra\': () =>  context.model.showExtra.value && dropExtra.render(createElement),\\r\\n      \'body\': () =>   dropBody.render(createElement)\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":11,\"pid\":8,\"initScript\":false}],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"\",\"name\":\"style\"},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"12345\",\"desc\":\"\",\"name\":\"innerHTML\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":8,\"pid\":7,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"12\",\"name\":\"Tabs\",\"nickname\":\"Tabs\",\"type\":\"Tabs\",\"template\":\"`<Tabs{model}>{slot}</Tabs>`\\r\\n\",\"desc\":\"Tabs\",\"allow\":[\"13\"],\"model\":{\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'12\'\\r\\nexports.name = \'Tabs\';\\r\\nexports.nickname = \'Tabs\';\\r\\nexports.type = \'Tabs\';\\r\\nexports.template=\\r\\n`<Tabs{model}>{slot}</Tabs>`\\r\\nexports.desc = \'Tabs\';\\r\\nexports.allow = [13];\\r\\nexports.model = {\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":22,\"pid\":10,\"initScript\":false},{\"children\":[],\"cid\":\"12\",\"name\":\"Tabs\",\"nickname\":\"Tabs\",\"type\":\"Tabs\",\"template\":\"`<Tabs{model}>{slot}</Tabs>`\\r\\n\",\"desc\":\"Tabs\",\"allow\":[\"13\"],\"model\":{\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'12\'\\r\\nexports.name = \'Tabs\';\\r\\nexports.nickname = \'Tabs\';\\r\\nexports.type = \'Tabs\';\\r\\nexports.template=\\r\\n`<Tabs{model}>{slot}</Tabs>`\\r\\nexports.desc = \'Tabs\';\\r\\nexports.allow = [13];\\r\\nexports.model = {\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n          name:\'droppable\'  \\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Tabs\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":23,\"pid\":10,\"initScript\":false},{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":24,\"pid\":10,\"initScript\":false}],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"\",\"name\":\"style\"},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"\",\"desc\":\"\",\"name\":\"innerHTML\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":10,\"pid\":7,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"title\",\"uid\":16,\"showSlot\":false,\"initScript\":false},{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"extra\",\"uid\":17,\"showSlot\":false,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":25,\"pid\":18,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"default\",\"uid\":18,\"showSlot\":false,\"initScript\":false}],\"cid\":\"15\",\"name\":\"Card\",\"nickname\":\"Card\",\"type\":\"WrapCard\",\"template\":\"`<Card{model}>{slot}</Card>`\\r\\n\",\"desc\":\"Card\",\"allow\":[],\"model\":{\"showHead\":{\"type\":\"boolean\",\"exclude\":true,\"value\":false,\"desc\":\"\"},\"showExtra\":{\"type\":\"boolean\",\"exclude\":true,\"value\":false,\"desc\":\"\"},\"showBody\":{\"type\":\"boolean\",\"exclude\":true,\"dontEdit\":true,\"value\":false,\"desc\":\"\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\"},\"disHover\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"禁用鼠标悬停显示阴影\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const dropTitle = context.children[0]\\r\\n  const dropExtra = context.children[1]\\r\\n  const dropBody = context.children[2]\\r\\n  dropTitle.showSlot = context.model.showHead.value\\r\\n  dropExtra.showSlot = context.model.showExtra.value\\r\\n  dropBody.showSlot = context.model.showBody.value\\r\\n  \\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n    \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n        showHead:context.model.showHead.value,\\r\\n        showExtra:context.model.showExtra.value,\\r\\n        disHover:context.model.disHover.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Card\'\\r\\n        }\\r\\n    ],\\r\\n    scopedSlots: {\\r\\n      \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n      \'extra\': () =>  context.model.showExtra.value && dropExtra.render(createElement),\\r\\n      \'body\': () =>   dropBody.render(createElement)\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'15\'\\r\\nexports.name = \'Card\';\\r\\nexports.nickname = \'Card\';\\r\\nexports.type = \'WrapCard\';\\r\\nexports.template=`<Card{model}>{slot}</Card>`\\r\\nexports.desc = \'Card\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  showHead:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  showExtra:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  showBody:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    dontEdit:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  disHover: {\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'禁用鼠标悬停显示阴影\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const dropTitle = context.children[0]\\r\\n  const dropExtra = context.children[1]\\r\\n  const dropBody = context.children[2]\\r\\n  dropTitle.showSlot = context.model.showHead.value\\r\\n  dropExtra.showSlot = context.model.showExtra.value\\r\\n  dropBody.showSlot = context.model.showBody.value\\r\\n  \\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n    \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n        showHead:context.model.showHead.value,\\r\\n        showExtra:context.model.showExtra.value,\\r\\n        disHover:context.model.disHover.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Card\'\\r\\n        }\\r\\n    ],\\r\\n    scopedSlots: {\\r\\n      \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n      \'extra\': () =>  context.model.showExtra.value && dropExtra.render(createElement),\\r\\n      \'body\': () =>   dropBody.render(createElement)\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":15,\"pid\":7,\"initScript\":false},{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"123\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":19,\"pid\":7,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":7,\"pid\":2,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":2,\"initScript\":false,\"maxUid\":27}', null, '33', '2017-11-07 17:55:37', '33', '2017-11-08 23:10:44', '0');
INSERT INTO `page` VALUES ('296', null, '{\"children\":[{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"type\",\"value\":\"flex\"},\"style\":{\"type\":\"text\",\"desc\":\"value\",\"name\":\"style\",\"value\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":3,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"46\",\"name\":\"Icon\",\"nickname\":\"Icon\",\"type\":\"Icon\",\"template\":\"`<Icon{model}></Icon>`\\r\\n\",\"desc\":\"Icon\",\"allow\":[],\"model\":{\"type\":{\"type\":\"select\",\"desc\":\"\",\"value\":\"refresh\",\"name\":\"type\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'46\'\\r\\nexports.name = \'Icon\';\\r\\nexports.nickname = \'Icon\';\\r\\nexports.type = \'Icon\';\\r\\nexports.template= `<Icon{model}></Icon>`\\r\\nexports.desc = \'Icon\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    type:{\\r\\n      type:\'select\',\\r\\n      value:\'refresh\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":4,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"value\",\"value\":\"\"},\"label\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"label\",\"value\":\"input\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"desc\":\"\",\"name\":\"prop\",\"value\":\"value\"},\"required\":{\"type\":\"boolean\",\"desc\":\"value\",\"name\":\"required\",\"value\":true},\"style\":{\"type\":\"json\",\"desc\":\"value\",\"name\":\"style\",\"value\":{\"width\":\"300px\"}}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":6,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"212\",\"name\":\"FormSelect\",\"nickname\":\"FormSelect\",\"type\":\"FormSelect\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Select>\\r\\n        </Select>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"下拉框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"北京市\",\"value\":\"1\"},{\"label\":\"上海市\",\"value\":\"2\"},{\"label\":\"深圳市\",\"value\":\"3\"}],\"desc\":\"\",\"name\":\"items\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"desc\":\"\",\"value\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"desc\":\"\",\"value\":\"input\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"desc\":\"\",\"value\":\"value\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"desc\":\"value\",\"value\":false,\"name\":\"required\"},\"style\":{\"type\":\"json\",\"desc\":\"value\",\"value\":{\"width\":\"300px\"},\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Select\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'212\'\\r\\nexports.name = \'FormSelect\';\\r\\nexports.nickname = \'FormSelect\';\\r\\nexports.type = \'FormSelect\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Select>\\r\\n        </Select>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'下拉框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [{\\r\\n            label: \'北京市\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'上海市\',\\r\\n            value: \'2\'\\r\\n        }, {\\r\\n            label: \'深圳市\',\\r\\n            value: \'3\'\\r\\n        }],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Select\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":7,\"pid\":1,\"initScript\":false,\"scriptString\":\"function (eventCenter) {\\r\\n\\r\\n}\"},{\"children\":[],\"cid\":\"215\",\"name\":\"FormUpload\",\"nickname\":\"FormUpload\",\"type\":\"FormUpload\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Upload>\\r\\n        </Upload>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"upload\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"uploadUrl\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"uploadUrl\",\"value\":\"/esview/file/upload_file\"},\"value\":{\"type\":\"array\",\"desc\":\"\",\"name\":\"value\",\"value\":[]},\"label\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"label\",\"value\":\"input\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"desc\":\"\",\"name\":\"prop\",\"value\":\"value\"},\"required\":{\"type\":\"boolean\",\"desc\":\"value\",\"name\":\"required\",\"value\":false},\"style\":{\"type\":\"json\",\"desc\":\"value\",\"name\":\"style\",\"value\":{}}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Upload\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'215\'\\r\\nexports.name = \'FormUpload\';\\r\\nexports.nickname = \'FormUpload\';\\r\\nexports.type = \'FormUpload\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Upload>\\r\\n        </Upload>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'upload\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    uploadUrl: {\\r\\n        type: \'text\',\\r\\n        value: \'/esview/file/upload_file\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'array\',\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Upload\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":8,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"type\",\"value\":\"flex\"},\"style\":{\"type\":\"text\",\"desc\":\"value\",\"name\":\"style\",\"value\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":10,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"214\",\"name\":\"FormDate\",\"nickname\":\"FormDate\",\"type\":\"FormDate\",\"template\":\"`\\r\\n   <FormItem>\\r\\n        <DatePicker>\\r\\n        </DatePicker>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"date\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"value\",\"value\":\"\"},\"type\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"type\",\"value\":\"datetime\"},\"format\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"format\",\"value\":\"yyyy-MM-dd\"},\"label\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"label\",\"value\":\"input\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"desc\":\"\",\"name\":\"prop\",\"value\":\"value\"},\"required\":{\"type\":\"boolean\",\"desc\":\"value\",\"name\":\"required\",\"value\":true},\"style\":{\"type\":\"json\",\"desc\":\"value\",\"name\":\"style\",\"value\":{}}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'DatePicker\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'214\'\\r\\nexports.name = \'FormDate\';\\r\\nexports.nickname = \'FormDate\';\\r\\nexports.type = \'FormDate\';\\r\\nexports.template =\\r\\n    `\\r\\n   <FormItem>\\r\\n        <DatePicker>\\r\\n        </DatePicker>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'date\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: 0,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    type: {\\r\\n        type: \'text\',\\r\\n        value: \'datetime\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    format: {\\r\\n        type: \'text\',\\r\\n        value: \'yyyy-MM-dd HH:mm:ss\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'DatePicker\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":11,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"215\",\"name\":\"FormUpload\",\"nickname\":\"FormUpload\",\"type\":\"FormUpload\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Upload>\\r\\n        </Upload>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"upload\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"uploadUrl\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"uploadUrl\",\"value\":\"/esview/file/upload_file\"},\"value\":{\"type\":\"array\",\"desc\":\"\",\"name\":\"value\",\"value\":[]},\"label\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"label\",\"value\":\"input\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"desc\":\"\",\"name\":\"prop\",\"value\":\"value\"},\"required\":{\"type\":\"boolean\",\"desc\":\"value\",\"name\":\"required\",\"value\":false},\"style\":{\"type\":\"json\",\"desc\":\"value\",\"name\":\"style\",\"value\":{}}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Upload\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'215\'\\r\\nexports.name = \'FormUpload\';\\r\\nexports.nickname = \'FormUpload\';\\r\\nexports.type = \'FormUpload\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Upload>\\r\\n        </Upload>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'upload\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    uploadUrl: {\\r\\n        type: \'text\',\\r\\n        value: \'/esview/file/upload_file\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'array\',\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Upload\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":12,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"218\",\"name\":\"FormCheckbox\",\"nickname\":\"FormCheckbox\",\"type\":\"FormCheckbox\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Checkbox>\\r\\n        </Checkbox>\\r\\n    </FormItem>\\r\\n\\r\\n`\\r\\n\",\"desc\":\"FormCheckbox\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"github\",\"value\":\"1\"},{\"label\":\"facebook\",\"value\":\"2\"},{\"label\":\"microsoft\",\"value\":\"3\"}],\"desc\":\"\",\"name\":\"items\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"desc\":\"\",\"name\":\"value\",\"value\":[\"3\",\"1\"]},\"label\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"label\",\"value\":\"input\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"desc\":\"\",\"name\":\"prop\",\"value\":\"value\"},\"required\":{\"type\":\"boolean\",\"desc\":\"value\",\"name\":\"required\",\"value\":false},\"style\":{\"type\":\"json\",\"desc\":\"value\",\"name\":\"style\",\"value\":{\"width\":\"300px\"}}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Checkbox\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'218\'\\r\\nexports.name = \'FormCheckbox\';\\r\\nexports.nickname = \'FormCheckbox\';\\r\\nexports.type = \'FormCheckbox\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Checkbox>\\r\\n        </Checkbox>\\r\\n    </FormItem>\\r\\n\\r\\n`\\r\\nexports.desc = \'FormCheckbox\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [{\\r\\n            label: \'github\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'facebook\',\\r\\n            value: \'2\'\\r\\n        }, {\\r\\n            label: \'microsoft\',\\r\\n            value: \'3\'\\r\\n        }],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Checkbox\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":13,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"217\",\"name\":\"FormRadio\",\"nickname\":\"FormRadio\",\"type\":\"FormRadio\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Radio>\\r\\n        </Radio>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"radio\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"male\",\"value\":\"1\"},{\"label\":\"female\",\"value\":\"2\"}],\"desc\":\"\",\"name\":\"items\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"desc\":\"\",\"name\":\"value\",\"value\":\"2\"},\"label\":{\"type\":\"text\",\"desc\":\"\",\"name\":\"label\",\"value\":\"input\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"desc\":\"\",\"name\":\"prop\",\"value\":\"value\"},\"required\":{\"type\":\"boolean\",\"desc\":\"value\",\"name\":\"required\",\"value\":false},\"style\":{\"type\":\"json\",\"desc\":\"value\",\"name\":\"style\",\"value\":{\"width\":\"300px\"}}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Radio\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'217\'\\r\\nexports.name = \'FormRadio\';\\r\\nexports.nickname = \'FormRadio\';\\r\\nexports.type = \'FormRadio\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Radio>\\r\\n        </Radio>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'radio\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [{\\r\\n            label: \'male\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'female\',\\r\\n            value: \'2\'\\r\\n        }],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Radio\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":14,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"44\",\"name\":\"Div\",\"nickname\":\"Div\",\"type\":\"Div\",\"template\":\"`<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\n\",\"desc\":\"Div\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"desc\":\"\",\"value\":{\"padding\":\"10px\"}},\"innerHTML\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"desc\":\"\",\"value\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'44\'\\r\\nexports.name = \'Div\';\\r\\nexports.nickname = \'Div\';\\r\\nexports.type = \'Div\';\\r\\nexports.template= `<div{model} {slotName}>{slot}{innerHTML}</div>`\\r\\nexports.desc = \'Div\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    style:{\\r\\n      type:\'json\',\\r\\n      value:{\\r\\n        padding:\'10px\'\\r\\n      },\\r\\n      desc:\'\'\\r\\n    },\\r\\n    innerHTML:{\\r\\n      type:\'text\',\\r\\n      compileType:\'innerHTML\',\\r\\n      value:\'\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      innerHTML:context.model.innerHTML.value,\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Div\'\\r\\n        }\\r\\n    ],\\r\\n    on: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":16,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"46\",\"name\":\"Icon\",\"nickname\":\"Icon\",\"type\":\"Icon\",\"template\":\"`<Icon{model}></Icon>`\\r\\n\",\"desc\":\"Icon\",\"allow\":[],\"model\":{\"type\":{\"type\":\"select\",\"desc\":\"\",\"value\":\"refresh\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'46\'\\r\\nexports.name = \'Icon\';\\r\\nexports.nickname = \'Icon\';\\r\\nexports.type = \'Icon\';\\r\\nexports.template= `<Icon{model}></Icon>`\\r\\nexports.desc = \'Icon\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    type:{\\r\\n      type:\'select\',\\r\\n      value:\'refresh\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":17,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"46\",\"name\":\"Icon\",\"nickname\":\"Icon\",\"type\":\"Icon\",\"template\":\"`<Icon{model}></Icon>`\\r\\n\",\"desc\":\"Icon\",\"allow\":[],\"model\":{\"type\":{\"type\":\"select\",\"desc\":\"\",\"value\":\"refresh\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'46\'\\r\\nexports.name = \'Icon\';\\r\\nexports.nickname = \'Icon\';\\r\\nexports.type = \'Icon\';\\r\\nexports.template= `<Icon{model}></Icon>`\\r\\nexports.desc = \'Icon\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    type:{\\r\\n      type:\'select\',\\r\\n      value:\'refresh\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":18,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"save\":false,\"desc\":\"\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}]},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}]},\"style\":{\"type\":\"json\",\"desc\":\"\",\"value\":{}}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":19,\"pid\":1,\"initScript\":false},{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":36,\"pid\":35,\"initScript\":false}],\"cid\":\"13\",\"name\":\"TabPane\",\"nickname\":\"TabPane\",\"type\":\"TabPane\",\"template\":\"`<TabPane{model}>{slot}</TabPane>`\\r\\n\",\"desc\":\"TabPane\",\"allow\":[],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"tab\",\"desc\":\"label\",\"name\":\"label\"},\"name\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"name\",\"name\":\"name\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'13\'\\r\\nexports.name = \'TabPane\';\\r\\nexports.nickname = \'TabPane\';\\r\\nexports.type = \'TabPane\';\\r\\nexports.template=\\r\\n`<TabPane{model}>{slot}</TabPane>`\\r\\nexports.desc = \'TabPane\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'tab\',\\r\\n    desc: \'label\'\\r\\n  },\\r\\n  name: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'name\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":35,\"pid\":20,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"desc\":\"value\",\"value\":{}}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":20,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"6\",\"name\":\"Button\",\"nickname\":\"Button\",\"type\":\"Button\",\"template\":\"`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\n\",\"desc\":\"按钮\",\"allow\":null,\"model\":{\"name\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"desc\":\"\",\"value\":\"提交\",\"name\":\"name\"},\"style\":{\"type\":\"text\",\"desc\":\"value\",\"value\":\"\",\"name\":\"style\"},\"type\":{\"type\":\"text\",\"desc\":\"type of button\",\"value\":\"primary\",\"name\":\"type\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'6\'\\r\\nexports.name = \'Button\';\\r\\nexports.nickname = \'Button\';\\r\\nexports.type = \'Button\';\\r\\nexports.template=`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\nexports.desc = \'按钮\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  name:{\\r\\n       type: \'text\',\\r\\n       compileType:\'innerHTML\',\\r\\n       value: \'提交\',\\r\\n       desc: \'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  type: {\\r\\n    type: \'text\',\\r\\n    value: \'primary\',\\r\\n    desc: \'type of button\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":21,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"46\",\"name\":\"Icon\",\"nickname\":\"Icon\",\"type\":\"Icon\",\"template\":\"`<Icon{model}></Icon>`\\r\\n\",\"desc\":\"Icon\",\"allow\":[],\"model\":{\"type\":{\"type\":\"select\",\"desc\":\"\",\"value\":\"refresh\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'46\'\\r\\nexports.name = \'Icon\';\\r\\nexports.nickname = \'Icon\';\\r\\nexports.type = \'Icon\';\\r\\nexports.template= `<Icon{model}></Icon>`\\r\\nexports.desc = \'Icon\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    type:{\\r\\n      type:\'select\',\\r\\n      value:\'refresh\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":22,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"save\":false,\"desc\":\"\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}]},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}]},\"style\":{\"type\":\"json\",\"desc\":\"\",\"value\":{}}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":23,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"save\":false,\"desc\":\"\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}]},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}]},\"style\":{\"type\":\"json\",\"desc\":\"\",\"value\":{}}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":24,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"11\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"Table\",\"template\":\"`\\r\\n<Table{model}></Table>\\r\\n`\\r\\n\",\"desc\":\"表格\",\"allow\":null,\"model\":{\"data\":{\"type\":\"json\",\"save\":false,\"desc\":\"\",\"value\":[{\"name\":\"xm\",\"age\":20,\"address\":\"sh\"}]},\"columns\":{\"type\":\"json\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"address\",\"key\":\"address\"}]},\"style\":{\"type\":\"json\",\"desc\":\"\",\"value\":{}}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'11\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'Table\';\\r\\nexports.template = `\\r\\n<Table{model}></Table>\\r\\n`\\r\\nexports.desc = \'表格\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  data: {\\r\\n    type: \'json\',\\r\\n    value: [{\\r\\n        name:\'xm\',\\r\\n        age:20,\\r\\n        address:\'sh\'\\r\\n    }],\\r\\n    save: false,\\r\\n    desc: \'\'\\r\\n  },\\r\\n  columns: {\\r\\n    type: \'json\',\\r\\n    value: [\\r\\n      {\\r\\n        title: \'name\',\\r\\n        key: \'name\'\\r\\n      },\\r\\n      {\\r\\n        title: \'age\',\\r\\n        key: \'age\'\\r\\n      },\\r\\n      {\\r\\n        title: \'address\',\\r\\n        key: \'address\'\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: {},\\r\\n    desc: \'\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  if (!context.initScript) {\\r\\n    context.initScript = true\\r\\n  }\\r\\n\\r\\n\\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      columns: context.model.columns.value,\\r\\n      data: context.model.data.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: context\\r\\n    },\\r\\n    directives: [\\r\\n      {\\r\\n        name: \'editable\',\\r\\n        value: \'Table\'\\r\\n      }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":25,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"46\",\"name\":\"Icon\",\"nickname\":\"Icon\",\"type\":\"Icon\",\"template\":\"`<Icon{model}></Icon>`\\r\\n\",\"desc\":\"Icon\",\"allow\":[],\"model\":{\"type\":{\"type\":\"select\",\"desc\":\"\",\"value\":\"refresh\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'46\'\\r\\nexports.name = \'Icon\';\\r\\nexports.nickname = \'Icon\';\\r\\nexports.type = \'Icon\';\\r\\nexports.template= `<Icon{model}></Icon>`\\r\\nexports.desc = \'Icon\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    type:{\\r\\n      type:\'select\',\\r\\n      value:\'refresh\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":26,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"46\",\"name\":\"Icon\",\"nickname\":\"Icon\",\"type\":\"Icon\",\"template\":\"`<Icon{model}></Icon>`\\r\\n\",\"desc\":\"Icon\",\"allow\":[],\"model\":{\"type\":{\"type\":\"select\",\"desc\":\"\",\"value\":\"refresh\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'46\'\\r\\nexports.name = \'Icon\';\\r\\nexports.nickname = \'Icon\';\\r\\nexports.type = \'Icon\';\\r\\nexports.template= `<Icon{model}></Icon>`\\r\\nexports.desc = \'Icon\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    type:{\\r\\n      type:\'select\',\\r\\n      value:\'refresh\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":27,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"desc\":\"value\",\"value\":{}}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":28,\"pid\":1,\"initScript\":false},{\"children\":[],\"cid\":\"13\",\"name\":\"TabPane\",\"nickname\":\"TabPane\",\"type\":\"TabPane\",\"template\":\"`<TabPane{model}>{slot}</TabPane>`\\r\\n\",\"desc\":\"TabPane\",\"allow\":[],\"model\":{\"label\":{\"type\":\"text\",\"value\":\"tab\",\"desc\":\"label\"},\"name\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"name\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'13\'\\r\\nexports.name = \'TabPane\';\\r\\nexports.nickname = \'TabPane\';\\r\\nexports.type = \'TabPane\';\\r\\nexports.template=\\r\\n`<TabPane{model}>{slot}</TabPane>`\\r\\nexports.desc = \'TabPane\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  label: {\\r\\n    type: \'text\',\\r\\n    value: \'tab\',\\r\\n    desc: \'label\'\\r\\n  },\\r\\n  name: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'name\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n \\r\\n  return createElement(context.type, {\\r\\n    style: context.model.style.value,\\r\\n    props: {\\r\\n      \'name\': context.model.name.value,\\r\\n      \'label\': context.model.label.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'droppable\'\\r\\n        },\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'TabPane\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":30,\"pid\":1,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"title\",\"uid\":32,\"showSlot\":false,\"initScript\":false},{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"extra\",\"uid\":33,\"showSlot\":false,\"initScript\":false},{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"default\",\"uid\":34,\"showSlot\":false,\"initScript\":false}],\"cid\":\"15\",\"name\":\"Card\",\"nickname\":\"Card\",\"type\":\"WrapCard\",\"template\":\"`<Card{model}>{slot}</Card>`\\r\\n\",\"desc\":\"Card\",\"allow\":[],\"model\":{\"showHead\":{\"type\":\"boolean\",\"exclude\":true,\"value\":false,\"desc\":\"\"},\"showExtra\":{\"type\":\"boolean\",\"exclude\":true,\"value\":false,\"desc\":\"\"},\"showBody\":{\"type\":\"boolean\",\"exclude\":true,\"dontEdit\":true,\"value\":false,\"desc\":\"\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\"},\"disHover\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"禁用鼠标悬停显示阴影\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const dropTitle = context.children[0]\\r\\n  const dropExtra = context.children[1]\\r\\n  const dropBody = context.children[2]\\r\\n  dropTitle.showSlot = context.model.showHead.value\\r\\n  dropExtra.showSlot = context.model.showExtra.value\\r\\n  dropBody.showSlot = context.model.showBody.value\\r\\n  \\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n    \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n        showHead:context.model.showHead.value,\\r\\n        showExtra:context.model.showExtra.value,\\r\\n        disHover:context.model.disHover.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Card\'\\r\\n        }\\r\\n    ],\\r\\n    scopedSlots: {\\r\\n      \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n      \'extra\': () =>  context.model.showExtra.value && dropExtra.render(createElement),\\r\\n      \'body\': () =>   dropBody.render(createElement)\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'15\'\\r\\nexports.name = \'Card\';\\r\\nexports.nickname = \'Card\';\\r\\nexports.type = \'WrapCard\';\\r\\nexports.template=`<Card{model}>{slot}</Card>`\\r\\nexports.desc = \'Card\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  showHead:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  showExtra:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  showBody:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    dontEdit:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  disHover: {\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'禁用鼠标悬停显示阴影\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const dropTitle = context.children[0]\\r\\n  const dropExtra = context.children[1]\\r\\n  const dropBody = context.children[2]\\r\\n  dropTitle.showSlot = context.model.showHead.value\\r\\n  dropExtra.showSlot = context.model.showExtra.value\\r\\n  dropBody.showSlot = context.model.showBody.value\\r\\n  \\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n    \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n        showHead:context.model.showHead.value,\\r\\n        showExtra:context.model.showExtra.value,\\r\\n        disHover:context.model.disHover.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Card\'\\r\\n        }\\r\\n    ],\\r\\n    scopedSlots: {\\r\\n      \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n      \'extra\': () =>  context.model.showExtra.value && dropExtra.render(createElement),\\r\\n      \'body\': () =>   dropBody.render(createElement)\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":31,\"pid\":1,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"desc\":\"value\",\"value\":{}}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":false,\"maxUid\":37}', null, '33', '2017-11-07 22:00:07', '33', '2017-11-08 15:00:23', '0');
INSERT INTO `page` VALUES ('297', '1', '{\"children\":[{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"218\",\"name\":\"Content\",\"nickname\":\"Content\",\"type\":\"p\",\"template\":\"`<p{model} {slotName}>{slot}{innerHTML}</p>`\\r\\n\",\"desc\":\"Content\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"this is content\",\"desc\":\"\"},\"style\":{\"type\":\"json\",\"value\":{\"minHeight\":\"10px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            innerHTML: context.model.value.value,\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Content\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'218\'\\r\\nexports.name = \'Content\';\\r\\nexports.nickname = \'Content\';\\r\\nexports.type = \'p\';\\r\\nexports.template =\\r\\n    `<p{model} {slotName}>{slot}{innerHTML}</p>`\\r\\nexports.desc = \'Content\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'this is content\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            minHeight: \'10px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            innerHTML: context.model.value.value,\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Content\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":6,\"uid\":298,\"pid\":291,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"title\",\"uid\":291,\"showSlot\":true,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"46\",\"name\":\"Icon\",\"nickname\":\"Icon\",\"type\":\"Icon\",\"template\":\"`<Icon{model}></Icon>`\\r\\n\",\"desc\":\"Icon\",\"allow\":[],\"model\":{\"type\":{\"type\":\"select\",\"value\":\"refresh\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'46\'\\r\\nexports.name = \'Icon\';\\r\\nexports.nickname = \'Icon\';\\r\\nexports.type = \'Icon\';\\r\\nexports.template= `<Icon{model}></Icon>`\\r\\nexports.desc = \'Icon\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    type:{\\r\\n      type:\'select\',\\r\\n      value:\'refresh\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":299,\"pid\":292,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"extra\",\"uid\":292,\"showSlot\":true,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"218\",\"name\":\"Content\",\"nickname\":\"Content\",\"type\":\"p\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Checkbox>\\r\\n        </Checkbox>\\r\\n    </FormItem>\\r\\n\\r\\n`\\r\\n\",\"desc\":\"Content\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"this is content\",\"desc\":\"\",\"name\":\"value\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"padding\":\"10px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            innerHTML: context.model.value.value,\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Content\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'218\'\\r\\nexports.name = \'Content\';\\r\\nexports.nickname = \'Content\';\\r\\nexports.type = \'p\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Checkbox>\\r\\n        </Checkbox>\\r\\n    </FormItem>\\r\\n\\r\\n`\\r\\nexports.desc = \'Content\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'this is content\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            padding: \'10px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            innerHTML: context.model.value.value,\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Content\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":6,\"uid\":295,\"pid\":293,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"default\",\"uid\":293,\"showSlot\":false,\"initScript\":false}],\"cid\":\"15\",\"name\":\"Card\",\"nickname\":\"Card\",\"type\":\"WrapCard\",\"template\":\"`<Card{model}>{slot}</Card>`\\r\\n\",\"desc\":\"Card\",\"allow\":[],\"model\":{\"showHead\":{\"type\":\"boolean\",\"exclude\":true,\"value\":true,\"desc\":\"\",\"name\":\"showHead\"},\"showExtra\":{\"type\":\"boolean\",\"exclude\":true,\"value\":true,\"desc\":\"\",\"name\":\"showExtra\"},\"showBody\":{\"type\":\"boolean\",\"exclude\":true,\"dontEdit\":true,\"value\":false,\"desc\":\"\",\"name\":\"showBody\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"},\"disHover\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"禁用鼠标悬停显示阴影\",\"name\":\"disHover\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const dropTitle = context.children[0]\\r\\n  const dropExtra = context.children[1]\\r\\n  const dropBody = context.children[2]\\r\\n  dropTitle.showSlot = context.model.showHead.value\\r\\n  dropExtra.showSlot = context.model.showExtra.value\\r\\n  dropBody.showSlot = context.model.showBody.value\\r\\n  \\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n    \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n        showHead:context.model.showHead.value,\\r\\n        showExtra:context.model.showExtra.value,\\r\\n        disHover:context.model.disHover.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Card\'\\r\\n        }\\r\\n    ],\\r\\n    scopedSlots: {\\r\\n      \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n      \'extra\': () =>  context.model.showExtra.value && dropExtra.render(createElement),\\r\\n      \'body\': () =>   dropBody.render(createElement)\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'15\'\\r\\nexports.name = \'Card\';\\r\\nexports.nickname = \'Card\';\\r\\nexports.type = \'WrapCard\';\\r\\nexports.template=`<Card{model}>{slot}</Card>`\\r\\nexports.desc = \'Card\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  showHead:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  showExtra:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  showBody:{\\r\\n    type:\'boolean\',\\r\\n    exclude:true,\\r\\n    dontEdit:true,\\r\\n    value:false,\\r\\n    desc:\'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'json\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  disHover: {\\r\\n    type: \'boolean\',\\r\\n    value: false,\\r\\n    desc: \'禁用鼠标悬停显示阴影\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  const dropTitle = context.children[0]\\r\\n  const dropExtra = context.children[1]\\r\\n  const dropBody = context.children[2]\\r\\n  dropTitle.showSlot = context.model.showHead.value\\r\\n  dropExtra.showSlot = context.model.showExtra.value\\r\\n  dropBody.showSlot = context.model.showBody.value\\r\\n  \\r\\n  if(!context.initScript){\\r\\n    context.initScript=true\\r\\n  }\\r\\n\\r\\n    \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n        showHead:context.model.showHead.value,\\r\\n        showExtra:context.model.showExtra.value,\\r\\n        disHover:context.model.disHover.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Card\'\\r\\n        }\\r\\n    ],\\r\\n    scopedSlots: {\\r\\n      \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n      \'extra\': () =>  context.model.showExtra.value && dropExtra.render(createElement),\\r\\n      \'body\': () =>   dropBody.render(createElement)\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":290,\"pid\":289,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":289,\"initScript\":false,\"maxUid\":300}', null, '1', '2017-11-09 14:34:19', '1', '2017-11-09 15:12:03', '0');
INSERT INTO `page` VALUES ('298', '1', '{\"children\":[{\"children\":[],\"cid\":\"220\",\"name\":\"Page\",\"nickname\":\"Page\",\"type\":\"Page\",\"template\":\"`<p{model} {slotName}>{slot}{innerHTML}</p>`\\r\\n\",\"desc\":\"Content\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"current\":{\"type\":\"text\",\"value\":\"1\",\"desc\":\"\",\"name\":\"current\"},\"pageSize\":{\"type\":\"text\",\"value\":\"2\",\"desc\":\"\",\"name\":\"pageSize\"},\"total\":{\"type\":\"text\",\"value\":\"20\",\"desc\":\"\",\"name\":\"total\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        props: {\\r\\n            current: context.model.current.value,\\r\\n            \'page-size\': context.model.pageSize.value,\\r\\n            total: context.model.total.value,\\r\\n            \'show-total\':true,\\r\\n            \'show-elevator\':true,\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Page\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'220\'\\r\\nexports.name = \'Page\';\\r\\nexports.nickname = \'Page\';\\r\\nexports.type = \'Page\';\\r\\nexports.template =\\r\\n    `<p{model} {slotName}>{slot}{innerHTML}</p>`\\r\\nexports.desc = \'Content\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    current: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    pageSize: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    total: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        props: {\\r\\n            current: context.model.current.value,\\r\\n            \'page-size\': context.model.pageSize.value,\\r\\n            total: context.model.total.value,\\r\\n            \'show-total\':true,\\r\\n            \'show-elevator\':true,\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Page\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":6,\"uid\":2,\"pid\":1,\"initScript\":true}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":1,\"initScript\":true,\"maxUid\":3}', null, '1', '2017-11-09 16:33:48', '1', '2017-11-09 16:33:48', '0');
INSERT INTO `page` VALUES ('299', '1', '{\"children\":[{\"children\":[],\"cid\":\"3\",\"name\":\"Form\",\"nickname\":\"Form\",\"type\":\"Form\",\"template\":\"`<Form{model}>{slot}</Form>`;\\r\\n\",\"desc\":\"表单\",\"allow\":[\"1\",\" 4\"],\"model\":{\"url\":{\"type\":\"text\",\"value\":\"./test/refreshTable\",\"desc\":\"请求地址\"},\"labelWidth\":{\"type\":\"text\",\"value\":100,\"desc\":\"表单label宽度\"},\"inline\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"行内\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\', (param) => {\\r\\n\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\\r\\n        let vm = eventCenter.createElement.vm\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n\\r\\n        refs.forEach(ref => {\\r\\n            ref.$children[0].validate(function(valid) {\\r\\n                if (!valid) pass = false\\r\\n            })\\r\\n        })\\r\\n\\r\\n        if (!pass) {\\r\\n            return void vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n\\r\\n        params.pageSize = param.pageSize\\r\\n        params.pageNum = param.pageNum\\r\\n        params.url = this.model.url.value\\r\\n        eventCenter.trigger(\'refresh-table\', {\\r\\n            data: params\\r\\n        })\\r\\n    })\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            inline: context.model.inline.value,\\r\\n            \'label-width\': context.model.labelWidth.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Form\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        }\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'3\'\\r\\nexports.name = \'Form\';\\r\\nexports.nickname = \'Form\';\\r\\nexports.type = \'Form\';\\r\\nexports.template = `<Form{model}>{slot}</Form>`;\\r\\nexports.desc = \'表单\';\\r\\nexports.allow = [1, 4];\\r\\nexports.model = {\\r\\n    url: {\\r\\n        type: \'text\',\\r\\n        value: \'./test/refreshTable\',\\r\\n        desc: \'��求地址\'\\r\\n    },\\r\\n    labelWidth: {\\r\\n        type: \'text\',\\r\\n        value: 100,\\r\\n        desc: \'表单label宽度\'\\r\\n    },\\r\\n    inline: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'行内\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {},\\r\\n        desc: \'value\'\\r\\n    },\\r\\n\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\', (param) => {\\r\\n\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\\r\\n        let vm = eventCenter.createElement.vm\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n\\r\\n        refs.forEach(ref => {\\r\\n            ref.$children[0].validate(function(valid) {\\r\\n                if (!valid) pass = false\\r\\n            })\\r\\n        })\\r\\n\\r\\n        if (!pass) {\\r\\n            return void vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n\\r\\n        params.pageSize = param.pageSize\\r\\n        params.pageNum = param.pageNum\\r\\n        params.url = this.model.url.value\\r\\n        eventCenter.trigger(\'refresh-table\', {\\r\\n            data: params\\r\\n        })\\r\\n    })\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            inline: context.model.inline.value,\\r\\n            \'label-width\': context.model.labelWidth.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Form\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        }\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":3,\"uid\":14,\"pid\":2,\"initScript\":false},{\"children\":[],\"cid\":\"220\",\"name\":\"Page\",\"nickname\":\"Page\",\"type\":\"wrapTable\",\"template\":\"`<p{model} {slotName}>{slot}{innerHTML}</p>`\\r\\n\",\"desc\":\"Content\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"columns\":{\"showConfig\":false,\"exclude\":true,\"type\":\"array\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"gender\",\"key\":\"gender\"}],\"desc\":\"\",\"name\":\"columns\"},\"data\":{\"showConfig\":false,\"exclude\":true,\"type\":\"array\",\"value\":[{\"gender\":\"male\",\"name\":\"xm\",\"age\":\"18\"},{\"gender\":\"female\",\"name\":\"xh\",\"age\":\"20\"}],\"desc\":\"\",\"name\":\"data\"},\"current\":{\"type\":\"text\",\"value\":1,\"desc\":\"\",\"name\":\"current\"},\"pageSize\":{\"type\":\"text\",\"value\":10,\"desc\":\"\",\"name\":\"pageSize\"},\"total\":{\"type\":\"text\",\"value\":100,\"desc\":\"\",\"name\":\"total\"},\"loading\":false},\"script\":\"function (eventCenter) {\\r\\n\\r\\n    this.model.columns.value = [{\\r\\n            title: \'name\',\\r\\n            key: \'name\'\\r\\n        },\\r\\n        {\\r\\n            title: \'age\',\\r\\n            key: \'age\'\\r\\n        },\\r\\n        {\\r\\n            title: \'gender\',\\r\\n            key: \'gender\'\\r\\n        }\\r\\n    ]\\r\\n\\r\\n    let vm = eventCenter.createElement.vm\\r\\n    eventCenter.bind(\'refresh-table\', (param) => {\\r\\n        this.model.loading = true\\r\\n        let url = param.data.url\\r\\n        delete param.data.url\\r\\n        vm.$http.post(url, param.data).then(res => {\\r\\n            if (res.data.code === 10000) {\\r\\n                this.model.loading = false\\r\\n                this.model.data.value = res.data.data\\r\\n            }\\r\\n        })\\r\\n    })\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        props: {\\r\\n            current: context.model.current.value,\\r\\n            \'pageSize\': context.model.pageSize.value,\\r\\n            total: context.model.total.value,\\r\\n            \'show-total\': true,\\r\\n            \'show-elevator\': true,\\r\\n            columns: context.model.columns.value,\\r\\n            data: context.model.data.value,\\r\\n            loading: context.model.loading\\r\\n\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            \'click\': function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        on: {\\r\\n            \'on-change\': function(e) {\\r\\n                createElement.eventCenter.trigger(\'submit-form\', {\\r\\n                    from: context.uid,\\r\\n                    data: {\\r\\n                        pageNum: context.model.current.value,\\r\\n                        pageSize: context.model.pageSize.value\\r\\n                    }\\r\\n                })\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Page\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'220\'\\r\\nexports.name = \'Page\';\\r\\nexports.nickname = \'Page\';\\r\\nexports.type = \'wrapTable\';\\r\\nexports.template =\\r\\n    `<p{model} {slotName}>{slot}{innerHTML}</p>`\\r\\nexports.desc = \'Content\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    columns: {\\r\\n        showConfig: false,\\r\\n        exclude: true,\\r\\n        type: \'array\',\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    data: {\\r\\n        showConfig: false,\\r\\n        exclude: true,\\r\\n        type: \'array\',\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    current: {\\r\\n        type: \'text\',\\r\\n        value: 1,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    pageSize: {\\r\\n        type: \'text\',\\r\\n        value: 10,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    total: {\\r\\n        type: \'text\',\\r\\n        value: 100,\\r\\n        desc: \'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n    this.model.columns.value = [{\\r\\n            title: \'name\',\\r\\n            key: \'name\'\\r\\n        },\\r\\n        {\\r\\n            title: \'age\',\\r\\n            key: \'age\'\\r\\n        },\\r\\n        {\\r\\n            title: \'gender\',\\r\\n            key: \'gender\'\\r\\n        }\\r\\n    ]\\r\\n\\r\\n    let vm = eventCenter.createElement.vm\\r\\n    eventCenter.bind(\'refresh-table\', (param) => {\\r\\n        this.model.loading = true\\r\\n        let url = param.data.url\\r\\n        delete param.data.url\\r\\n        vm.$http.post(url, param.data).then(res => {\\r\\n            if (res.data.code === 10000) {\\r\\n                this.model.loading = false\\r\\n                this.model.data.value = res.data.data\\r\\n            }\\r\\n        })\\r\\n    })\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        props: {\\r\\n            current: context.model.current.value,\\r\\n            \'pageSize\': context.model.pageSize.value,\\r\\n            total: context.model.total.value,\\r\\n            \'show-total\': true,\\r\\n            \'show-elevator\': true,\\r\\n            columns: context.model.columns.value,\\r\\n            data: context.model.data.value,\\r\\n            loading: context.model.loading\\r\\n\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            \'click\': function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        on: {\\r\\n            \'on-change\': function(e) {\\r\\n                createElement.eventCenter.trigger(\'submit-form\', {\\r\\n                    from: context.uid,\\r\\n                    data: {\\r\\n                        pageNum: context.model.current.value,\\r\\n                        pageSize: context.model.pageSize.value\\r\\n                    }\\r\\n                })\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Page\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":6,\"uid\":15,\"pid\":2,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面���\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":2,\"initScript\":false,\"maxUid\":16}', null, '1', '2017-11-09 16:40:13', '1', '2017-11-09 17:43:48', '0');
INSERT INTO `page` VALUES ('300', 'table', '{\"children\":[{\"children\":[{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input1\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":380,\"pid\":379,\"initScript\":false},{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input2\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"value\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'value\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            ref: \'model\',\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":381,\"pid\":379,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":379,\"pid\":375,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"6\",\"name\":\"Button\",\"nickname\":\"Button\",\"type\":\"Button\",\"template\":\"`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\n\",\"desc\":\"按钮\",\"allow\":null,\"model\":{\"name\":{\"type\":\"text\",\"compileType\":\"innerHTML\",\"value\":\"提交\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"},\"type\":{\"type\":\"text\",\"value\":\"primary\",\"desc\":\"type of button\"}},\"script\":\"function () {\\r\\n   \\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'6\'\\r\\nexports.name = \'Button\';\\r\\nexports.nickname = \'Button\';\\r\\nexports.type = \'Button\';\\r\\nexports.template=`\\r\\n<Button{model}>{innerHTML}</Button>\\r\\n`\\r\\nexports.desc = \'按钮\';\\r\\nexports.allow = null;\\r\\nexports.model = {\\r\\n  name:{\\r\\n       type: \'text\',\\r\\n       compileType:\'innerHTML\',\\r\\n       value: \'提交\',\\r\\n       desc: \'\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  },\\r\\n  type: {\\r\\n    type: \'text\',\\r\\n    value: \'primary\',\\r\\n    desc: \'type of button\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n   \\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n \\r\\n  \\r\\n  if(!context.initScript){\\r\\n      context.initScript=true  \\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this,\\r\\n      innerHTML: context.model.name.value\\r\\n    },\\r\\n    directives:[\\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Button\'\\r\\n        }\\r\\n    ],\\r\\n    on:{\\r\\n      click(e){\\r\\n          \\r\\n        createElement.eventCenter.trigger(\'submit-form\',{\\r\\n            from:context.uid,\\r\\n            data:\'\'\\r\\n        })\\r\\n      }  \\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":3,\"uid\":386,\"pid\":385,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":385,\"pid\":375,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":375,\"pid\":371,\"initScript\":false}],\"cid\":\"3\",\"name\":\"Form\",\"nickname\":\"Form\",\"type\":\"Form\",\"template\":\"`<Form{model}>{slot}</Form>`;\\r\\n\",\"desc\":\"表单\",\"allow\":[\"1\",\" 4\"],\"model\":{\"url\":{\"type\":\"text\",\"value\":\"./test/refreshTable\",\"desc\":\"请求地址\",\"name\":\"url\"},\"labelWidth\":{\"type\":\"text\",\"value\":100,\"desc\":\"表单label宽�����\",\"name\":\"labelWidth\"},\"inline\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"行内\",\"name\":\"inline\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"800px\",\"margin\":\"0 auto\",\"marginBottom\":\"20px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n    this.model.style.value = {\\r\\n        width: \'800px\',\\r\\n        margin: \'0 auto\',\\r\\n        marginBottom:\'20px\'\\r\\n    }\\r\\n    eventCenter.bind(\'submit-form\', (param) => {\\r\\n\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\\r\\n        let vm = eventCenter.createElement.vm\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n\\r\\n        refs.forEach(ref => {\\r\\n            ref.$children[0].validate(function(valid) {\\r\\n                if (!valid) pass = false\\r\\n            })\\r\\n        })\\r\\n\\r\\n        if (!pass) {\\r\\n            return void vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n\\r\\n        params.pageSize = param.pageSize\\r\\n        params.pageNum = param.pageNum\\r\\n        params.url = this.model.url.value\\r\\n        eventCenter.trigger(\'refresh-table\', {\\r\\n            data: params\\r\\n        })\\r\\n    })\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            inline: context.model.inline.value,\\r\\n            \'label-width\': context.model.labelWidth.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Form\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        }\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'3\'\\r\\nexports.name = \'Form\';\\r\\nexports.nickname = \'Form\';\\r\\nexports.type = \'Form\';\\r\\nexports.template = `<Form{model}>{slot}</Form>`;\\r\\nexports.desc = \'表单\';\\r\\nexports.allow = [1, 4];\\r\\nexports.model = {\\r\\n    url: {\\r\\n        type: \'text\',\\r\\n        value: \'./test/refreshTable\',\\r\\n        desc: \'请求地址\'\\r\\n    },\\r\\n    labelWidth: {\\r\\n        type: \'text\',\\r\\n        value: 100,\\r\\n        desc: \'表单label宽度\'\\r\\n    },\\r\\n    inline: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'���内\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {},\\r\\n        desc: \'value\'\\r\\n    },\\r\\n\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\', (param) => {\\r\\n\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\\r\\n        let vm = eventCenter.createElement.vm\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n\\r\\n        refs.forEach(ref => {\\r\\n            ref.$children[0].validate(function(valid) {\\r\\n                if (!valid) pass = false\\r\\n            })\\r\\n        })\\r\\n\\r\\n        if (!pass) {\\r\\n            return void vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n\\r\\n        params.pageSize = param.pageSize\\r\\n        params.pageNum = param.pageNum\\r\\n        params.url = this.model.url.value\\r\\n        eventCenter.trigger(\'refresh-table\', {\\r\\n            data: params\\r\\n        })\\r\\n    })\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            inline: context.model.inline.value,\\r\\n            \'label-width\': context.model.labelWidth.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Form\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        }\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":3,\"uid\":371,\"pid\":292,\"initScript\":false,\"scriptString\":\"function(eventCenter) {\\r\\n    this.model.style.value = {\\r\\n        width: \'800px\',\\r\\n        margin: \'0 auto\',\\r\\n        marginBottom:\'20px\'\\r\\n    }\\r\\n    eventCenter.bind(\'submit-form\', (param) => {\\r\\n\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\\r\\n        let vm = eventCenter.createElement.vm\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n\\r\\n        refs.forEach(ref => {\\r\\n            ref.$children[0].validate(function(valid) {\\r\\n                if (!valid) pass = false\\r\\n            })\\r\\n        })\\r\\n\\r\\n        if (!pass) {\\r\\n            return void vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n\\r\\n        params.pageSize = param.pageSize\\r\\n        params.pageNum = param.pageNum\\r\\n        params.url = this.model.url.value\\r\\n        eventCenter.trigger(\'refresh-table\', {\\r\\n            data: params\\r\\n        })\\r\\n    })\\r\\n}\"},{\"children\":[],\"cid\":\"220\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"wrapTable\",\"template\":\"`<p{model} {slotName}>{slot}{innerHTML}</p>`\\r\\n\",\"desc\":\"Content\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"columns\":{\"showConfig\":false,\"exclude\":true,\"type\":\"array\",\"value\":[],\"desc\":\"\"},\"data\":{\"showConfig\":false,\"exclude\":true,\"type\":\"array\",\"value\":[],\"desc\":\"\"},\"current\":{\"type\":\"text\",\"value\":1,\"desc\":\"\"},\"pageSize\":{\"type\":\"text\",\"value\":10,\"desc\":\"\"},\"total\":{\"type\":\"text\",\"desc\":\"\",\"value\":10},\"loading\":false},\"script\":\"function (eventCenter) {\\r\\n\\r\\n    this.model.columns.value = [{\\r\\n            title: \'name\',\\r\\n            key: \'name\'\\r\\n        },\\r\\n        {\\r\\n            title: \'age\',\\r\\n            key: \'age\'\\r\\n        },\\r\\n        {\\r\\n            title: \'gender\',\\r\\n            key: \'gender\'\\r\\n        }\\r\\n    ]\\r\\n\\r\\n\\r\\n\\r\\n    let vm = eventCenter.createElement.vm\\r\\n    eventCenter.bind(\'refresh-table\', (param) => {\\r\\n        this.model.loading = true\\r\\n        let url = param.data.url\\r\\n        delete param.data.url\\r\\n        vm.$http.post(url, param.data).then(res => {\\r\\n            if (res.data.code === 10000) {\\r\\n                this.model.loading = false\\r\\n                this.model.data.value = res.data.data\\r\\n                \\r\\n                this.model.total.value = res.data.data.length\\r\\n            }\\r\\n        })\\r\\n    })\\r\\n\\r\\n    eventCenter.trigger(\'submit-form\', {\\r\\n        from: this.uid,\\r\\n        data: {\\r\\n            pageNum: this.model.current.value,\\r\\n            pageSize: this.model.pageSize.value\\r\\n        }\\r\\n    })\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        props: {\\r\\n            current: context.model.current.value,\\r\\n            \'pageSize\': context.model.pageSize.value,\\r\\n            total: context.model.total.value,\\r\\n            \'show-total\': true,\\r\\n            \'show-elevator\': true,\\r\\n            columns: context.model.columns.value,\\r\\n            data: context.model.data.value,\\r\\n            loading: context.model.loading\\r\\n\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            \'click\': function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        on: {\\r\\n            \'on-change\': function(e) {\\r\\n                createElement.eventCenter.trigger(\'submit-form\', {\\r\\n                    from: context.uid,\\r\\n                    data: {\\r\\n                        pageNum: context.model.current.value,\\r\\n                        pageSize: context.model.pageSize.value\\r\\n                    }\\r\\n                })\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Table\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'220\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'wrapTable\';\\r\\nexports.template =\\r\\n    `<p{model} {slotName}>{slot}{innerHTML}</p>`\\r\\nexports.desc = \'Content\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    columns: {\\r\\n        showConfig: false,\\r\\n        exclude: true,\\r\\n        type: \'array\',\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    data: {\\r\\n        showConfig: false,\\r\\n        exclude: true,\\r\\n        type: \'array\',\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    current: {\\r\\n        type: \'text\',\\r\\n        value: 1,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    pageSize: {\\r\\n        type: \'text\',\\r\\n        value: 10,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    total: {\\r\\n        type: \'text\',\\r\\n        value: 100,\\r\\n        desc: \'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n    this.model.columns.value = [{\\r\\n            title: \'name\',\\r\\n            key: \'name\'\\r\\n        },\\r\\n        {\\r\\n            title: \'age\',\\r\\n            key: \'age\'\\r\\n        },\\r\\n        {\\r\\n            title: \'gender\',\\r\\n            key: \'gender\'\\r\\n        }\\r\\n    ]\\r\\n\\r\\n    \\r\\n\\r\\n    let vm = eventCenter.createElement.vm\\r\\n    eventCenter.bind(\'refresh-table\', (param) => {\\r\\n        this.model.loading = true\\r\\n        let url = param.data.url\\r\\n        delete param.data.url\\r\\n        vm.$http.post(url, param.data).then(res => {\\r\\n            if (res.data.code === 10000) {\\r\\n                this.model.loading = false\\r\\n                this.model.data.value = res.data.data\\r\\n                this.model.total.value = res.data.length\\r\\n            }\\r\\n        })\\r\\n    })\\r\\n    \\r\\n    eventCenter.trigger(\'submit-form\', {\\r\\n        from: this.uid,\\r\\n        data: {\\r\\n            pageNum: this.model.current.value,\\r\\n            pageSize: this.model.pageSize.value\\r\\n        }\\r\\n    })\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        props: {\\r\\n            current: context.model.current.value,\\r\\n            \'pageSize\': context.model.pageSize.value,\\r\\n            total: context.model.total.value,\\r\\n            \'show-total\': true,\\r\\n            \'show-elevator\': true,\\r\\n            columns: context.model.columns.value,\\r\\n            data: context.model.data.value,\\r\\n            loading: context.model.loading\\r\\n\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            \'click\': function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        on: {\\r\\n            \'on-change\': function(e) {\\r\\n                createElement.eventCenter.trigger(\'submit-form\', {\\r\\n                    from: context.uid,\\r\\n                    data: {\\r\\n                        pageNum: context.model.current.value,\\r\\n                        pageSize: context.model.pageSize.value\\r\\n                    }\\r\\n                })\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Table\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":4,\"uid\":372,\"pid\":292,\"initScript\":false,\"scriptString\":\"function(eventCenter) {\\r\\n\\r\\n    this.model.columns.value = [{\\r\\n            title: \'name\',\\r\\n            key: \'name\'\\r\\n        },\\r\\n        {\\r\\n            title: \'age\',\\r\\n            key: \'age\'\\r\\n        },\\r\\n        {\\r\\n            title: \'gender\',\\r\\n            key: \'gender\'\\r\\n        }\\r\\n    ]\\r\\n\\r\\n\\r\\n\\r\\n    let vm = eventCenter.createElement.vm\\r\\n    eventCenter.bind(\'refresh-table\', (param) => {\\r\\n        this.model.loading = true\\r\\n        let url = param.data.url\\r\\n        delete param.data.url\\r\\n        vm.$http.post(url, param.data).then(res => {\\r\\n            if (res.data.code === 10000) {\\r\\n                this.model.loading = false\\r\\n                this.model.data.value = res.data.data\\r\\n                \\r\\n                this.model.total.value = res.data.data.length\\r\\n            }\\r\\n        })\\r\\n    })\\r\\n\\r\\n    eventCenter.trigger(\'submit-form\', {\\r\\n        from: this.uid,\\r\\n        data: {\\r\\n            pageNum: this.model.current.value,\\r\\n            pageSize: this.model.pageSize.value\\r\\n        }\\r\\n    })\\r\\n}\"}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":292,\"initScript\":false,\"maxUid\":388}', null, '1', '2017-11-09 17:50:05', '1', '2017-11-09 18:31:26', '1');
INSERT INTO `page` VALUES ('301', '1', '{\"children\":[{\"children\":[{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"211\",\"name\":\"FormInput\",\"nickname\":\"FormInput\",\"type\":\"FormInput\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n\\r\\n\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'211\'\\r\\nexports.name = \'FormInput\';\\r\\nexports.nickname = \'FormInput\';\\r\\nexports.type = \'FormInput\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Input>\\r\\n        </Input>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n\\r\\n\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Input\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":11,\"pid\":7,\"initScript\":false},{\"children\":[],\"cid\":\"212\",\"name\":\"FormSelect\",\"nickname\":\"FormSelect\",\"type\":\"FormSelect\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <Select>\\r\\n        </Select>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"下拉框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[],\"desc\":\"\",\"name\":\"items\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Select\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'212\'\\r\\nexports.name = \'FormSelect\';\\r\\nexports.nickname = \'FormSelect\';\\r\\nexports.type = \'FormSelect\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <Select>\\r\\n        </Select>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'下拉框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [{\\r\\n            label: \'北京市\',\\r\\n            value: \'1\'\\r\\n        }, {\\r\\n            label: \'上海市\',\\r\\n            value: \'2\'\\r\\n        }, {\\r\\n            label: \'深圳市\',\\r\\n            value: \'3\'\\r\\n        }],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Select\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":12,\"pid\":7,\"initScript\":false},{\"children\":[],\"cid\":\"213\",\"name\":\"FormNumber\",\"nickname\":\"FormNumber\",\"type\":\"FormNumber\",\"template\":\"`\\r\\n     <FormItem>\\r\\n        <InputNumber>\\r\\n        </InputNumber>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"数字输入框\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":1,\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"max\":{\"type\":\"text\",\"value\":10,\"desc\":\"\",\"name\":\"max\"},\"min\":{\"type\":\"text\",\"value\":0,\"desc\":\"\",\"name\":\"min\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'InputNumber\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'213\'\\r\\nexports.name = \'FormNumber\';\\r\\nexports.nickname = \'FormNumber\';\\r\\nexports.type = \'FormNumber\';\\r\\nexports.template =\\r\\n    `\\r\\n     <FormItem>\\r\\n        <InputNumber>\\r\\n        </InputNumber>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'数字输入框\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: 0,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    max: {\\r\\n        type: \'text\',\\r\\n        value: 10,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    min: {\\r\\n        type: \'text\',\\r\\n        value: 0,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'InputNumber\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":13,\"pid\":7,\"initScript\":false},{\"children\":[],\"cid\":\"214\",\"name\":\"FormDate\",\"nickname\":\"FormDate\",\"type\":\"FormDate\",\"template\":\"`\\r\\n   <FormItem>\\r\\n        <DatePicker>\\r\\n        </DatePicker>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"date\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":0,\"desc\":\"\",\"name\":\"value\"},\"type\":{\"type\":\"text\",\"value\":\"datetime\",\"desc\":\"\",\"name\":\"type\"},\"format\":{\"type\":\"text\",\"value\":\"yyyy-MM-dd HH:mm:ss\",\"desc\":\"\",\"name\":\"format\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'DatePicker\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'214\'\\r\\nexports.name = \'FormDate\';\\r\\nexports.nickname = \'FormDate\';\\r\\nexports.type = \'FormDate\';\\r\\nexports.template =\\r\\n    `\\r\\n   <FormItem>\\r\\n        <DatePicker>\\r\\n        </DatePicker>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'date\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: 0,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    type: {\\r\\n        type: \'text\',\\r\\n        value: \'datetime\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    format: {\\r\\n        type: \'text\',\\r\\n        value: \'yyyy-MM-dd HH:mm:ss\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'DatePicker\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":14,\"pid\":7,\"initScript\":false},{\"children\":[],\"cid\":\"215\",\"name\":\"FormUpload\",\"nickname\":\"FormUpload\",\"type\":\"FormUpload\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Upload>\\r\\n        </Upload>\\r\\n    </FormItem>\\r\\n`\\r\\n\",\"desc\":\"upload\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"uploadUrl\":{\"type\":\"text\",\"value\":\"/esview/file/upload_file\",\"desc\":\"\",\"name\":\"uploadUrl\"},\"value\":{\"type\":\"array\",\"value\":[],\"desc\":\"\",\"name\":\"value\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\",\"name\":\"label\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\",\"name\":\"prop\"},\"required\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"value\",\"name\":\"required\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Upload\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'215\'\\r\\nexports.name = \'FormUpload\';\\r\\nexports.nickname = \'FormUpload\';\\r\\nexports.type = \'FormUpload\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Upload>\\r\\n        </Upload>\\r\\n    </FormItem>\\r\\n`\\r\\nexports.desc = \'upload\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    uploadUrl: {\\r\\n        type: \'text\',\\r\\n        value: \'/esview/file/upload_file\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'array\',\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Upload\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":15,\"pid\":7,\"initScript\":false},{\"children\":[],\"cid\":\"218\",\"name\":\"FormCheckbox\",\"nickname\":\"FormCheckbox\",\"type\":\"FormCheckbox\",\"template\":\"`\\r\\n    <FormItem>\\r\\n        <Checkbox>\\r\\n        </Checkbox>\\r\\n    </FormItem>\\r\\n\\r\\n`\\r\\n\",\"desc\":\"FormCheckbox\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"items\":{\"exclude\":true,\"type\":\"json\",\"value\":[{\"label\":\"github\",\"value\":\"1\"},{\"label\":\"facebook\",\"value\":\"2\"},{\"label\":\"microsoft\",\"value\":\"3\"}],\"desc\":\"\"},\"value\":{\"type\":\"text\",\"showConfig\":false,\"value\":[1],\"desc\":\"\"},\"label\":{\"type\":\"text\",\"value\":\"input\",\"desc\":\"\"},\"prop\":{\"type\":\"text\",\"showConfig\":false,\"value\":\"\",\"desc\":\"\"},\"required\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"width\":\"300px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Checkbox\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'218\'\\r\\nexports.name = \'FormCheckbox\';\\r\\nexports.nickname = \'FormCheckbox\';\\r\\nexports.type = \'FormCheckbox\';\\r\\nexports.template =\\r\\n    `\\r\\n    <FormItem>\\r\\n        <Checkbox>\\r\\n        </Checkbox>\\r\\n    </FormItem>\\r\\n\\r\\n`\\r\\nexports.desc = \'FormCheckbox\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    items: {\\r\\n        exclude: true,\\r\\n        type: \'json\',\\r\\n        value: [\\r\\n            {\\r\\n                label: \'github\',\\r\\n                value: \'1\'\\r\\n            }, {\\r\\n                label: \'facebook\',\\r\\n                value: \'2\'\\r\\n            }, {\\r\\n                label: \'microsoft\',\\r\\n                value: \'3\'\\r\\n            }\\r\\n        ],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: [1],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    label: {\\r\\n        type: \'text\',\\r\\n        value: \'input\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    prop: {\\r\\n        type: \'text\',\\r\\n        showConfig: false,\\r\\n        value: \'\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    required: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            width: \'300px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        ref: \'formItem\' + context.uid,\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Checkbox\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":3,\"uid\":27,\"pid\":7,\"initScript\":false}],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template= `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n  span: {\\r\\n    type: \'text\',\\r\\n    value: \'12\',\\r\\n    desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n  },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n       desc: \'value\'\\r\\n  }  \\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n   \\r\\n  if(!context.initScript){\\r\\n     context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props: {\\r\\n      \'span\': context.model.span.value\\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value: \'Col\'\\r\\n        }  \\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":2,\"uid\":7,\"pid\":6,\"initScript\":false,\"scriptString\":\"function (eventCenter,appStore) {\\r\\n    const context = this\\r\\n}\"}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":6,\"pid\":5,\"initScript\":false}],\"cid\":\"3\",\"name\":\"Form\",\"nickname\":\"Form\",\"type\":\"Form\",\"template\":\"`<Form{model}>{slot}</Form>`;\\r\\n\",\"desc\":\"表单\",\"allow\":[\"1\",\" 4\"],\"model\":{\"url\":{\"type\":\"text\",\"value\":\"./test/refreshTable\",\"desc\":\"请求地址\",\"name\":\"url\"},\"labelWidth\":{\"type\":\"text\",\"value\":100,\"desc\":\"表单label宽度\",\"name\":\"labelWidth\"},\"inline\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"行内\",\"name\":\"inline\"},\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\', (param) => {\\r\\n\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\\r\\n        let vm = eventCenter.createElement.vm\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n\\r\\n        refs.forEach(ref => {\\r\\n            ref.$children[0].validate(function(valid) {\\r\\n                if (!valid) pass = false\\r\\n            })\\r\\n        })\\r\\n\\r\\n        if (!pass) {\\r\\n            return void vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n\\r\\n        params.pageSize = param.pageSize\\r\\n        params.pageNum = param.pageNum\\r\\n        params.url = this.model.url.value\\r\\n        eventCenter.trigger(\'refresh-table\', {\\r\\n            data: params\\r\\n        })\\r\\n    })\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            inline: context.model.inline.value,\\r\\n            \'label-width\': context.model.labelWidth.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Form\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        }\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'3\'\\r\\nexports.name = \'Form\';\\r\\nexports.nickname = \'Form\';\\r\\nexports.type = \'Form\';\\r\\nexports.template = `<Form{model}>{slot}</Form>`;\\r\\nexports.desc = \'表单\';\\r\\nexports.allow = [1, 4];\\r\\nexports.model = {\\r\\n    url: {\\r\\n        type: \'text\',\\r\\n        value: \'./test/refreshTable\',\\r\\n        desc: \'请求地址\'\\r\\n    },\\r\\n    labelWidth: {\\r\\n        type: \'text\',\\r\\n        value: 100,\\r\\n        desc: \'表单label宽度\'\\r\\n    },\\r\\n    inline: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'行内\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {},\\r\\n        desc: \'value\'\\r\\n    },\\r\\n\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n    eventCenter.bind(\'submit-form\', (param) => {\\r\\n\\r\\n        let params = eventCenter.createElement.$util.getFormItemParams(this)\\r\\n        let refs = eventCenter.createElement.$util.refs(eventCenter.createElement.vm, \'formItem\')\\r\\n        let vm = eventCenter.createElement.vm\\r\\n        console.log(params)\\r\\n        let pass = true\\r\\n\\r\\n        refs.forEach(ref => {\\r\\n            ref.$children[0].validate(function(valid) {\\r\\n                if (!valid) pass = false\\r\\n            })\\r\\n        })\\r\\n\\r\\n        if (!pass) {\\r\\n            return void vm.$Message.warning(\'please pass validation\')\\r\\n        }\\r\\n\\r\\n        params.pageSize = param.pageSize\\r\\n        params.pageNum = param.pageNum\\r\\n        params.url = this.model.url.value\\r\\n        eventCenter.trigger(\'refresh-table\', {\\r\\n            data: params\\r\\n        })\\r\\n    })\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            inline: context.model.inline.value,\\r\\n            \'label-width\': context.model.labelWidth.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Form\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        }\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":3,\"uid\":5,\"pid\":2,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"���拽安��面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":2,\"initScript\":false,\"maxUid\":28}', null, '1', '2017-11-10 09:43:11', '1', '2017-11-10 10:14:57', '0');
INSERT INTO `page` VALUES ('302', 'Card', '{\"children\":[{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"218\",\"name\":\"Content\",\"nickname\":\"Content\",\"type\":\"p\",\"template\":\"`<p{model} {slotName}>{slot}{innerHTML}</p>`\\r\\n\",\"desc\":\"Content\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"this is head\",\"desc\":\"\",\"name\":\"value\"},\"style\":{\"type\":\"json\",\"value\":{\"minHeight\":\"10px\"},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            innerHTML: context.model.value.value,\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Content\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'218\'\\r\\nexports.name = \'Content\';\\r\\nexports.nickname = \'Content\';\\r\\nexports.type = \'p\';\\r\\nexports.template =\\r\\n    `<p{model} {slotName}>{slot}{innerHTML}</p>`\\r\\nexports.desc = \'Content\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'this is content\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            minHeight: \'10px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            innerHTML: context.model.value.value,\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Content\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":4,\"uid\":394,\"pid\":391,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"title\",\"uid\":391,\"showSlot\":true,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"46\",\"name\":\"Icon\",\"nickname\":\"Icon\",\"type\":\"Icon\",\"template\":\"`<Icon{model}></Icon>`\\r\\n\",\"desc\":\"Icon\",\"allow\":[],\"model\":{\"type\":{\"type\":\"select\",\"value\":\"refresh\",\"desc\":\"\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"code\":\"exports.cid = \'46\'\\r\\nexports.name = \'Icon\';\\r\\nexports.nickname = \'Icon\';\\r\\nexports.type = \'Icon\';\\r\\nexports.template= `<Icon{model}></Icon>`\\r\\nexports.desc = \'Icon\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    type:{\\r\\n      type:\'select\',\\r\\n      value:\'refresh\',\\r\\n      desc:\'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n  }\\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n            name:\'editable\',\\r\\n            value:\'Icon\'\\r\\n        }\\r\\n    ],\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  })\\r\\n}\",\"clazzId\":4,\"uid\":395,\"pid\":392,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"extra\",\"uid\":392,\"showSlot\":true,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"218\",\"name\":\"Content\",\"nickname\":\"Content\",\"type\":\"p\",\"template\":\"`<p{model} {slotName}>{slot}{innerHTML}</p>`\\r\\n\",\"desc\":\"Content\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"value\":{\"type\":\"text\",\"value\":\"this is content\",\"desc\":\"\"},\"style\":{\"type\":\"json\",\"value\":{\"minHeight\":\"10px\"},\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            innerHTML: context.model.value.value,\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Content\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'218\'\\r\\nexports.name = \'Content\';\\r\\nexports.nickname = \'Content\';\\r\\nexports.type = \'p\';\\r\\nexports.template =\\r\\n    `<p{model} {slotName}>{slot}{innerHTML}</p>`\\r\\nexports.desc = \'Content\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    value: {\\r\\n        type: \'text\',\\r\\n        value: \'this is content\',\\r\\n        desc: \'\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: {\\r\\n            minHeight: \'10px\'\\r\\n        },\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            soul: context\\r\\n        },\\r\\n        domProps: {\\r\\n            innerHTML: context.model.value.value,\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Content\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":4,\"uid\":396,\"pid\":393,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"slotName\":\"default\",\"uid\":393,\"showSlot\":false,\"initScript\":false}],\"cid\":\"15\",\"name\":\"Card\",\"nickname\":\"Card\",\"type\":\"WrapCard\",\"template\":\"`<Card{model}>{slot}</Card>`\\r\\n\",\"desc\":\"Card\",\"allow\":[],\"model\":{\"showHead\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"\",\"name\":\"showHead\"},\"showExtra\":{\"type\":\"boolean\",\"value\":true,\"desc\":\"\",\"name\":\"showExtra\"},\"showBody\":{\"type\":\"boolean\",\"exclude\":true,\"showConfig\":false,\"value\":false,\"desc\":\"\",\"name\":\"showBody\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"},\"disHover\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"禁用鼠标悬停显示阴影\",\"name\":\"disHover\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n    const dropTitle = context.children[0]\\r\\n    const dropExtra = context.children[1]\\r\\n    const dropBody = context.children[2]\\r\\n    dropTitle.showSlot = context.model.showHead.value\\r\\n    dropExtra.showSlot = context.model.showExtra.value\\r\\n    dropBody.showSlot = context.model.showBody.value\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            showHead: context.model.showHead.value,\\r\\n            showExtra: context.model.showExtra.value,\\r\\n            disHover: context.model.disHover.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Card\'\\r\\n        }],\\r\\n        scopedSlots: {\\r\\n            \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n            \'extra\': () => context.model.showExtra.value && dropExtra.render(createElement),\\r\\n            \'body\': () => dropBody.render(createElement)\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'15\'\\r\\nexports.name = \'Card\';\\r\\nexports.nickname = \'Card\';\\r\\nexports.type = \'WrapCard\';\\r\\nexports.template = `<Card{model}>{slot}</Card>`\\r\\nexports.desc = \'Card\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    showHead: {\\r\\n        type: \'boolean\',\\r\\n\\r\\n        value: false,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    showExtra: {\\r\\n        type: \'boolean\',\\r\\n\\r\\n        value: false,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    showBody: {\\r\\n        type: \'boolean\',\\r\\n        exclude: true,\\r\\n        showConfig: false,\\r\\n        value: false,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: \'\',\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    disHover: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'禁用鼠标悬停显示阴影\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function() {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n    const dropTitle = context.children[0]\\r\\n    const dropExtra = context.children[1]\\r\\n    const dropBody = context.children[2]\\r\\n    dropTitle.showSlot = context.model.showHead.value\\r\\n    dropExtra.showSlot = context.model.showExtra.value\\r\\n    dropBody.showSlot = context.model.showBody.value\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            showHead: context.model.showHead.value,\\r\\n            showExtra: context.model.showExtra.value,\\r\\n            disHover: context.model.disHover.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Card\'\\r\\n        }],\\r\\n        scopedSlots: {\\r\\n            \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n            \'extra\': () => context.model.showExtra.value && dropExtra.render(createElement),\\r\\n            \'body\': () => dropBody.render(createElement)\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n};\",\"clazzId\":2,\"uid\":390,\"pid\":389,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":389,\"initScript\":false,\"maxUid\":397}', null, '1', '2017-11-10 12:48:19', '1', '2017-11-10 12:48:19', '1');
INSERT INTO `page` VALUES ('303', '111', '{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":3,\"initScript\":false,\"maxUid\":4}', null, '33', '2017-11-10 14:04:33', '33', '2017-11-10 14:04:38', '0');
INSERT INTO `page` VALUES ('304', '77', '{\"children\":[{\"children\":[{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":9,\"slotName\":\"title\",\"showSlot\":false,\"initScript\":false},{\"children\":[],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":10,\"slotName\":\"extra\",\"showSlot\":false,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter, appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template = `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    span: {\\r\\n        type: \'text\',\\r\\n        value: \'12\',\\r\\n        desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function(eventCenter, appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":2,\"uid\":13,\"pid\":11,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":11,\"slotName\":\"default\",\"showSlot\":false,\"initScript\":false}],\"cid\":\"15\",\"name\":\"Card\",\"nickname\":\"Card\",\"type\":\"WrapCard\",\"template\":\"`<Card{model}>{slot}</Card>`\\r\\n\",\"desc\":\"Card\",\"allow\":[],\"model\":{\"showHead\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"\"},\"showExtra\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"\"},\"showBody\":{\"type\":\"boolean\",\"exclude\":true,\"showConfig\":false,\"value\":false,\"desc\":\"\"},\"style\":{\"type\":\"json\",\"value\":\"\",\"desc\":\"value\"},\"disHover\":{\"type\":\"boolean\",\"value\":false,\"desc\":\"禁用鼠标悬停显示阴影\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n    const dropTitle = context.children[0]\\r\\n    const dropExtra = context.children[1]\\r\\n    const dropBody = context.children[2]\\r\\n    dropTitle.showSlot = context.model.showHead.value\\r\\n    dropExtra.showSlot = context.model.showExtra.value\\r\\n    dropBody.showSlot = context.model.showBody.value\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            showHead: context.model.showHead.value,\\r\\n            showExtra: context.model.showExtra.value,\\r\\n            disHover: context.model.disHover.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Card\'\\r\\n        }],\\r\\n        scopedSlots: {\\r\\n            \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n            \'extra\': () => context.model.showExtra.value && dropExtra.render(createElement),\\r\\n            \'body\': () => dropBody.render(createElement)\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'15\'\\r\\nexports.name = \'Card\';\\r\\nexports.nickname = \'Card\';\\r\\nexports.type = \'WrapCard\';\\r\\nexports.template = `<Card{model}>{slot}</Card>`\\r\\nexports.desc = \'Card\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    showHead: {\\r\\n        type: \'boolean\',\\r\\n\\r\\n        value: false,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    showExtra: {\\r\\n        type: \'boolean\',\\r\\n\\r\\n        value: false,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    showBody: {\\r\\n        type: \'boolean\',\\r\\n        exclude: true,\\r\\n        showConfig: false,\\r\\n        value: false,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value: \'\',\\r\\n        desc: \'value\'\\r\\n    },\\r\\n    disHover: {\\r\\n        type: \'boolean\',\\r\\n        value: false,\\r\\n        desc: \'禁用鼠标悬停显示阴影\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function() {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n    const dropTitle = context.children[0]\\r\\n    const dropExtra = context.children[1]\\r\\n    const dropBody = context.children[2]\\r\\n    dropTitle.showSlot = context.model.showHead.value\\r\\n    dropExtra.showSlot = context.model.showExtra.value\\r\\n    dropBody.showSlot = context.model.showBody.value\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            showHead: context.model.showHead.value,\\r\\n            showExtra: context.model.showExtra.value,\\r\\n            disHover: context.model.disHover.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Card\'\\r\\n        }],\\r\\n        scopedSlots: {\\r\\n            \'title\': () => context.model.showHead.value && dropTitle.render(createElement),\\r\\n            \'extra\': () => context.model.showExtra.value && dropExtra.render(createElement),\\r\\n            \'body\': () => dropBody.render(createElement)\\r\\n        },\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n};\",\"clazzId\":2,\"uid\":8,\"pid\":7,\"initScript\":false},{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":\"12\",\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter, appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template = `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    span: {\\r\\n        type: \'text\',\\r\\n        value: \'12\',\\r\\n        desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function(eventCenter, appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":2,\"uid\":12,\"pid\":7,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":7,\"initScript\":false,\"maxUid\":14}', null, '33', '2017-11-10 14:34:00', '33', '2017-11-10 14:34:23', '0');
INSERT INTO `page` VALUES ('305', '审批表', '{\"children\":[{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\",\"name\":\"type\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":401,\"pid\":391,\"initScript\":false},{\"children\":[{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":4,\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter, appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template = `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    span: {\\r\\n        type: \'text\',\\r\\n        value: \'12\',\\r\\n        desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function(eventCenter, appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":2,\"uid\":406,\"pid\":402,\"initScript\":false,\"scriptString\":\"function (eventCenter, appStore) {\\r\\n    const context = this\\r\\n}\"},{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":4,\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter, appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template = `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    span: {\\r\\n        type: \'text\',\\r\\n        value: \'12\',\\r\\n        desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function(eventCenter, appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":2,\"uid\":407,\"pid\":402,\"initScript\":false},{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":4,\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter, appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template = `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    span: {\\r\\n        type: \'text\',\\r\\n        value: \'12\',\\r\\n        desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function(eventCenter, appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":2,\"uid\":408,\"pid\":402,\"initScript\":false},{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":4,\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter, appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template = `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    span: {\\r\\n        type: \'text\',\\r\\n        value: \'12\',\\r\\n        desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function(eventCenter, appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":2,\"uid\":409,\"pid\":402,\"initScript\":false},{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":4,\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter, appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template = `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    span: {\\r\\n        type: \'text\',\\r\\n        value: \'12\',\\r\\n        desc: \'12,12代表两个50%的栅栏，8,8,8是三个\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function(eventCenter, appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":2,\"uid\":410,\"pid\":402,\"initScript\":false},{\"children\":[],\"cid\":\"2\",\"name\":\"Col\",\"nickname\":\"Col\",\"type\":\"Col\",\"template\":\"`<Col{model}>{slot}</Col>`\\r\\n\",\"desc\":\"栅栏Col\",\"allow\":[],\"model\":{\"span\":{\"type\":\"text\",\"value\":4,\"desc\":\"12,12代表两个50%的栅栏，8,8,8是三个\",\"name\":\"span\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter, appStore) {\\r\\n    const context = this\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"code\":\"exports.cid = \'2\'\\r\\nexports.name = \'Col\';\\r\\nexports.nickname = \'Col\';\\r\\nexports.type = \'Col\';\\r\\nexports.template = `<Col{model}>{slot}</Col>`\\r\\nexports.desc = \'栅栏Col\';\\r\\nexports.allow = [];\\r\\nexports.model = {\\r\\n    span: {\\r\\n        type: \'text\',\\r\\n        value: \'12\',\\r\\n        desc: \'12,12��表两个50%的栅栏，8,8,8是三个\'\\r\\n    },\\r\\n    style: {\\r\\n        type: \'text\',\\r\\n        value: \'\',\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\n\\r\\nexports.script = function(eventCenter, appStore) {\\r\\n    const context = this\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    console.log(this.children)\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n        style: context.model.style.value,\\r\\n        props: {\\r\\n            \'span\': context.model.span.value\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        directives: [{\\r\\n                name: \'droppable\'\\r\\n            },\\r\\n            {\\r\\n                name: \'editable\',\\r\\n                value: \'Col\'\\r\\n            }\\r\\n        ],\\r\\n        nativeOn: {\\r\\n            click: function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n    }, context.children.map(function(child) {\\r\\n        return child.render(createElement)\\r\\n    }))\\r\\n}\",\"clazzId\":2,\"uid\":411,\"pid\":402,\"initScript\":false}],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\",\"name\":\"type\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\",\"name\":\"style\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":402,\"pid\":391,\"initScript\":false},{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":403,\"pid\":391,\"initScript\":false},{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":404,\"pid\":391,\"initScript\":false},{\"children\":[],\"cid\":\"1\",\"name\":\"Row\",\"nickname\":\"Row\",\"type\":\"Row\",\"template\":\"`<Row{model}>{slot}</Row>`\\r\\n\",\"desc\":\"栅栏Row\",\"allow\":[\"2\"],\"model\":{\"type\":{\"type\":\"text\",\"value\":\"flex\",\"desc\":\"\"},\"style\":{\"type\":\"text\",\"value\":\"\",\"desc\":\"value\"}},\"script\":\"function (eventCenter) {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'1\'\\r\\nexports.name = \'Row\';\\r\\nexports.nickname = \'Row\';\\r\\nexports.type = \'Row\';\\r\\nexports.template= `<Row{model}>{slot}</Row>`\\r\\nexports.desc = \'栅栏Row\';\\r\\nexports.allow = [2];\\r\\nexports.model = {\\r\\n   type:{\\r\\n        type:\'text\',\\r\\n        value:\'flex\',\\r\\n        desc:\'\'\\r\\n   },\\r\\n  style: {\\r\\n    type: \'text\',\\r\\n    value: \'\',\\r\\n    desc: \'value\'\\r\\n  }\\r\\n};\\r\\n\\r\\nexports.script = function (eventCenter) {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n    const eventCenter = createElement.eventCenter\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n      context.script(eventCenter)\\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(context.type, {\\r\\n    style:context.model.style.value,\\r\\n    props:{\\r\\n      type:context.model.type.value  \\r\\n    },\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n   \\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        },\\r\\n        {\\r\\n           name: \'editable\',\\r\\n           value:\'Row\'\\r\\n        }\\r\\n    ],\\r\\n    \\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n         \\r\\n        store.commit(\'dragModule/showEditorPanel\', e)\\r\\n      }\\r\\n    },\\r\\n  }, context.children.map(function (child) {\\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n};\",\"clazzId\":2,\"uid\":405,\"pid\":391,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":391,\"initScript\":false,\"maxUid\":413}', null, '33', '2017-11-10 15:39:26', '33', '2017-11-10 16:20:05', '1');
INSERT INTO `page` VALUES ('306', 'hello shuai', '{\"children\":[{\"children\":[],\"cid\":\"220\",\"name\":\"Table\",\"nickname\":\"Table\",\"type\":\"wrapTable\",\"template\":\"`<Table{model} {slotName}></Table>`\\r\\n\",\"desc\":\"Content\",\"allow\":null,\"isFormItem\":\"true;\\r\\n\",\"model\":{\"columns\":{\"showConfig\":false,\"exclude\":true,\"type\":\"array\",\"value\":[{\"title\":\"name\",\"key\":\"name\"},{\"title\":\"age\",\"key\":\"age\"},{\"title\":\"gender\",\"key\":\"gender\"}],\"desc\":\"\"},\"data\":{\"showConfig\":false,\"exclude\":true,\"dontSave\":true,\"type\":\"array\",\"value\":[],\"desc\":\"\"},\"current\":{\"type\":\"text\",\"value\":1,\"desc\":\"\"},\"pageSize\":{\"type\":\"text\",\"value\":10,\"desc\":\"\"},\"total\":{\"type\":\"text\",\"value\":10,\"desc\":\"\"},\"loading\":false},\"script\":\"function (eventCenter) {\\r\\n\\r\\n    this.model.columns.value = [{\\r\\n            title: \'name\',\\r\\n            key: \'name\'\\r\\n        },\\r\\n        {\\r\\n            title: \'age\',\\r\\n            key: \'age\'\\r\\n        },\\r\\n        {\\r\\n            title: \'gender\',\\r\\n            key: \'gender\'\\r\\n        }\\r\\n    ]\\r\\n\\r\\n\\r\\n\\r\\n    let vm = eventCenter.createElement.vm\\r\\n    eventCenter.bind(\'refresh-table\', (param) => {\\r\\n        this.model.loading = true\\r\\n        let url = param.data.url\\r\\n        delete param.data.url\\r\\n        vm.$http.post(url, param.data).then(res => {\\r\\n            if (res.data.code === 10000) {\\r\\n                this.model.loading = false\\r\\n                this.model.data.value = res.data.data\\r\\n                this.model.total.value = res.data.data.length\\r\\n            }\\r\\n        })\\r\\n    })\\r\\n\\r\\n    eventCenter.trigger(\'submit-form\', {\\r\\n        from: this.uid,\\r\\n        data: {\\r\\n            pageNum: this.model.current.value,\\r\\n            pageSize: this.model.pageSize.value\\r\\n        }\\r\\n    })\\r\\n}\",\"render\":\"function (createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        props: {\\r\\n            current: context.model.current.value,\\r\\n            \'pageSize\': context.model.pageSize.value,\\r\\n            total: context.model.total.value,\\r\\n            \'show-total\': true,\\r\\n            \'show-elevator\': true,\\r\\n            columns: context.model.columns.value,\\r\\n            data: context.model.data.value,\\r\\n            loading: context.model.loading\\r\\n\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            \'click\': function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        on: {\\r\\n            \'on-change\': function(e) {\\r\\n                createElement.eventCenter.trigger(\'submit-form\', {\\r\\n                    from: context.uid,\\r\\n                    data: {\\r\\n                        pageNum: context.model.current.value,\\r\\n                        pageSize: context.model.pageSize.value\\r\\n                    }\\r\\n                })\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Table\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"code\":\"exports.cid = \'220\'\\r\\nexports.name = \'Table\';\\r\\nexports.nickname = \'Table\';\\r\\nexports.type = \'wrapTable\';\\r\\nexports.template =\\r\\n    `<Table{model} {slotName}></Table>`\\r\\nexports.desc = \'Content\';\\r\\nexports.allow = null;\\r\\nexports.isFormItem = true;\\r\\nexports.model = {\\r\\n    columns: {\\r\\n        showConfig: false,\\r\\n        exclude: true,\\r\\n        type: \'array\',\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    data: {\\r\\n        showConfig: false,\\r\\n        exclude: true,\\r\\n        dontSave: true,\\r\\n        type: \'array\',\\r\\n        value: [],\\r\\n        desc: \'\'\\r\\n    },\\r\\n    current: {\\r\\n        type: \'text\',\\r\\n        value: 1,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    pageSize: {\\r\\n        type: \'text\',\\r\\n        value: 10,\\r\\n        desc: \'\'\\r\\n    },\\r\\n    total: {\\r\\n        type: \'text\',\\r\\n        value: 100,\\r\\n        desc: \'\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function(eventCenter) {\\r\\n\\r\\n    this.model.columns.value = [{\\r\\n            title: \'name\',\\r\\n            key: \'name\'\\r\\n        },\\r\\n        {\\r\\n            title: \'age\',\\r\\n            key: \'age\'\\r\\n        },\\r\\n        {\\r\\n            title: \'gender\',\\r\\n            key: \'gender\'\\r\\n        }\\r\\n    ]\\r\\n\\r\\n\\r\\n\\r\\n    let vm = eventCenter.createElement.vm\\r\\n    eventCenter.bind(\'refresh-table\', (param) => {\\r\\n        this.model.loading = true\\r\\n        let url = param.data.url\\r\\n        delete param.data.url\\r\\n        vm.$http.post(url, param.data).then(res => {\\r\\n            if (res.data.code === 10000) {\\r\\n                this.model.loading = false\\r\\n                this.model.data.value = res.data.data\\r\\n                this.model.total.value = res.data.data.length\\r\\n            }\\r\\n        })\\r\\n    })\\r\\n\\r\\n    eventCenter.trigger(\'submit-form\', {\\r\\n        from: this.uid,\\r\\n        data: {\\r\\n            pageNum: this.model.current.value,\\r\\n            pageSize: this.model.pageSize.value\\r\\n        }\\r\\n    })\\r\\n};\\r\\n\\r\\nexports.render = function(createElement) {\\r\\n    const context = this\\r\\n    const store = createElement.store\\r\\n\\r\\n    if (!context.initScript) {\\r\\n        context.initScript = true\\r\\n        context.script(createElement.eventCenter)\\r\\n    }\\r\\n\\r\\n    return createElement(context.type, {\\r\\n\\r\\n        props: {\\r\\n            current: context.model.current.value,\\r\\n            \'pageSize\': context.model.pageSize.value,\\r\\n            total: context.model.total.value,\\r\\n            \'show-total\': true,\\r\\n            \'show-elevator\': true,\\r\\n            columns: context.model.columns.value,\\r\\n            data: context.model.data.value,\\r\\n            loading: context.model.loading\\r\\n\\r\\n        },\\r\\n        domProps: {\\r\\n            controlConfig: this\\r\\n        },\\r\\n        nativeOn: {\\r\\n            \'click\': function(e) {\\r\\n                store.commit(\'dragModule/showEditorPanel\', e)\\r\\n            }\\r\\n        },\\r\\n        on: {\\r\\n            \'on-change\': function(e) {\\r\\n                createElement.eventCenter.trigger(\'submit-form\', {\\r\\n                    from: context.uid,\\r\\n                    data: {\\r\\n                        pageNum: context.model.current.value,\\r\\n                        pageSize: context.model.pageSize.value\\r\\n                    }\\r\\n                })\\r\\n            }\\r\\n        },\\r\\n        directives: [{\\r\\n            name: \'editable\',\\r\\n            value: \'Table\'\\r\\n        }]\\r\\n    })\\r\\n}\",\"clazzId\":4,\"uid\":392,\"pid\":391,\"initScript\":false}],\"cid\":\"100\",\"name\":\"DropPanel\",\"nickname\":\"DropPanel\",\"type\":\"Div\",\"template\":\"`<Div{model} {slotName}>{slot}</Div>`\\r\\n\",\"desc\":\"拖拽安置面板\",\"allow\":[],\"model\":{\"style\":{\"type\":\"json\",\"value\":{},\"desc\":\"value\"}},\"script\":\"function () {\\r\\n\\r\\n}\",\"render\":\"function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"code\":\"exports.cid = \'100\'\\r\\nexports.name = \'DropPanel\';\\r\\nexports.nickname = \'DropPanel\';\\r\\nexports.type = \'Div\';\\r\\nexports.template=`\\r\\n<div{model}>{slot}</div>\\r\\n`\\r\\nexports.desc = \'拖拽安置面板\';\\r\\nexports.allow = [];\\r\\nexports.template= `<Div{model} {slotName}>{slot}</Div>`\\r\\nexports.model = {\\r\\n    style: {\\r\\n        type: \'json\',\\r\\n        value:{},\\r\\n        desc: \'value\'\\r\\n    }\\r\\n};\\r\\n\\r\\nexports.script = function () {\\r\\n\\r\\n};\\r\\n\\r\\nexports.render = function (createElement) {\\r\\n  const context = this\\r\\n  const store = createElement.store\\r\\n\\r\\n  \\r\\n   if(!context.initScript){\\r\\n      context.initScript=true\\r\\n   \\r\\n  }\\r\\n  \\r\\n  \\r\\n  return createElement(\'Div\', {\\r\\n    style:context.model.style.value,\\r\\n    domProps: {\\r\\n      controlConfig: this\\r\\n    },\\r\\n    directives: [ \\r\\n        {\\r\\n           name: \'droppable\'\\r\\n        }\\r\\n    ],\\r\\n    \'class\': {\\r\\n      \'soul-drop-panel\': true\\r\\n    },\\r\\n    nativeOn: {\\r\\n      click: function (e) {\\r\\n        store.commit(\'dragModule/clear\', e)\\r\\n      }\\r\\n    }\\r\\n  }, context.children.map(function (child) {\\r\\n      \\r\\n    return child.render(createElement)\\r\\n  }))\\r\\n}\",\"clazzId\":6,\"uid\":391,\"initScript\":false,\"maxUid\":393}', null, '33', '2017-11-10 18:42:12', '33', '2017-11-10 18:42:12', '0');

-- ----------------------------
-- Table structure for resource
-- ----------------------------
DROP TABLE IF EXISTS `resource`;
CREATE TABLE `resource` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `type` tinyint(2) DEFAULT NULL COMMENT '1:菜单，2:接口按钮',
  `pid` bigint(20) DEFAULT NULL,
  `name` varchar(30) DEFAULT NULL,
  `description` varchar(30) DEFAULT NULL,
  `url` varchar(30) DEFAULT NULL,
  `sortPriority` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of resource
-- ----------------------------

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `userName` varchar(30) DEFAULT NULL,
  `password` varchar(30) DEFAULT NULL,
  `realName` varchar(30) DEFAULT NULL,
  `phone` varchar(30) DEFAULT NULL,
  `email` varchar(30) DEFAULT NULL,
  `profession` varchar(20) DEFAULT NULL,
  `createBy` varchar(255) DEFAULT NULL,
  `createDt` datetime DEFAULT NULL,
  `updateBy` varchar(255) DEFAULT NULL,
  `updateDt` datetime DEFAULT NULL,
  `rowStatus` tinyint(2) DEFAULT '1' COMMENT '0:无效，1有效',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=189 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('1', '1', 'danjazozuesview1992', null, null, null, '1', null, null, null, null, '1');
INSERT INTO `user` VALUES ('2', '2', '2', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('3', '3', '3', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('4', '111', '1', null, null, null, '1', null, null, null, null, '1');
INSERT INTO `user` VALUES ('5', null, null, null, null, null, null, null, null, null, null, '1');
INSERT INTO `user` VALUES ('6', 'gf', 'gf', null, null, null, 'gf', null, null, null, null, '1');
INSERT INTO `user` VALUES ('7', '11', '11', null, null, null, '1111', null, null, null, null, '1');
INSERT INTO `user` VALUES ('8', 'admin', '123456', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('9', 'asdas', '123123', null, null, null, '123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('10', 'asdasd', 'asdasd', null, null, null, 'asdasd', null, null, null, null, '1');
INSERT INTO `user` VALUES ('11', 'sssssssss', 'sssssssss', null, null, null, 'sssssssss', null, null, null, null, '1');
INSERT INTO `user` VALUES ('12', 'test', 'test', null, null, null, 'test', null, null, null, null, '1');
INSERT INTO `user` VALUES ('13', 'admin1', 'admin', null, null, null, 'admin', null, null, null, null, '1');
INSERT INTO `user` VALUES ('14', '123', '123', null, null, null, '123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('15', 'qjflying', 'qj123123', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('16', 'jjb', 'jjb', null, null, null, 'jjb', null, null, null, null, '1');
INSERT INTO `user` VALUES ('17', 'jian', 'jian', null, null, null, 'jian', null, null, null, null, '1');
INSERT INTO `user` VALUES ('18', 'myoula', '111111', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('19', 'qq', 'qqqqqq', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('20', 'qqqqqq', '123456', null, null, null, 'sds', null, null, null, null, '1');
INSERT INTO `user` VALUES ('21', 'janfon', 'janfon', null, null, null, 'janfon', null, null, null, null, '1');
INSERT INTO `user` VALUES ('22', 'qqq', 'qqq', null, null, null, 'qqq', null, null, null, null, '1');
INSERT INTO `user` VALUES ('23', 'test111111', 'test111111', null, null, null, 'aaaa', null, null, null, null, '1');
INSERT INTO `user` VALUES ('24', '234admin1', '1', null, null, null, '1', null, null, null, null, '1');
INSERT INTO `user` VALUES ('25', 'laowang', '123', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('26', 'aas', '1', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('27', 'mer', '1', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('28', 'yangchongshao', 'ycd@7688256', null, null, null, 'ycdchn@163.com', null, null, null, null, '1');
INSERT INTO `user` VALUES ('29', 'vebin5', '111111', null, null, null, '1111', null, null, null, null, '1');
INSERT INTO `user` VALUES ('30', 'admin123', 'admin', null, null, null, 'test', null, null, null, null, '1');
INSERT INTO `user` VALUES ('31', '54', '5544554', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('32', 'test111', '123456', null, null, null, 'test', null, null, null, null, '1');
INSERT INTO `user` VALUES ('33', 'mumudev', '123123', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('34', 'zhunairui', '7996598', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('35', 'admins', 'admins', null, null, null, 'admins', null, null, null, null, '1');
INSERT INTO `user` VALUES ('36', 'longmore', 'longmore', null, null, null, '123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('37', 'zwqq', 'zw123456', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('38', 'abc123', 'abc123', null, null, null, '111', null, null, null, null, '1');
INSERT INTO `user` VALUES ('39', 'lyt1025', 'lyt108825', null, null, null, 'ffff', null, null, null, null, '1');
INSERT INTO `user` VALUES ('40', 'lu_sibiao@126.com', 'sibiao2012', null, null, null, 'it', null, null, null, null, '1');
INSERT INTO `user` VALUES ('41', 'zbx', 'zbx', null, null, null, 'zbx', null, null, null, null, '1');
INSERT INTO `user` VALUES ('42', 'problue', '2344648', null, null, null, 'Develop', null, null, null, null, '1');
INSERT INTO `user` VALUES ('43', 'yzb', '123456', null, null, null, 'sssss', null, null, null, null, '1');
INSERT INTO `user` VALUES ('44', '12', '12', null, null, null, '12', null, null, null, null, '1');
INSERT INTO `user` VALUES ('45', 'staugustine', '1q2w3e', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('46', 'demo', 'demo', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('47', 'abc12356', 'abc12356', null, null, null, 'abc12356', null, null, null, null, '1');
INSERT INTO `user` VALUES ('48', 'qq111', '12345', null, null, null, '1', null, null, null, null, '1');
INSERT INTO `user` VALUES ('49', 'heihei', 'tyh332726', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('50', 'qwer', '123456', null, null, null, '1', null, null, null, null, '1');
INSERT INTO `user` VALUES ('51', '434783027', '144144', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('52', 'abcde12300', 'abcde12300', null, null, null, 'abcde12300', null, null, null, null, '1');
INSERT INTO `user` VALUES ('53', 'bgdfghsdfgdsfg', 'bgdfghsdfgdsfg', null, null, null, 'bgdfghsdfgdsfg', null, null, null, null, '1');
INSERT INTO `user` VALUES ('54', '1193928271', '1193928271', null, null, null, '1193928271', null, null, null, null, '1');
INSERT INTO `user` VALUES ('55', 'dongfangx', 'dongfang168', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('56', 'chu25', '123456', null, null, null, 'work', null, null, null, null, '1');
INSERT INTO `user` VALUES ('57', 'guoxjcn', 'guoxjcn', null, null, null, 'guoxjcn', null, null, null, null, '1');
INSERT INTO `user` VALUES ('58', 'wyllgq', 'wyllgq', null, null, null, 'wyllgq', null, null, null, null, '1');
INSERT INTO `user` VALUES ('59', 'root', 'roo123', null, null, null, 'root', null, null, null, null, '1');
INSERT INTO `user` VALUES ('60', 'licanbo', 'licanbo', null, null, null, '33', null, null, null, null, '1');
INSERT INTO `user` VALUES ('61', 'Surou', 'suweigang1028', null, null, null, 'suweigang1028', null, null, null, null, '1');
INSERT INTO `user` VALUES ('62', '331617870', '331617870', null, null, null, '1', null, null, null, null, '1');
INSERT INTO `user` VALUES ('63', 'testberton', 'testberton', null, null, null, 'test', null, null, null, null, '1');
INSERT INTO `user` VALUES ('64', 'zhangsan', 'zhangsan', null, null, null, 'zhangsan', null, null, null, null, '1');
INSERT INTO `user` VALUES ('65', 'wingofsky', 'wingofsky', null, null, null, 'productown', null, null, null, null, '1');
INSERT INTO `user` VALUES ('66', 'opopop', '789789789', null, null, null, 'it', null, null, null, null, '1');
INSERT INTO `user` VALUES ('67', 'a', 'a', null, null, null, 'a', null, null, null, null, '1');
INSERT INTO `user` VALUES ('68', 'test123', '123456', null, null, null, 'fdsa', null, null, null, null, '1');
INSERT INTO `user` VALUES ('69', 'libiao', 'libiao', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('70', 'noboot', 'noboot', null, null, null, 'noboot', null, null, null, null, '1');
INSERT INTO `user` VALUES ('71', 'ab8512', '123456', null, null, null, 'fffa', null, null, null, null, '1');
INSERT INTO `user` VALUES ('72', 'frank', '123456', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('73', 'atman', 'atman', null, null, null, 'atman', null, null, null, null, '1');
INSERT INTO `user` VALUES ('74', 'uuu', '1234567890', null, null, null, '1234567890', null, null, null, null, '1');
INSERT INTO `user` VALUES ('75', 'jianghao', 'jh0706', null, null, null, 'domob', null, null, null, null, '1');
INSERT INTO `user` VALUES ('76', 'test10', '123456', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('77', 'q', 'q', null, null, null, 'q', null, null, null, null, '1');
INSERT INTO `user` VALUES ('78', 'wangduoguo', 'wdg1943', null, null, null, 'duoguo', null, null, null, null, '1');
INSERT INTO `user` VALUES ('79', 'q403060825', 'forgetme', null, null, null, 'forgetme', null, null, null, null, '1');
INSERT INTO `user` VALUES ('80', 'dd', 'dd', null, null, null, 'dd', null, null, null, null, '1');
INSERT INTO `user` VALUES ('81', 'zsl', '123456', null, null, null, 'pro', null, null, null, null, '1');
INSERT INTO `user` VALUES ('82', '454645645', '454645645', null, null, null, '454645645', null, null, null, null, '1');
INSERT INTO `user` VALUES ('83', 'f16a18', '625859367', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('84', 'admin1122', 'admin', null, null, null, 'admin', null, null, null, null, '1');
INSERT INTO `user` VALUES ('85', 'a123123', 'a123123', null, null, null, 'a123123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('86', 'wjw', 'wjw123', null, null, null, 'wjw', null, null, null, null, '1');
INSERT INTO `user` VALUES ('87', 'hashkey', '140416', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('88', 'pgc88', '123456', null, null, null, 'fdsaf', null, null, null, null, '1');
INSERT INTO `user` VALUES ('89', 'mfk', 'mfk', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('90', 'as', 'sdfsdf', null, null, null, 'dsf', null, null, null, null, '1');
INSERT INTO `user` VALUES ('91', 'aaa', '222222', null, null, null, '222', null, null, null, null, '1');
INSERT INTO `user` VALUES ('92', '123123', '123', null, null, null, '1', null, null, null, null, '1');
INSERT INTO `user` VALUES ('93', 'lxm', 'lxm', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('94', 'fengyangfei', 'clever', null, null, null, 'clever', null, null, null, null, '1');
INSERT INTO `user` VALUES ('95', 'admin666', 'admin', null, null, null, '123123123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('96', 'label', '112233', null, null, null, 'label', null, null, null, null, '1');
INSERT INTO `user` VALUES ('97', 'admin12345', '123456', null, null, null, 'no\\', null, null, null, null, '1');
INSERT INTO `user` VALUES ('98', 'panbb_00', '910126', null, null, null, 'it', null, null, null, null, '1');
INSERT INTO `user` VALUES ('99', 'tengzhinei', 'qazwsx', null, null, null, 'qazwsx', null, null, null, null, '1');
INSERT INTO `user` VALUES ('100', 'wzf', '123456', null, null, null, 'other', null, null, null, null, '1');
INSERT INTO `user` VALUES ('101', '4545654', '123456', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('102', 'wzhelp', 'wzlhh7796', null, null, null, 'aaa', null, null, null, null, '1');
INSERT INTO `user` VALUES ('103', 'admin12', 'admin', null, null, null, 'admin', null, null, null, null, '1');
INSERT INTO `user` VALUES ('104', 'mkmkmk', 'mkmkmk', null, null, null, 'mkmkmk', null, null, null, null, '1');
INSERT INTO `user` VALUES ('105', 'admin11111', 'admin', null, null, null, '11', null, null, null, null, '1');
INSERT INTO `user` VALUES ('106', '3人', '214', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('107', '321', '123', null, null, null, '123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('108', 'mark', '123456', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('109', 'esview', 'esview', null, null, null, 'esview', null, null, null, null, '1');
INSERT INTO `user` VALUES ('110', '111111', '1', null, null, null, '1', null, null, null, null, '1');
INSERT INTO `user` VALUES ('111', 'tjuhujia', '123456', null, null, null, 'goodfellow', null, null, null, null, '1');
INSERT INTO `user` VALUES ('112', 'zhangli', '123456', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('113', 'operate', 'operate', null, null, null, 'operate', null, null, null, null, '1');
INSERT INTO `user` VALUES ('114', 'mytest', '888888', null, null, null, 'mytest', null, null, null, null, '1');
INSERT INTO `user` VALUES ('115', '1313', '1', null, null, null, '1', null, null, null, null, '1');
INSERT INTO `user` VALUES ('116', 'aaa1', 'aaa1', null, null, null, 'aaa1', null, null, null, null, '1');
INSERT INTO `user` VALUES ('117', 'slm', '123456', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('118', 'forversun', '13405121757Zhy', null, null, null, 'IT', null, null, null, null, '1');
INSERT INTO `user` VALUES ('124', 'yzebuy', 'qujiang88', null, null, null, 'del', null, null, null, null, '1');
INSERT INTO `user` VALUES ('125', 'vue', 'vue', null, null, null, 'vue', null, null, null, null, '1');
INSERT INTO `user` VALUES ('126', 'narc', 'narc.1991', null, null, null, 'narc', null, null, null, null, '1');
INSERT INTO `user` VALUES ('127', 'david', '123456', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('128', 'luo', '123456', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('129', 'adminx', 'admin', null, null, null, 'admin', null, null, null, null, '1');
INSERT INTO `user` VALUES ('130', 'shibo', 'nyist327', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('131', 'baozi', 'wo900416', null, null, null, 'fe', null, null, null, null, '1');
INSERT INTO `user` VALUES ('132', 'jinghao', 'jinghao', null, null, null, 'jinghao', null, null, null, null, '1');
INSERT INTO `user` VALUES ('133', '123321', '123321', null, null, null, '123321', null, null, null, null, '1');
INSERT INTO `user` VALUES ('134', '1111', '1111', null, null, null, '1111', null, null, null, null, '1');
INSERT INTO `user` VALUES ('135', 'nk1234', 'nk1234', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('136', 'alioli', '123456', null, null, null, 'ssss', null, null, null, null, '1');
INSERT INTO `user` VALUES ('137', 'whb', '123', null, null, null, '123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('138', 'jason', '123456', null, null, null, '的订单', null, null, null, null, '1');
INSERT INTO `user` VALUES ('139', '111222', '111', null, null, null, '111', null, null, null, null, '1');
INSERT INTO `user` VALUES ('140', 't1', 't1', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('141', '123123123123', '123123123123', null, null, null, '123123123123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('142', 'sadasdasd', 'sadasdasd', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('143', '12345', '123456', null, null, null, '123456', null, null, null, null, '1');
INSERT INTO `user` VALUES ('144', 'linzj', 'linzj', null, null, null, 'linzj', null, null, null, null, '1');
INSERT INTO `user` VALUES ('145', 'yuanlei', 'yuanlei945', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('146', 'jabilhourse', 'liuwenqi123', null, null, null, '133', null, null, null, null, '1');
INSERT INTO `user` VALUES ('147', 'uuuu', 'uuu', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('148', 'zpf', '123456', null, null, null, 'qwer', null, null, null, null, '1');
INSERT INTO `user` VALUES ('149', 'suen', 'sunwenda', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('150', '11111', '111111', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('151', 'a1212', '123123', null, null, null, '123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('152', '###', '###', null, null, null, '###', null, null, null, null, '1');
INSERT INTO `user` VALUES ('153', 'abc', 'abc', null, null, null, 'abc', null, null, null, null, '1');
INSERT INTO `user` VALUES ('154', 'chujiu', 'chujiu2017', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('155', '2233q22', '2233q22', null, null, null, '123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('156', 'Oldeng', 'Oldeng', null, null, null, 'Oldeng', null, null, null, null, '1');
INSERT INTO `user` VALUES ('157', '123456', '123456', null, null, null, '12346', null, null, null, null, '1');
INSERT INTO `user` VALUES ('158', 'r00t', 'root', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('159', 'q857277', 'q456789', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('160', 'test12345', '123', null, null, null, 'work', null, null, null, null, '1');
INSERT INTO `user` VALUES ('161', 'eere', '12345', null, null, null, '3333', null, null, null, null, '1');
INSERT INTO `user` VALUES ('162', 'ababab', 'aaaa', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('163', 'rainsuki', '123456', null, null, null, 'IT', null, null, null, null, '1');
INSERT INTO `user` VALUES ('164', 'william', '123', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('165', 'kk', 'kkkkkk', null, null, null, '123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('166', 'liao', '123456', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('167', 'pxsqwe', 'pxsqwe', null, null, null, 'test', null, null, null, null, '1');
INSERT INTO `user` VALUES ('168', 'acd', '123456', null, null, null, '1223', null, null, null, null, '1');
INSERT INTO `user` VALUES ('169', '22', '22', null, null, null, '22', null, null, null, null, '1');
INSERT INTO `user` VALUES ('170', 'admin888', 'admin', null, null, null, '123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('171', 'abc12345678', 'abc12345678', null, null, null, 'sdsdd', null, null, null, null, '1');
INSERT INTO `user` VALUES ('172', 'lcqjiyi', '123456', null, null, null, 'it', null, null, null, null, '1');
INSERT INTO `user` VALUES ('173', 'wwww', 'wwww', null, null, null, 'wwww', null, null, null, null, '1');
INSERT INTO `user` VALUES ('174', '222', '22', null, null, null, '22', null, null, null, null, '1');
INSERT INTO `user` VALUES ('175', 'aa', 'aaaaaa', null, null, null, 'aa', null, null, null, null, '1');
INSERT INTO `user` VALUES ('176', 'hahafk', '123456', null, null, null, 'haha', null, null, null, null, '1');
INSERT INTO `user` VALUES ('177', 'wang', '123456', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('178', 'a8895', '123', null, null, null, '123', null, null, null, null, '1');
INSERT INTO `user` VALUES ('179', 'JulianZhang', 'zxcqwe123', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('180', '211', '2', null, null, null, '2', null, null, null, null, '1');
INSERT INTO `user` VALUES ('181', 'lida', 'lida', null, null, null, 'aaa', null, null, null, null, '1');
INSERT INTO `user` VALUES ('182', 'abc123aa', 'LbF-5ms-5fL-p6o', null, null, null, 'ssss', null, null, null, null, '1');
INSERT INTO `user` VALUES ('183', '33', '1', null, null, null, '', null, null, null, null, '1');
INSERT INTO `user` VALUES ('184', 'sanfran', '19920211', null, null, null, 'frontend', null, null, null, null, '1');
INSERT INTO `user` VALUES ('185', '123456hhh', '123456', null, null, null, '123456', null, null, null, null, '1');
INSERT INTO `user` VALUES ('186', 'abcd', 'abcd', null, null, null, '111', null, null, null, null, '1');
INSERT INTO `user` VALUES ('187', 'thomas', '123456', null, null, null, '123456', null, null, null, null, '1');
INSERT INTO `user` VALUES ('188', 'll', 'll', null, null, null, 'll', null, null, null, null, '1');
